{"version":3,"sources":["Components/CreateJobForm.jsx","Components/Footer.jsx","Components/Button.jsx","Components/NavItem.jsx","Components/icons/arrow.svg","Components/icons/bolt.svg","Components/icons/profile_icon2.svg","Components/icons/accepted_icon.svg","Components/icons/owned_icon.svg","Components/icons/logout_icon.svg","Components/DropdownMenu.jsx","Components/icons/menu_icon.svg","graphql/queries.js","Components/NavbarOther.jsx","Pages/CreateJob.jsx","Components/SidebarData.jsx","Components/DashboardSidebar.jsx","graphql/mutations.js","redux/user.js","Components/LoginForm.jsx","Pages/Login.jsx","Components/Testimonials.jsx","Components/RegisterForm.jsx","Pages/Register.jsx","Components/CardItem.jsx","Components/Cards.jsx","Components/HeroSection.jsx","Components/Navbar.jsx","Pages/Home.jsx","Components/HowToSection.jsx","Components/PostJobCards.jsx","Components/HowToTabs.jsx","Pages/HowTo.jsx","Components/Modal.jsx","Pages/ViewJob.jsx","Components/UserDetails.jsx","Pages/Dashboard/Profile.jsx","Pages/Dashboard/CreatedJobs.jsx","Pages/Dashboard/AcceptedJobs.jsx","Pages/Dashboard/Support.jsx","Components/ImageSlider.jsx","Pages/LabelJob.jsx","Components/HowToFindSection.jsx","Components/FindJobCards.jsx","Pages/HowToFind.jsx","App.jsx","redux/store.js","index.js"],"names":["CreateJob","useState","labels","setLabels","currentTotal","setCurrentTotal","images","setImages","useEffect","document","querySelector","value","Calculate","e","preventDefault","currentCredits","toast","error","clearWaitingQueue","className","encType","onSubmit","a","form","FormData","length","map","label","append","JSON","stringify","query","variables","files","title","description","credits","parseInt","num_partitions","i","push","toString","file","id","loading","axios","post","headers","Authorization","Cookies","get","then","update","render","type","autoClose","isLoading","catch","style","padding","TextField","fullWidth","variant","multiline","rows","defaultValue","imageList","dragProps","isDragging","image","index","alt","src","data_url","onImageUpload","onImageRemoveAll","errors","maxNumber","acceptType","maxFileSize","resolution","onClick","currentLabels","nanoid","p","onChange","target","x","placeholder","width","height","margin","filter","multiple","addUpdateIndex","dataURLKey","onImageUpdate","onImageRemove","color","textAlign","Footer","isJwt","useSelector","state","user","jwt","to","STYLES","SIZES","Button","children","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","NavItem","props","open","setOpen","icon","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgProfileIcon2","_ref","svgRef","titleId","xmlns","viewBox","ref","d","SvgAcceptedIcon","fillRule","clipRule","SvgOwnedIcon","SvgLogoutIcon","DropdownMenu","activeMenu","setActiveMenu","menuHeight","setMenuHeight","dropdownRef","useRef","DropdownItem","goToMenu","leftIcon","rightIcon","current","firstChild","offsetHeight","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","el","href","remove","window","location","reload","SvgMenuIcon","GET_JOBS","gql","GET_ME_AND_DELETED_JOBS","GET_ME","GET_ACCEPTED_JOBS","GET_CREATED_JOBS","GET_LABEL_JOB_INFO","GET_SAVED_STATE","NavbarOther","useQuery","data","click","setClick","button","setButton","username","me","closeMobileMenu","showButton","innerWidth","addEventListener","CreateJobForm","SidebarData","path","DashboardSidebar","sidebar","setSidebar","showSidebar","Provider","item","REGISTER_USER","LOGIN_USER","ACCEPT_JOB","DELETE_JOB","SAVE_STATE","EDIT_PROFILE","userSlice","createSlice","name","initialState","balance","email","reducers","updateUsername","action","payload","updateBalance","updateEmail","updateJWT","actions","Login","userEmail","setUserEmail","password","setPassword","useMutation","refetchQueries","login","dispatch","useDispatch","set","console","log","message","position","POSITION","BOTTOM_CENTER","LoginForm","Testimonials","showArrows","infiniteLoop","showThumbs","showStatus","autoPlay","interval","Component","Register","setUsername","setEmail","confirmPass","setConfirmPass","errorMsg","registerMutation","submitForm","isValid","test","success","useHistory","RegisterForm","CardItem","text","Cards","HeroSection","loop","muted","paddingLeft","Navbar","navbar","setNavbar","scrollY","Home","HowToSection","PostJobCards","HowToTabs","HowTo","Background","styled","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","MdClose","Modal","showModal","setShowModal","destination","uploader","buttonLabel","deletable","history","jwt1","modalRef","animation","useSpring","config","duration","opacity","transform","AcceptJob","deleteJob","keyPress","delLoading","delError","delData","useCallback","removeEventListener","swal","buttons","dangerMode","job_id","warning","pathname","prev","ViewJob","jobs","viewJobs","job","preview_images","job_owner","currentId","getElementById","display","openModal","UserDetails","EditProfile","showError","userNameChange","passwordChange","htmlFor","Dashboard","deletedJobs","jobstring","join","CreatedJobs","ownedJobs","AcceptedJobs","acceptedJobs","currentID","Support","ImageSlider","slides","indexCallback","setCurrent","Array","isArray","slide","image_ids","LabelJob","setIndex","assignedLabels","setAssignedLabels","setSlides","checkRadioButton","image_id","checked","is_complete","checkCompletion","partition_id","labelJobInfo","restoredData","skip","submitJob","temp","labelJobState","tempSlides","assignLabel","saveState","buttonID","Number","values","HowToFindSection","HowToFind","FindJobCards","App","limit","exact","component","authorized","Profile","store","configureStore","reducer","userReducer","errorLink","onError","graphQLErrors","networkError","httpLink","HttpLink","uri","link","ApolloLink","from","authMiddleware","operation","forward","setContext","client","ApolloClient","concat","cache","InMemoryCache","credentials","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.334c987f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport React from 'react'\nimport '../Styles/CreateJob.css'\nimport TextField from '@material-ui/core/TextField'\nimport { nanoid } from 'nanoid'\nimport ImageUploading from 'react-images-uploading'\nimport { Redirect } from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport { toast } from 'react-toastify'\nimport FormData from 'form-data'\nimport axios from 'axios'\n\nconst CreateJob = () => {\n   const [labels, setLabels] = useState([])\n   const [currentTotal, setCurrentTotal] = useState(0)\n   const [images, setImages] = useState([])\n   const onChange = (imageList, addUpdateIndex) => {\n      setImages(imageList)\n   }\n\n   useEffect(() => {\n      document.querySelector('#totalCredits').value = 0\n   }, [])\n\n   const Calculate = (e) => {\n      e.preventDefault()\n      let currentCredits = document.querySelector('#credits').value\n      // let currentLabellers = document.querySelector('#numLabellers').value\n      if (currentCredits === 0) return\n      if (currentCredits <= 0 || currentCredits === '') {\n         toast.error('invalid number of credits')\n         toast.clearWaitingQueue()\n         return\n      }\n      let newTotal = currentCredits\n      setCurrentTotal(newTotal)\n   }\n   return (\n      <div className=\"createJob_page\">\n         <h1>Create your Job</h1>\n         <form\n            encType=\"multipart/form-data\"\n            onSubmit={async (e) => {\n               e.preventDefault()\n               Calculate(e)\n               const form = new FormData()\n               //TODO Dont allow more partitions than images\n               if (\n                  images.length <=\n                  document.querySelector('#imgPerSection').value\n               ) {\n                  toast.error(\n                     'Invalid number of Partitions, make sure partitions does not exceed images'\n                  )\n                  return\n               }\n               //! Begin Error checking\n\n               if (document.querySelector('#title').value === '') {\n                  toast.error('Please enter a valid job title')\n                  // toast.clearWaitingQueue()\n                  return\n               }\n               if (document.querySelector('#description').value === '') {\n                  toast.error('Please enter a valid job description')\n                  // toast.clearWaitingQueue()\n                  return\n               }\n               if (labels.map((label) => label.label).length === 0) {\n                  toast.error('Please enter at least one label')\n                  // toast.clearWaitingQueue()\n                  return\n               }\n               if (\n                  document.querySelector('#imgPerSection').value === 0 ||\n                  document.querySelector('#imgPerSection').value === ''\n               ) {\n                  toast.error('Invalid number of partitions')\n                  // toast.clearWaitingQueue()\n                  return\n               }\n               //! End Error Checking\n\n               form.append(\n                  'operations',\n                  JSON.stringify({\n                     query: 'mutation ($files: [Upload], $title: String!, $description: String!, $credits: Int!, $num_partitions: Int!, $labels: [String]!){\\n  createJob (files: $files, title: $title, description: $description, credits: $credits, num_partitions: $num_partitions, labels: $labels){\\n    job_id\\n  }\\n}',\n                     variables: {\n                        files: [],\n                        title: document.querySelector('#title').value,\n                        description:\n                           document.querySelector('#description').value,\n\n                        credits: parseInt(currentTotal),\n                        num_partitions: parseInt(\n                           document.querySelector('#imgPerSection').value\n                        ),\n                        labels: labels.map((label) => label.label)\n                     }\n                  })\n               )\n\n               let variables = {}\n               for (let i = 0; i < images.length; i++) {\n                  variables[i] = []\n                  variables[i].push(`variables.files.${i}`)\n               }\n               form.append('map', JSON.stringify(variables))\n\n               for (let i = 0; i < images.length; i++) {\n                  form.append(i.toString(), images[i].file)\n               }\n               const id = toast.loading('Please wait...')\n\n               axios\n                  .post(\n                     'https://data-labelling-server.herokuapp.com/graphql',\n                     form,\n                     {\n                        headers: {\n                           Authorization: 'Bearer ' + Cookies.get('jwt') || null\n                        }\n                     }\n                  )\n                  .then(() => {\n                     toast.update(id, {\n                        render: 'Your Job was successfully created',\n                        type: 'success',\n                        autoClose: 3000,\n                        isLoading: false\n                     })\n                     // toast.success('Your Job was successfully created')\n                     toast.clearWaitingQueue()\n                  })\n                  .catch(() => {\n                     toast.error('Failed to Create Your job')\n                     toast.clearWaitingQueue()\n                  })\n            }}\n         >\n            <div className=\"createJob_mainForm\">\n               <div className=\"createJob_jobInfo\">\n                  <h3 style={{ padding: '1rem' }}>Job Info:</h3>\n                  <div className=\"textField\">\n                     <TextField\n                        id=\"title\"\n                        fullWidth\n                        label=\"Title\"\n                        variant=\"outlined\"\n                     />\n                  </div>\n                  <div className=\"textField\">\n                     <TextField\n                        id=\"description\"\n                        label=\"Description\"\n                        fullWidth\n                        multiline\n                        rows={4}\n                        defaultValue=\"\"\n                        variant=\"outlined\"\n                     />{' '}\n                  </div>\n                  {({ imageList, dragProps, isDragging }) => (\n                     <div {...dragProps}>\n                        {isDragging ? 'Drop here please' : 'Upload space'}\n                        {imageList.map((image, index) => (\n                           <img key={index} alt=\"img\" src={image.data_url} />\n                        ))}\n                     </div>\n                  )}\n\n                  {({ imageList, onImageUpload, onImageRemoveAll, errors }) =>\n                     errors && (\n                        <div>\n                           {errors.maxNumber && (\n                              <span>\n                                 Number of selected images exceed maxNumber\n                              </span>\n                           )}\n                           {errors.acceptType && (\n                              <span>Your selected file type is not allow</span>\n                           )}\n                           {errors.maxFileSize && (\n                              <span>Selected file size exceed maxFileSize</span>\n                           )}\n                           {errors.resolution && (\n                              <span>\n                                 Selected file is not match your desired\n                                 resolution\n                              </span>\n                           )}\n                        </div>\n                     )\n                  }\n                  <div className=\"labelSection\">\n                     <button\n                        className=\"btn-hover\"\n                        type=\"button\"\n                        onClick={() => {\n                           if (labels.length > 4) return\n                           setLabels((currentLabels) => [\n                              ...currentLabels,\n                              {\n                                 id: nanoid(),\n                                 label: ''\n                              }\n                           ])\n                        }}\n                     >\n                        Add Label\n                     </button>\n                     {labels.map((p) => {\n                        return (\n                           <div key={p.id}>\n                              <TextField\n                                 onChange={(e) => {\n                                    const label = e.target.value\n                                    setLabels((currentLabels) =>\n                                       currentLabels.map((x) =>\n                                          x.id === p.id\n                                             ? {\n                                                  ...x,\n                                                  label\n                                               }\n                                             : x\n                                       )\n                                    )\n                                 }}\n                                 placeholder=\"Please enter a Label\"\n                                 value={p.label}\n                              />\n                              <button\n                                 className=\"btn-hover\"\n                                 style={{\n                                    width: '10%',\n                                    height: '100%',\n                                    margin: '10px '\n                                 }}\n                                 onClick={() => {\n                                    setLabels((currentLabels) =>\n                                       currentLabels.filter(\n                                          (x) => x.id !== p.id\n                                       )\n                                    )\n                                 }}\n                              >\n                                 x\n                              </button>\n                           </div>\n                        )\n                     })}\n                  </div>\n               </div>\n               <div className=\"createJob_imageSection\">\n                  <h3>Please upload your images here:</h3>\n\n                  <ImageUploading\n                     multiple\n                     value={images}\n                     onChange={onChange}\n                     dataURLKey=\"data_url\"\n                  >\n                     {({\n                        imageList,\n                        onImageUpload,\n                        onImageRemoveAll,\n                        onImageUpdate,\n                        onImageRemove,\n                        isDragging,\n                        dragProps\n                     }) => (\n                        // write your building UI\n                        <div className=\"upload__image-wrapper\">\n                           <div className=\"upload__button-section\">\n                              <button\n                                 className=\"btn-hover\"\n                                 style={isDragging ? { color: 'red' } : null}\n                                 onClick={(e) => {\n                                    e.preventDefault()\n                                    onImageUpload()\n                                 }}\n                                 {...dragProps}\n                              >\n                                 Click or Drop here\n                              </button>\n                              &nbsp;\n                              <button\n                                 className=\"btn-hover\"\n                                 onClick={(e) => {\n                                    onImageRemoveAll()\n                                    e.preventDefault()\n                                 }}\n                              >\n                                 Remove all images\n                              </button>\n                           </div>\n\n                           <h3 style={{ textAlign: 'center' }}>\n                              Total Images : {imageList.length}\n                           </h3>\n                           <div className=\"createJob_imagePrev\">\n                              {imageList.map((image, index) => (\n                                 <div key={index} className=\"image-item\">\n                                    <img\n                                       src={image.data_url}\n                                       alt=\"\"\n                                       width=\"100\"\n                                    />\n                                    {/* <div className=\"image-item__btn-wrapper\">\n                                       <button\n                                          className=\"btn-hover\"\n                                          onClick={(e) => {\n                                             onImageUpdate(index)\n                                             e.preventDefault()\n                                          }}\n                                       >\n                                          Update\n                                       </button>\n                                       <button\n                                          className=\"btn-hover\"\n                                          onClick={(e) => {\n                                             onImageRemove(index)\n                                             e.preventDefault()\n                                          }}\n                                       >\n                                          Remove\n                                       </button>\n                                    </div>  */}\n                                 </div>\n                              ))}\n                           </div>\n                        </div>\n                     )}\n                  </ImageUploading>\n               </div>\n\n               <div className=\"createJob_credit-section\">\n                  <h3>Credits Info:</h3>\n\n                  <TextField\n                     id=\"credits\"\n                     label=\"Credits\"\n                     type=\"number\"\n                     variant=\"outlined\"\n                  />\n\n                  <TextField\n                     id=\"imgPerSection\"\n                     label=\"Number of Partitions\"\n                     type=\"number\"\n                     variant=\"outlined\"\n                  />\n                  <h2 id=\"totalCredits\">Total: {currentTotal}</h2>\n                  <button className=\"btn-hover\" onClick={Calculate}>\n                     Calculate\n                  </button>\n               </div>\n            </div>\n            <div className=\"createJob_submitSection\">\n               <button\n                  className=\"btn-hover\"\n                  variant=\"contained\"\n                  color=\"default\"\n                  type=\"submit\"\n               >\n                  Submit Job\n               </button>\n            </div>\n         </form>\n      </div>\n   )\n}\n\nexport default CreateJob\n","import React from 'react'\nimport '../Styles/Footer.css'\nimport { Link } from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport { useSelector } from 'react-redux'\n\nfunction Footer() {\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt != '') {\n      isJwt = true\n   }\n\n   return (\n      <div className=\"footer-container\">\n         <div className=\"footer-links\">\n            <div className=\"footer-link-wrapper\">\n               <div className=\"footer-link-items\">\n                  <h2>Main Pages</h2>\n                  <Link to=\"/\">Home</Link>\n                  <Link to=\"/view-job\">Find Job</Link>\n                  <Link to=\"/how-to\">How it Works</Link>\n               </div>\n            </div>\n            <div className=\"footer-link-wrapper\">\n               {isJwt ? (\n                  <div></div>\n               ) : (\n                  <div className=\"footer-link-items\">\n                     <h2>Profile</h2>\n                     <Link to=\"/login\">Login</Link>\n                     <Link to=\"/register\">Sign Up</Link>\n                  </div>\n               )}\n               {!isJwt ? (\n                  <div></div>\n               ) : (\n                  <div className=\"footer-link-items\">\n                     <h2>Profile</h2>\n                     <Link to=\"/create-job\">Create Job</Link>\n                     <Link to=\"/dashboard/created-jobs\">My Jobs</Link>\n                     <Link to=\"/dashboard/accepted-jobs\">Accepted Jobs</Link>\n                     <Link to=\"/dashboard/profile\">Edit Profile</Link>\n                  </div>\n               )}\n               <div className=\"footer-link-items\">\n                  <h2>About Us</h2>\n                  <Link to=\"/\">Our Company</Link>\n                  <Link to=\"/\">Terms and Conditions</Link>\n               </div>\n            </div>\n         </div>\n         <section className=\"social-media\">\n            <div className=\"social-media-wrap\">\n               <div className=\"footer-logo\">\n                  <Link to=\"/\" className=\"social-logo\">\n                     <img src=\"./images/login_logo.png\" alt=\"bug\" height={60} />\n                  </Link>\n               </div>\n               <small className=\"website-rights\">LABEL.ml © 2021</small>\n            </div>\n         </section>\n      </div>\n   )\n}\n\nexport default Footer\n","import React from 'react'\nimport '../Styles/Button.css'\nimport { Link } from 'react-router-dom'\n\nconst STYLES = ['btn-hover', 'btn--outline', 'btn--test']\n\nconst SIZES = ['btn--medium', 'btn--large', 'btn--small']\n\nexport const Button = ({\n   id,\n   children,\n   type,\n   onClick,\n   buttonStyle,\n   buttonSize,\n   to\n}) => {\n   const checkButtonStyle = STYLES.includes(buttonStyle)\n      ? buttonStyle\n      : STYLES[0]\n\n   const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n   return (\n      <Link to={to} className=\"btn-mobile\">\n         <button\n            id={id}\n            className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n            onClick={onClick}\n            type={type}\n         >\n            {children}\n         </button>\n      </Link>\n   )\n}\n","import '../Styles/DropdownMenu.css'\n\nimport React, { useState, useEffect, useRef } from 'react'\n\nfunction NavItem(props) {\n   const [open, setOpen] = useState(false)\n\n   return (\n      <li className=\"navigation-item\">\n         <a className=\"icon-button\" onClick={() => setOpen(!open)}>\n            {props.icon}\n         </a>\n\n         {open && props.children}\n      </li>\n   )\n}\n\nexport default NavItem\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\",\n    className: \"\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.2e552680.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBolt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 320 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M296 160H180.6l42.6-129.8C227.2 15 215.7 0 200 0H56C44 0 33.8 8.9 32.2 20.8l-32 240C-1.7 275.2 9.5 288 24 288h118.7L96.6 482.5c-3.6 15.2 8 29.5 23.3 29.5 8.4 0 16.4-4.4 20.8-12l176-304c9.3-15.9-2.2-36-20.7-36z\",\n    className: \"\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBolt);\nexport default __webpack_public_path__ + \"static/media/bolt.bbfd3d7a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgProfileIcon2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgProfileIcon2);\nexport default __webpack_public_path__ + \"static/media/profile_icon2.024a878c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAcceptedIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.403 24h-13.403v-22h3c1.231 0 2.181-1.084 3-2h8c.821.916 1.772 2 3 2h3v9.15c-.485-.098-.987-.15-1.5-.15l-.5.016v-7.016h-4l-2 2h-3.897l-2.103-2h-4v18h9.866c.397.751.919 1.427 1.537 2zm5.097-11c3.035 0 5.5 2.464 5.5 5.5s-2.465 5.5-5.5 5.5c-3.036 0-5.5-2.464-5.5-5.5s2.464-5.5 5.5-5.5zm0 2c1.931 0 3.5 1.568 3.5 3.5s-1.569 3.5-3.5 3.5c-1.932 0-3.5-1.568-3.5-3.5s1.568-3.5 3.5-3.5zm2.5 4h-3v-3h1v2h2v1zm-15.151-4.052l-1.049-.984-.8.823 1.864 1.776 3.136-3.192-.815-.808-2.336 2.385zm6.151 1.052h-2v-1h2v1zm2-2h-4v-1h4v1zm-8.151-4.025l-1.049-.983-.8.823 1.864 1.776 3.136-3.192-.815-.808-2.336 2.384zm8.151 1.025h-4v-1h4v1zm0-2h-4v-1h4v1zm-5-6c0 .552.449 1 1 1 .553 0 1-.448 1-1s-.447-1-1-1c-.551 0-1 .448-1 1z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAcceptedIcon);\nexport default __webpack_public_path__ + \"static/media/accepted_icon.ae0c6b08.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOwnedIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 2c1.695 1.942 2.371 3 4 3h13v17h-24v-20h7zm4 5c-2.339 0-3.537-1.388-4.917-3h-4.083v16h20v-13h-11zm2 6h3v2h-3v3h-2v-3h-3v-2h3v-3h2v3z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOwnedIcon);\nexport default __webpack_public_path__ + \"static/media/owned_icon.860021b5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogoutIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 9v-4l8 7-8 7v-4h-8v-6h8zm-16-7v20h14v-2h-12v-16h12v-2h-14z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoutIcon);\nexport default __webpack_public_path__ + \"static/media/logout_icon.9fbf96f0.svg\";\nexport { ForwardRef as ReactComponent };","import '../Styles/DropdownMenu.css'\nimport { ReactComponent as ArrowIcon } from './icons/arrow.svg'\nimport { ReactComponent as BoltIcon } from './icons/bolt.svg'\nimport { ReactComponent as ProfileIcon } from './icons/profile_icon2.svg'\nimport { ReactComponent as AcceptedIcon } from './icons/accepted_icon.svg'\nimport { ReactComponent as OwnedIcon } from './icons/owned_icon.svg'\nimport { ReactComponent as LogOutIcon } from './icons/logout_icon.svg'\nimport Cookies from 'js-cookie'\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nfunction DropdownMenu() {\n   const [activeMenu, setActiveMenu] = useState('main')\n   const [menuHeight, setMenuHeight] = useState(null)\n   const dropdownRef = useRef(null)\n\n   const deleteJWT = () => {\n      Cookies.remove('jwt') //deletes the jwt token on signout\n      window.location.reload()\n      // toast.warning(\"You have logged out\")\n   }\n\n   useEffect(() => {\n      setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\n   }, [])\n\n   function calcHeight(el) {\n      const height = el.offsetHeight\n      setMenuHeight(height)\n   }\n\n   function DropdownItem(props) {\n      return (\n         <div\n            className=\"menu-item\"\n            onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}\n         >\n            <span className=\"icon-button\">{props.leftIcon}</span>\n            {props.children}\n            <span className=\"icon-right\">{props.rightIcon}</span>\n         </div>\n      )\n   }\n\n   return (\n      <div\n         className=\"dropdown\"\n         style={{ height: menuHeight }}\n         ref={dropdownRef}\n      >\n         <CSSTransition\n            in={activeMenu === 'main'}\n            timeout={500}\n            classNames=\"menu-primary\"\n            unmountOnExit\n            onEnter={calcHeight}\n         >\n            <div className=\"menu\">\n               <DropdownItem leftIcon={<ProfileIcon />}>\n                  <a href=\"#/dashboard/profile\">My Profile</a>\n               </DropdownItem>\n               <DropdownItem leftIcon={<AcceptedIcon />}>\n                  <a href=\"#/dashboard/accepted-jobs\">Accepted Jobs</a>\n               </DropdownItem>\n               <DropdownItem leftIcon={<OwnedIcon />}>\n                  <a href=\"#/dashboard/created-jobs\">Created Jobs</a>\n               </DropdownItem>\n               <DropdownItem leftIcon={<LogOutIcon />}>\n                  <a onClick={deleteJWT}>Sign Out</a>\n               </DropdownItem>\n            </div>\n         </CSSTransition>\n\n         {/* <CSSTransition\n            in={activeMenu === 'settings'}\n            timeout={500}\n            classNames=\"menu-secondary\"\n            unmountOnExit\n            onEnter={calcHeight}\n         >\n            <div className=\"menu\">\n               <DropdownItem goToMenu=\"main\" leftIcon={<ArrowIcon />}>\n                  <h2>My Tutorial</h2>\n               </DropdownItem>\n               <DropdownItem leftIcon={<BoltIcon />}>HTML</DropdownItem>\n               <DropdownItem leftIcon={<BoltIcon />}>CSS</DropdownItem>\n               <DropdownItem leftIcon={<BoltIcon />}>JavaScript</DropdownItem>\n               <DropdownItem leftIcon={<BoltIcon />}>Awesome!</DropdownItem>\n            </div>\n         </CSSTransition>\n\n         <CSSTransition\n            in={activeMenu === 'animals'}\n            timeout={500}\n            classNames=\"menu-secondary\"\n            unmountOnExit\n            onEnter={calcHeight}\n         >\n            <div className=\"menu\">\n               <DropdownItem goToMenu=\"main\" leftIcon={<ArrowIcon />}>\n                  <h2>Animals</h2>\n               </DropdownItem>\n               <DropdownItem leftIcon=\"🦘\">Kangaroo</DropdownItem>\n               <DropdownItem leftIcon=\"🐸\">Frog</DropdownItem>\n               <DropdownItem leftIcon=\"🦋\">Horse?</DropdownItem>\n               <DropdownItem leftIcon=\"🦔\">Hedgehog</DropdownItem>\n            </div>\n         </CSSTransition> */}\n      </div>\n   )\n}\n\nexport default DropdownMenu\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenuIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenuIcon);\nexport default __webpack_public_path__ + \"static/media/menu_icon.51815719.svg\";\nexport { ForwardRef as ReactComponent };","import { gql } from '@apollo/client'\n\nconst GET_USERS = gql`\n   query Users {\n      users {\n         balance\n         avatar\n      }\n   }\n`\n\nconst GET_JOBS = gql`\n   query ViewJobs {\n      viewJobs {\n         created_at\n         credits\n         description\n         job_id\n         preview_images\n         title\n         job_owner {\n            username\n         }\n      }\n   }\n`\n\nconst GET_ME_AND_DELETED_JOBS = gql`\n   query getDeletedJobs{\n      deletedJobs{\n      job_id\n      title\n   }\n      me {\n         username\n         email\n         avatar\n         balance\n      }\n   }\n   `\n\n\nconst GET_DELETED_JOBS =gql`\n   query getDeletedJobs{\n      deletedJobs{\n         job_id\n         title\n      }\n   }\n   `\n\nconst GET_ME = gql`\n   query getCurrentUser {\n      me {\n         username\n         email\n         avatar\n         balance\n      }\n   }\n   `\nconst GET_ACCEPTED_JOBS = gql`\n   query acceptedJobs {\n      acceptedJobs {\n         job_owner {\n            username\n         }\n         title\n         credits\n         job_id\n         description\n         preview_images\n      }\n   }\n   `\nconst GET_CREATED_JOBS = gql`\n   query createdJobs {\n      ownedJobs {\n         title\n         credits\n         job_id\n         description\n         preview_images\n      }\n   }\n   `\nconst GET_LABEL_JOB_INFO = gql`\n   query LabelJobInfo($job_id: ID!) {\n      labelJobInfo(job_id: $job_id) {\n         partition_id\n         image_ids\n         images\n         labels\n         title\n      }\n   }\n   `\n\nconst GET_SAVED_STATE = gql`\n   query LabelJobState($partition_id: ID!) {\n      labelJobState(partition_id: $partition_id) {\n         image_ids\n         labels\n      }\n   }\n   `\n\nexport {\n   GET_USERS,\n   GET_JOBS,\n   GET_LABEL_JOB_INFO,\n   GET_SAVED_STATE,\n   GET_ME,\n   GET_ME_AND_DELETED_JOBS,\n   GET_ACCEPTED_JOBS,\n   GET_CREATED_JOBS,\n   GET_DELETED_JOBS\n}\n","import React, { useState, useEffect } from 'react'\nimport { Button } from './Button'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport '../Styles/Navbar_other.css'\nimport NavItem from './NavItem'\nimport DropdownMenu from './DropdownMenu'\nimport { ReactComponent as MenuIcon } from './icons/menu_icon.svg'\nimport { GET_ME } from '../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport { toast } from 'react-toastify'\nimport ReactLoading from 'react-loading'\n\nfunction NavbarOther() {\n   const { loading, error, data } = useQuery(GET_ME)\n   const [click, setClick] = useState(false)\n   const [button, setButton] = useState(true)\n   let username = useSelector((state) => state.user.username)\n   if (data) {\n      if (data.me) {\n         if (!loading) {\n            username = data.me.username\n         }\n      }\n   }\n   if(error){\n      toast.error(\"some error occured\")\n   }\n   const handleClick = () => setClick(!click)\n   const closeMobileMenu = () => setClick(false)\n\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt !== '') {\n      isJwt = true\n   }\n\n   // const deleteJWT = () => {\n   //    Cookies.remove('jwt') //deletes the jwt token on signout\n   //    window.location.reload()\n   //    // toast.warning(\"You have logged out\")\n   // }\n\n   const showButton = () => {\n      if (window.innerWidth <= 960) {\n         setButton(false)\n      } else {\n         setButton(true)\n      }\n   }\n\n   useEffect(() => {\n      showButton()\n   }, [])\n\n   window.addEventListener('resize', showButton)\n\n   return (\n      <nav className=\"navbar-other\">\n         <div className=\"navbar-container\">\n            <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\n               <img src=\"./images/logo(white).png\" alt=\"bug\" height={120} />\n            </Link>\n            <div className=\"menu-icon\" onClick={handleClick}>\n               <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n            </div>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n               <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\n                     Home\n                  </Link>\n               </li>\n               {/* {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/dashboard\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Dashboard\n                     </Link>\n                  </li>\n               )} */}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/how-to\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How it Works\n                  </Link>\n               </li>\n               {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/create-job\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Create Job\n                     </Link>\n                  </li>\n               )}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/view-job\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     Find A Job\n                  </Link>\n               </li>\n\n               <li>\n                  <Link\n                     to=\"/login\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Login\n                  </Link>\n               </li>\n               <li>\n                  <Link\n                     to=\"/register\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Sign Up\n                  </Link>\n               </li>\n            </ul>\n\n            {button && !isJwt ? (\n               <Button buttonStyle=\"btn--outline\" to=\"/login\">\n                  Login\n               </Button>\n            ) : (\n               <div></div>\n            )}\n\n            {button && isJwt ? (\n               <div className=\"navbar__username\">\n                  <div className=\"username__label\">\n                     {loading ? (\n                        <ReactLoading\n                           type={'spin'}\n                           // color={'black'}\n                           height={'20px'}\n                           color={'#000000'}\n                           width={'20px'}\n                           // className=\"acceptedJob__loadingSpin\"\n                        />\n                     ) : (\n                        <b>{username}</b>\n                     )}\n                  </div>\n                  <NavItem icon={<MenuIcon />}>\n                     <DropdownMenu></DropdownMenu>\n                  </NavItem>\n               </div>\n            ) : (\n               <div></div>\n            )}\n            {/* {button && isJwt ? (\n               <Button buttonStyle=\"btn--outline\" onClick={deleteJWT}>\n                  Sign Out\n               </Button>\n            ) : (\n               <div></div>\n            )} */}\n            {button && !isJwt ? (\n               <Button\n                  buttonStyle=\"btn--primary\"\n                  buttonSize=\"btn--small\"\n                  to=\"/register\"\n               >\n                  Sign Up\n               </Button>\n            ) : (\n               <div></div>\n            )}\n         </div>\n      </nav>\n   )\n}\n\nexport default NavbarOther\n","import React from 'react'\nimport CreateJobForm from '../Components/CreateJobForm'\nimport Footer from '../Components/Footer'\nimport NavbarOther from '../Components/NavbarOther'\nconst CreateJob = () => {\n   return (\n      <div>\n         <NavbarOther />\n         <CreateJobForm />\n         <Footer />\n      </div>\n   )\n}\n\nexport default CreateJob\n","import React from 'react'\nimport * as FaIcons from 'react-icons/fa'\nimport * as AiIcons from 'react-icons/ai'\nimport * as IoIcons from 'react-icons/io'\n\nexport const SidebarData = [\n   {\n      title: 'Home',\n      path: '/',\n      icon: <AiIcons.AiFillHome />,\n      className: 'dash--nav-text'\n   },\n   {\n      title: 'Profile',\n      path: '/dashboard/profile',\n      icon: <IoIcons.IoMdPerson />,\n      className: 'dash--nav-text'\n   },\n   {\n      title: 'Accepted Jobs',\n      path: '/dashboard/accepted-jobs',\n      icon: <IoIcons.IoIosPaper />,\n      className: 'dash--nav-text'\n   },\n   {\n      title: 'Created Jobs',\n      path: '/dashboard/created-jobs',\n      icon: <FaIcons.FaCartPlus />,\n      className: 'dash--nav-text'\n   }\n]\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport * as FaIcons from 'react-icons/fa'\nimport * as AiIcons from 'react-icons/ai'\nimport { SidebarData } from './SidebarData'\nimport '../Styles/DashboardNav.css'\nimport { IconContext } from 'react-icons'\nimport { useSelector } from 'react-redux'\n\nconst DashboardSidebar = () => {\n   const jwt = useSelector((state) => state.user.jwt)\n   const [sidebar, setSidebar] = useState(false)\n\n   const showSidebar = () => setSidebar(!sidebar)\n\n   // if (jwt == \"\"){\n   //     return <Redirect to=\"/login\"/>\n   // }\n\n   return (\n      <div>\n         <IconContext.Provider value={{ color: '#fff' }}>\n            <div className=\"dash--navbar\">\n               <Link to=\"#\" className=\"dash--menu-bars\">\n                  <FaIcons.FaBars onClick={showSidebar} />\n               </Link>\n            </div>\n            <nav\n               className={sidebar ? 'dash--nav-menu active' : 'dash--nav-menu'}\n            >\n               <ul className=\"dash--nav-menu-items\" onClick={showSidebar}>\n                  <li className=\"dash--navbar-toggle\">\n                     <Link to=\"#\" className=\"dash--menu-bars\">\n                        <AiIcons.AiOutlineClose />\n                     </Link>\n                  </li>\n                  {SidebarData.map((item, index) => {\n                     return (\n                        <li key={index} className={item.className}>\n                           <Link to={item.path}>\n                              {item.icon}\n                              <span>{item.title}</span>\n                           </Link>\n                        </li>\n                     )\n                  })}\n               </ul>\n            </nav>\n         </IconContext.Provider>\n      </div>\n   )\n}\n\nexport default DashboardSidebar\n","import { gql } from '@apollo/client'\n\nconst REGISTER_USER = gql`\n   mutation register($username: String!, $email: String!, $password: String!) {\n      register(username: $username, email: $email, password: $password) {\n         user_id\n         username\n         jwt\n      }\n   }\n`\nconst CREATE_JOB = gql`\n   mutation CreateJob(\n      $title: String!\n      $description: String!\n      $credits: Int!\n      $labels: [String]!\n      $num_partitions: Int!\n      $files: [Upload]\n   ) {\n      createJob(\n         title: $title\n         description: $description\n         credits: $credits\n         labels: $labels\n         num_partitions: $num_partitions\n         files: $files\n      ) {\n         job_id\n         created_at\n         title\n      }\n   }\n`\n\nconst LOGIN_USER = gql`\n   mutation Login($email: String!, $password: String!) {\n      login(email: $email, password: $password) {\n         username\n         email\n         jwt\n      }\n   }\n`\n\nconst ACCEPT_JOB = gql`\n   mutation AcceptJob($job_id: ID!) {\n      acceptJob(job_id: $job_id)\n   }\n`\n\nconst DELETE_JOB = gql`\n   mutation deleteJob($job_id: ID!) {\n  deleteJob(job_id: $job_id)\n}\n`\n\nconst SAVE_STATE = gql`\n   mutation SaveState(\n      $image_ids: [ID]!\n      $labels: [String]!\n      $partition_id: ID\n      $is_complete: Boolean\n   ) {\n      saveState(\n         image_ids: $image_ids\n         labels: $labels\n         partition_id: $partition_id\n         is_complete: $is_complete\n      )\n   }\n`\n\nconst EDIT_PROFILE = gql`\n   mutation EditProfile($username: String, $password: String, $avatar: String) {\n      editProfile(username: $username, password: $password, avatar: $avatar) {\n         username\n         password\n         avatar\n      }\n   }\n`\nexport {\n   REGISTER_USER,\n   LOGIN_USER,\n   CREATE_JOB,\n   ACCEPT_JOB,\n   SAVE_STATE,\n   EDIT_PROFILE,\n   DELETE_JOB\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState:{\n      username: \"\",\n      balance: 0,\n      email: \"\",\n      jwt: \"\"\n  },\n  reducers: {\n     updateUsername : (state, action) => {\n         state.username = action.payload;\n     },\n\n     updateBalance: (state, action) => {\n         state.balance = action.payload;\n     },\n\n     updateEmail: (state, action) => {\n         state.email = action.payload;\n     },\n\n     updateJWT: (state, action) => {\n        state.jwt = action.payload;\n     }\n  }\n\n});\n\nexport const { updateBalance, updateEmail, updateJWT, updateUsername } = userSlice.actions;\n\nexport default userSlice.reducer;","import React, { useState } from 'react'\nimport '../Styles/Login.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { LOGIN_USER } from '../graphql/mutations'\nimport { useMutation } from '@apollo/client'\nimport Cookies from 'js-cookie'\nimport { useDispatch } from 'react-redux'\nimport { updateEmail, updateJWT, updateUsername } from '../redux/user'\nimport { toast } from 'react-toastify'\nimport { GET_ME} from '../graphql/queries'\n\nconst Login = () => {\n   const [userEmail, setUserEmail] = useState('')\n   const [password, setPassword] = useState('')\n   const [login, { data, loading, error }] = useMutation(LOGIN_USER, {\n      refetchQueries: [GET_ME, 'me']\n   })\n\n   //Example code on how to call the variables in store\n   // const email = useSelector((state) => state.user.email)\n   const dispatch = useDispatch()\n\n   if (data && !error) {\n      Cookies.set('jwt', data.login.jwt)\n      //Set our redux variables\n      dispatch(updateEmail(data.login.email))\n      dispatch(updateUsername(data.login.username))\n      dispatch(updateJWT(data.login.jwt))\n      console.log(data.login.username)\n      return <Redirect to=\"/dashboard/Profile\" />\n   }\n\n   return (\n      <div className=\"login_container\">\n         <div className=\"forms-container\">\n            <form\n               className=\"sign-in-form\"\n               // onSubmit={submitForm}\n               onSubmit={(e) => {\n                  e.preventDefault()\n                  login({\n                     variables: {\n                        email: userEmail,\n                        password: password\n                     }\n                  }).catch((error) => {\n                     toast.error(error.message, {\n                        position: toast.POSITION.BOTTOM_CENTER\n                     })\n                  })\n               }}\n            >\n               <Link to=\"/\">\n                  <img\n                     className=\"login_logo\"\n                     alt=\"LOGO\"\n                     src=\"./images/login_logo.png\"\n                  />\n               </Link>\n               <h2 className=\"title\">Sign in</h2>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-envelope icon\"></i>\n                  <input\n                     type=\"text\"\n                     value={userEmail}\n                     onChange={(e) => setUserEmail(e.target.value)}\n                     id=\"email\"\n                     placeholder=\"Email\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-lock icon\"></i>\n                  <input\n                     type=\"password\"\n                     value={password}\n                     onChange={(e) => setPassword(e.target.value)}\n                     id=\"pword\"\n                     placeholder=\"Password\"\n                  />\n               </div>\n\n               {/* <p className=\"forgot-pass\">Forgot Password?</p> */}\n\n               <button type=\"submit\" className=\"login_signInButton\">\n                  {loading ? 'Loading...' : 'LOGIN'}\n               </button>\n               <p className=\"social-text\">Or login with</p>\n\n               <p className=\"other-text\">\n                  Not a member?{' '}\n                  <a id=\"hover\" className=\"underlineHover\" href=\"/register\">\n                     Sign up now\n                  </a>\n               </p>\n            </form>\n         </div>\n      </div>\n\n      //         {/* <button\n      //            onClick={() => {\n      //               history.push('/register')\n      //            }}\n      //            className=\"login_registerButton\"\n      //         >\n      //            Register\n      //         </button> */}\n   )\n}\n\nexport default Login\n","import React from 'react'\nimport LoginForm from '../Components/LoginForm'\nimport Footer from '../Components/Footer'\nimport NavbarOther from '../Components/NavbarOther'\n\nconst Login = () => {\n   return (\n      <div>\n         <NavbarOther />\n         <LoginForm />\n         <Footer />\n      </div>\n   )\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport { Carousel } from 'react-responsive-carousel'\nimport '../Styles/Testimonials.css'\n\nexport default class Testimonials extends Component {\n   render() {\n      return (\n         <div className=\"testimonials\">\n            <h2 className=\"testimonials-heading\">Testimonials</h2>\n            <Carousel\n               showArrows={true}\n               infiniteLoop={true}\n               showThumbs={false}\n               showStatus={false}\n               autoPlay={true}\n               interval={6100}\n            >\n               <div>\n                  <img src=\"./images/p1.png\" alt=\"imgstuff\" />\n                  <div className=\"myCarousel\">\n                     <h3>Elon Musk</h3>\n                     <h4>Entrepreneur</h4>\n                     <p>\n                        When the data labelling is important enough, you do it\n                        even if the odds of labelling are not in your favor\n                     </p>\n                  </div>\n               </div>\n\n               <div>\n                  <img src=\"./images/p3.png\" alt=\"imgstuff\"/>\n                  <div className=\"myCarousel\">\n                     <h3>Emilia Clarke</h3>\n                     <h4>Actress</h4>\n                     <p>\n                        I love this website! I cant recommend it any further, it\n                        deserves the highest regard in all stations of ML\n                     </p>\n                  </div>\n               </div>\n\n               <div>\n                  <img src=\"./images/p2.jpg\" alt=\"imgstuff\"/>\n                  <div className=\"myCarousel\">\n                     <h3>Gucci Mane</h3>\n                     <h4>Musician</h4>\n                     <p>\n                        If a man does not have the data labelled, then he is\n                        lost. But the same man can be lost in the labelling\n                     </p>\n                  </div>\n               </div>\n            </Carousel>\n         </div>\n      )\n   }\n}\n","import React, { useState } from 'react'\nimport '../Styles/Register.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { useMutation } from '@apollo/client'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { REGISTER_USER } from '../graphql/mutations'\n\nconst Register = () => {\n   const [username, setUsername] = useState('')\n   const [email, setEmail] = useState('')\n   const [password, setPassword] = useState('')\n   const [confirmPass, setConfirmPass] = useState('')\n   const [errorMsg, setErrorMsg] = useState('')\n\n   const [registerMutation, { data, loading, error }] =\n      useMutation(REGISTER_USER)\n\n   const submitForm = async (e) => {\n      let isValid = true\n      e.preventDefault()\n      if (!username) {\n         isValid = false\n         toast.error('Please enter a username')\n      } else if (!email) {\n         isValid = false\n         toast.error('Please enter an email address')\n      } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n         isValid = false\n         toast.error('Please enter a valid email')\n      } else if (!password) {\n         isValid = false\n         toast.error('Please enter a password')\n      } else if (password.length < 5) {\n         isValid = false\n         toast.error('Password must be at least 5 characters')\n      } else if (password != confirmPass) {\n         isValid = false\n         toast.error('Passwords do not match')\n      }\n      if (isValid) {\n         await registerMutation({\n            variables: {\n               username: username,\n               email: email,\n               password: password\n            }\n         }).catch((error) => {\n            if (\n               error.message ===\n               'Unique constraint failed on the fields: (`email`)'\n            ) {\n               toast.error('This email address already exists')\n               return\n            }\n            toast.error(error.message, {\n               position: toast.POSITION.BOTTOM_CENTER\n            })\n         })\n         toast.success('You Have Been Succesfully Registered')\n      }\n   }\n\n   const history = useHistory()\n\n   if (data) {\n      return <Redirect to=\"/login\" />\n   }\n\n   return (\n      <div className=\"register_container\">\n         <div className=\"forms-container\">\n            <form className=\"register-form\" onSubmit={submitForm}>\n               <Link to=\"/\">\n                  <img\n                     className=\"login_logo\"\n                     alt=\"LOGO\"\n                     src=\"./images/login_logo.png\"\n                  />\n               </Link>\n               <h2 className=\"title\">Register</h2>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-user icon\"></i>\n                  <input\n                     type=\"text\"\n                     value={username}\n                     onChange={(e) => {\n                        setUsername(e.target.value)\n                     }}\n                     id=\"username\"\n                     placeholder=\"Username\"\n                     name=\"username\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-envelope icon\"></i>\n                  <input\n                     type=\"text\"\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                     id=\"email\"\n                     placeholder=\"Email\"\n                     name=\"email\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-lock icon\"></i>\n                  <input\n                     type=\"password\"\n                     value={password}\n                     onChange={(e) => setPassword(e.target.value)}\n                     id=\"pword\"\n                     placeholder=\"Password\"\n                     name=\"password\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-lock icon\"></i>\n                  <input\n                     type=\"password\"\n                     value={confirmPass}\n                     onChange={(e) => setConfirmPass(e.target.value)}\n                     id=\"conf_pword\"\n                     placeholder=\"Confirm Password\"\n                     name=\"checked\"\n                  />\n               </div>\n               {errorMsg && <p>{errorMsg}</p>}\n               <button type=\"submit\" className=\"register_registerButton\">\n                  {loading ? 'registering...' : 'Sign Up'}\n               </button>\n\n               {/* <p className=\"social-text\">Or sign up with</p> */}\n               {/* <div className=\"social-media\">\n                  <a href=\"#\" className=\"social-icon\">\n                     <i className=\"fab fa-facebook-f\"></i>\n                  </a>\n                  <a href=\"#\" className=\"social-icon\">\n                     <i className=\"fab fa-twitter\"></i>\n                  </a>\n                  <a href=\"#\" className=\"social-icon\">\n                     <i className=\"fab fa-google\"></i>\n                  </a>\n               </div> */}\n               <p className=\"other-text\">\n                  Already a member?{' '}\n                  <a id=\"hover\" className=\"underlineHover\" href=\"/login\">\n                     Login now\n                  </a>\n               </p>\n\n               <p>By registering, you accept our Terms & Conditions</p>\n            </form>\n         </div>\n      </div>\n   )\n}\n\nexport default Register\n","import React from 'react'\nimport RegisterForm from '../Components/RegisterForm'\nimport Footer from '../Components/Footer'\nimport NavbarOther from '../Components/NavbarOther'\n\nconst Register = () => {\n   return (\n      <div>\n         <NavbarOther />\n         <RegisterForm />\n         <Footer />\n      </div>\n   )\n}\n\nexport default Register\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction CardItem(props) {\n   return (\n      <li className=\"cards__item\">\n         <Link className=\"cards__item__link\" to={props.path}>\n            <figure\n               className=\"cards__item__pic-wrap\"\n               data-category={props.credits}\n            >\n               <img className=\"cards__item__img\" src={props.src} alt=\"Image\" />\n            </figure>\n            <div className=\"cards__item__info\">\n               <h5 className=\"cards__item__text\">{props.text}</h5>\n            </div>\n         </Link>\n      </li>\n   )\n}\n\nexport default CardItem\n","import React from 'react'\nimport CardItem from './CardItem'\nimport '../Styles/Cards.css'\n\nfunction Cards() {\n   return (\n      <div className=\"cards\">\n         <h2>Check Out Some of our Labelling Jobs</h2>\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  \n                  <CardItem\n                     src=\"./images/purple_gradient.jpg\"\n                     text=\"Here is a Labelling Job\"\n                     credits=\"5000 credits\"\n                     path=\"/\"\n                  />\n\n                  <CardItem\n                     src=\"./images/purple_gradient.jpg\"\n                     text=\"Here is another Labelling Job\"\n                     credits=\"2500 credits\"\n                     path=\"/\"\n                  />\n\n                  <CardItem\n                     src=\"./images/purple_gradient.jpg\"\n                     text=\"Here is a third Labelling Job\"\n                     credits=\"1 credit\"\n                     path=\"/\"\n                  />\n\n               </ul>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default Cards\n","import React from 'react'\nimport { Button } from './Button'\nimport '../Styles/HeroSection.css'\nimport '../App.css'\nimport { useSelector } from 'react-redux'\n\nfunction HeroSection() {\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt != '') {\n      isJwt = true\n   }\n\n   return (\n      <div className=\"hero-container\">\n         <video src=\"./videos/header-hero.mp4\" autoPlay loop muted />\n         <h1>\n            Crowd Sourced <br /> Data Labelling <br />\n            Market Place for ML\n         </h1>\n         {!isJwt ? <p></p> : <p>Create Or Find a Job Now</p>}\n         {isJwt ? <p></p> : <p>Sign up now to start your labelling journey</p>}\n         {isJwt ? (\n            <div></div>\n         ) : (\n            <div className=\"hero-btns\">\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn--outline\"\n                  buttonSize=\"btn--large\"\n                  to=\"/register\"\n               >\n                  Sign Up\n               </Button>\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn-hover\"\n                  buttonSize=\"btn--large\"\n                  to=\"/view-job\"\n               >\n                  Find Job\n               </Button>\n            </div>\n         )}\n         {!isJwt ? (\n            <div></div>\n         ) : (\n            <div className=\"hero-btns\" style={{ paddingLeft: '7%' }}>\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn--outline\"\n                  buttonSize=\"btn--large\"\n                  to=\"/create-job\"\n               >\n                  Create Job\n               </Button>\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn-hover\"\n                  buttonSize=\"btn--large\"\n                  to=\"/view-job\"\n               >\n                  Find Job\n               </Button>\n            </div>\n         )}\n      </div>\n   )\n}\n\nexport default HeroSection\n","import React, { useState, useEffect } from 'react'\nimport { Button } from './Button'\nimport { Link } from 'react-router-dom'\nimport '../Styles/Navbar.css'\nimport { useSelector } from 'react-redux'\nimport Cookies from 'js-cookie'\nimport NavItem from './NavItem'\nimport DropdownMenu from './DropdownMenu'\nimport { ReactComponent as MenuIcon } from './icons/menu_icon.svg'\nimport { GET_ME } from '../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport ReactLoading from 'react-loading'\n\nfunction Navbar() {\n   const { loading, error, data } = useQuery(GET_ME)\n\n   const [click, setClick] = useState(false)\n   const [button, setButton] = useState(true)\n   const [navbar, setNavbar] = useState(false)\n\n   let username = useSelector((state) => state.user.username)\n   if (data) {\n      if (data.me) {\n         if (!loading) {\n            username = data.me.username\n         }\n      }\n   }\n   const handleClick = () => setClick(!click)\n   const closeMobileMenu = () => setClick(false)\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt !== '') {\n      isJwt = true\n   }\n\n   const showButton = () => {\n      if (window.innerWidth <= 960) {\n         setButton(false)\n         setNavbar(true)\n      } else {\n         setButton(true)\n         setNavbar(false)\n      }\n   }\n\n   useEffect(() => {\n      showButton()\n   }, [])\n\n   window.addEventListener('resize', showButton)\n\n   const changeBackground = () => {\n      if (window.scrollY >= 80) {\n         setNavbar(true)\n      } else {\n         setNavbar(false)\n      }\n   }\n   const deleteJWT = () => {\n      Cookies.remove('jwt') //deletes the jwt token on signout\n      window.location.reload()\n      // toast.warning(\"You have logged out\")\n   }\n\n   const changeNav = () => {}\n\n   window.addEventListener('scroll', changeBackground)\n\n   window.addEventListener('hashchange', changeNav)\n\n   return (\n      <nav className={navbar ? 'navbar active' : 'navbar'}>\n         <div className=\"navbar-container\">\n            <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\n               <img src=\"./images/logo(white).png\" alt=\"bug\" height={120} />\n            </Link>\n            <div className=\"menu-icon\" onClick={handleClick}>\n               <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n            </div>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n               <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\n                     Home\n                  </Link>\n               </li>\n               {/* {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/dashboard/profile\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Dashboard\n                     </Link>\n                  </li>\n               )} */}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/how-to\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How it Works\n                  </Link>\n               </li>\n               {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/create-job\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Create Job\n                     </Link>\n                  </li>\n               )}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/view-job\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     Find A Job\n                  </Link>\n               </li>\n\n               <li>\n                  <Link\n                     to=\"/login\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Login\n                  </Link>\n               </li>\n\n               <li>\n                  <Link\n                     to=\"/register\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Sign Up\n                  </Link>\n               </li>\n            </ul>\n            {button && !isJwt ? (\n               <Button buttonStyle=\"btn--outline\" to=\"/login\">\n                  Login\n               </Button>\n            ) : (\n               <div></div>\n            )}\n\n            {button && isJwt ? (\n               <div className=\"navbar__username\">\n                  <div className=\"username__label\">\n                     {loading ? (\n                        <ReactLoading\n                           type={'spin'}\n                           // color={'black'}\n                           height={'20px'}\n                           color={'#000000'}\n                           width={'20px'}\n                           // className=\"acceptedJob__loadingSpin\"\n                        />\n                     ) : (\n                        <b>{username}</b>\n                     )}\n                  </div>\n                  <NavItem icon={<MenuIcon />}>\n                     <DropdownMenu></DropdownMenu>\n                  </NavItem>\n               </div>\n            ) : (\n               <div></div>\n            )}\n            {/* {button && isJwt ? (\n               <Button buttonStyle=\"btn--outline\" onClick={deleteJWT}>\n                  Sign Out\n               </Button>\n            ) : (\n               <div></div>\n            )} */}\n            {button && !isJwt ? (\n               <Button\n                  buttonStyle=\"btn--primary\"\n                  buttonSize=\"btn--small\"\n                  to=\"/register\"\n               >\n                  Sign Up\n               </Button>\n            ) : (\n               <div></div>\n            )}\n         </div>\n      </nav>\n   )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Cookies from 'js-cookie'\nimport { useDispatch } from 'react-redux'\nimport { updateJWT } from '../redux/user'\nimport '../App.css'\nimport Cards from '../Components/Cards'\nimport HeroSection from '../Components/HeroSection'\nimport Footer from '../Components/Footer'\nimport Navbar from '../Components/Navbar'\nimport Bruh from '../Components/Bruh'\nimport Testimonials from '../Components/Testimonials'\n\nfunction Home() {\n\n   const dispatch = useDispatch()\n\n   const jwt = Cookies.get('jwt')\n   if (jwt != null){\n      dispatch(updateJWT(jwt))\n   }\n\n   return (\n      <div>\n         <Navbar />\n         <HeroSection />\n         <Cards />\n         <Testimonials/>\n         <Footer />\n      </div>\n   )\n}\n\nexport default Home\n","import React from 'react'\nimport { Button } from './Button'\nimport '../Styles/HowToSection.css'\nimport '../App.css'\n\nfunction HowToSection() {\n   return (\n      <div className=\"hero-container\">\n         <video src=\"./videos/gradient.mp4\" autoPlay loop muted />\n         <h1>\n            How to <br /> Submit a Job <br />\n         </h1>\n         <p>\n            Here is a step-by-step guide to submitting a job on our Platform!\n         </p>\n         <div className=\"hero-btns\">\n            <Button\n               className=\"btns\"\n               buttonStyle=\"btn-hover\"\n               buttonSize=\"btn--large\"\n               to=\"/create-job\"\n            >\n               Post a Job\n            </Button>\n         </div>\n      </div>\n   )\n}\n\nexport default HowToSection\n","import React from 'react'\nimport CardItem from './CardItem'\nimport '../Styles/PostJobCards.css'\n\nfunction PostJobCards() {\n   return (\n      <div className=\"cards\">\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login3.gif\"\n                     text=\"In order to use our platform for finding a job, it is advisable for you to log in to gain full functionality of our platform but it is not required to view available jobs. If you haven't already, you can create an account here.\"\n                     credits=\"Step 1\"\n                     path=\"/how-to\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/login5.gif\"\n                     text=\"Now that you've logged in, you can navigate to the page to post your Job . Currently we only support Data Labelling jobs that utilize pictures but plan to expand in the future.\"\n                     credits=\"Step 2\"\n                     path=\"/how-to\"\n                  />\n               </ul>\n            </div>\n         </div>\n\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login6.gif\"\n                     text=\"Fill in your details in the available fields. Make sure to keep details as precise as possible for better results.\"\n                     credits=\"Step 3\"\n                     path=\"/how-to\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/submit.gif\"\n                     text=\"You can now sit back and relax while we let one of our top tier community members do the labelling.\"\n                     credits=\"Step 4\"\n                     path=\"/how-to\"\n                  />\n               </ul>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default PostJobCards\n","import React, { useState, useEffect } from 'react'\nimport { Button } from './Button'\nimport { Link } from 'react-router-dom'\nimport '../Styles/tab.css'\n\nfunction HowToTabs() {\n   const [click, setClick] = useState(false)\n   const [button, setButton] = useState(true)\n\n   const handleClick = () => setClick(!click)\n   const closeMobileMenu = () => setClick(false)\n\n   const showButton = () => {\n      if (window.innerWidth <= 960) {\n         setButton(false)\n      } else {\n         setButton(true)\n      }\n   }\n\n   useEffect(() => {\n      showButton()\n   }, [])\n\n   window.addEventListener('resize', showButton)\n\n   return (\n      <tabs className=\"tabs-other\">\n         <div className=\"tabs-container\">\n            <div className=\"menu-icon\" onClick={handleClick}>\n               <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n            </div>\n            <ul className={click ? 'tabs-menu active' : 'tabs-menu'}>\n               <li className=\"tabs-item\">\n                  <Link\n                     to=\"/how-to\"\n                     className=\"tabs-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How to Submit Jobs\n                  </Link>\n               </li>\n               <li className=\"tabs-item\">\n                  <Link\n                     to=\"/how-to-find\"\n                     className=\"tabs-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How to Find Jobs\n                  </Link>\n               </li>\n            </ul>\n         </div>\n      </tabs>\n   )\n}\n\nexport default HowToTabs\n","import React from 'react'\nimport '../App.css'\nimport HowToSection from '../Components/HowToSection'\nimport Footer from '../Components/Footer'\nimport PostJobCards from '../Components/PostJobCards'\nimport NavbarOther from '../Components/NavbarOther'\nimport HowTotabs from '../Components/HowToTabs'\n\nfunction HowTo() {\n   return (\n      <div>\n         <NavbarOther />\n         <HowTotabs />\n         <HowToSection />\n         <PostJobCards />\n         <Footer />\n      </div>\n   )\n}\n\nexport default HowTo\n","import React, { useRef, useEffect, useCallback } from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport styled from 'styled-components'\nimport { MdClose } from 'react-icons/md'\nimport '../Styles/Modal.css'\n// import { Link, Redirect, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useMutation } from '@apollo/client'\nimport { ACCEPT_JOB, DELETE_JOB } from '../graphql/mutations'\nimport { GET_ACCEPTED_JOBS,GET_CREATED_JOBS } from '../graphql/queries'\nimport Cookies from 'js-cookie'\nimport { toast } from 'react-toastify'\nimport swal from 'sweetalert'\n\nconst Background = styled.div`\n   z-index: 1;\n   width: 100%;\n   height: 100%;\n   background: rgba(0, 0, 0, 0.8);\n   position: fixed;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n   margin-bottom: 15%;\n   width: 800px;\n   height: 400px;\n   box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n   background: #fff;\n   color: #000;\n   display: grid;\n   grid-template-columns: 1fr 1fr;\n   position: relative;\n   z-index: 10;\n   border-radius: 10px;\n`\n\nconst ModalImg = styled.img`\n   margin-top: 5%;\n   margin-top: 8.5%;\n   object-fit: cover;\n   width: 400px;\n   height: 330px;\n   padding-top: 2rem;\n   padding-bottom: 2rem;\n   padding-left: 2rem;\n   padding-right: 2rem;\n   border-radius: 45px;\n   background: #fff;\n`\n\nconst ModalContent = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   line-height: 1.8;\n   color: #141414;\n   p {\n      margin-bottom: 1rem;\n   }\n   button {\n      padding: 10px 24px;\n      background: #141414;\n      color: #fff;\n      border: none;\n   }\n`\n\nconst CloseModalButton = styled(MdClose)`\n   cursor: pointer;\n   position: absolute;\n   top: 20px;\n   right: 20px;\n   width: 32px;\n   height: 32px;\n   padding: 0;\n   z-index: 10;\n`\n\nexport const Modal = ({\n   id,\n   showModal,\n   setShowModal,\n   src,\n   destination,\n   text,\n   uploader,\n   credits,\n   title,\n   buttonLabel,\n   deletable\n}) => {\n   const history = useHistory()\n   const jwt = useSelector((state) => state.user.jwt)\n   const jwt1 = Cookies.get('jwt')\n   // var buttonPressed=false\n   const modalRef = useRef()\n\n   const animation = useSpring({\n      config: {\n         duration: 250\n      },\n      opacity: showModal ? 1 : 0,\n      transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n   })\n   const [AcceptJob, { loading, error, data }] = useMutation(ACCEPT_JOB)\n   const [deleteJob, { delLoading, delError, delData }] = useMutation(\n      DELETE_JOB,\n      {\n         refetchQueries: [GET_CREATED_JOBS, 'acceptedJobs']\n      }\n   )\n   // const closeModal = (e) => {\n   //    if (modalRef.current === e.target) {\n   //       setShowModal(false)\n   //    }\n   // }\n\n   const keyPress = useCallback(\n      (e) => {\n         if (e.key === 'Escape' && showModal) {\n            setShowModal(false)\n         }\n      },\n      [setShowModal, showModal]\n   )\n\n   useEffect(() => {\n      document.addEventListener('keydown', keyPress)\n      return () => document.removeEventListener('keydown', keyPress)\n   }, [keyPress])\n\n   //This checks their login on page load\n   if (!jwt1) {\n      destination = '/login'\n   }\n\n   const acceptJob = () => {\n      if (!jwt) {\n      } else {\n         // eslint-disable-next-line eqeqeq\n         if (destination.pathname != '/label-job') {\n            AcceptJob({\n               variables: {\n                  job_id: id\n               },\n               refetchQueries: [{ query: GET_ACCEPTED_JOBS }]\n            })\n               .then(() => {\n                  history.push('/dashboard/accepted-jobs')\n               })\n               .catch((error) => {\n                  toast.error('You have already accepted this job', {\n                     position: toast.POSITION.BOTTOM_CENTER\n                  })\n               })\n\n            toast.clearWaitingQueue() //Prevents duplicates of the toast from coming up\n         }\n      }\n   }\n\n   return (\n      <div id={id}>\n         {showModal ? (\n            <Background ref={modalRef}>\n               <animated.div style={animation}>\n                  <ModalWrapper showModal={showModal}>\n                     <ModalImg alt=\"Travel\" src={src} />\n\n                     <ModalContent>\n                        <div className=\"modal__jobName\">\n                           <h1>{title}</h1>\n                        </div>\n\n                        <div className=\"modal__content\">\n                           <div className=\"modal__uploaderLine\">\n                              Job Owner: {uploader}\n                           </div>\n                           <div className=\"modal__creditLine\">\n                              Credits:‎ ‎{credits}\n                           </div>\n\n                           <div className=\"modal__descriptionLine\">\n                              Description:‎ ‎{text}\n                           </div>\n                           {deletable ? (\n                              <button\n                                 className=\"modal__ownedJobs\"\n                                 onClick={() => {\n                                    swal({\n                                       title: 'Are you sure?',\n                                       text: 'You will not be able to recover this job!',\n                                       icon: 'warning',\n                                       buttons: [true, 'Yes, delete'],\n                                       dangerMode: true\n                                    })\n                                       .then(async () => {\n                                          await deleteJob({\n                                             variables: {\n                                                job_id: id\n                                             }\n                                          })\n                                             .catch\n                                             // toast.warning('Job deleted! 1')\n                                             ()\n                                       })\n                                       .then(() => {\n                                          toast.warning('Job Deleted!')\n                                       })\n                                 }}\n                              >\n                                 {buttonLabel}\n                              </button>\n                           ) : (\n                              <Link to={destination}>\n                                 <button\n                                    className=\"modal__acceptJob\"\n                                    onClick={acceptJob}\n                                 >\n                                    {buttonLabel}\n                                 </button>\n                              </Link>\n                           )}\n                        </div>\n                     </ModalContent>\n                     <CloseModalButton\n                        aria-label=\"Close modal\"\n                        onClick={() => setShowModal((prev) => !prev)}\n                     />\n                  </ModalWrapper>\n               </animated.div>\n            </Background>\n         ) : null}\n      </div>\n   )\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport '../Styles/ViewJob.css'\nimport CardItem from '../Components/CardItem'\nimport '../Styles/Cards.css'\nimport NavbarOther from '../Components/NavbarOther'\nimport '../App.css'\nimport Footer from '../Components/Footer'\nimport Modal from '../Components/Modal'\nimport '../Styles/ViewJob.css'\nimport { GET_JOBS } from '../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport ReactLoading from 'react-loading'\nimport { toast } from 'react-toastify'\n\nfunction ViewJob() {\n\n   let jobs = []\n   const { loading, error, data } = useQuery(GET_JOBS)\n\n   if (data) {\n      jobs = data.viewJobs\n   }\n   if (error) {\n      toast.error('There was an error fetching the jobs')\n   }\n\n   const [showModal, setShowModal] = useState(false)\n\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n\n   return (\n      <div className=\"viewJob\">\n         <NavbarOther />\n\n         {jobs.map((job) => {\n            return (\n               <div className=\"viewJob__modal\">\n                  <Modal\n                     id={job.job_id}\n                     src={job.preview_images[0]}\n                     text={job.description}\n                     credits={job.credits}\n                     uploader={job.job_owner.username}\n                     title={job.title}\n                     showModal={showModal}\n                     setShowModal={setShowModal}\n                     buttonLabel={'Accept Job'}\n                     destination=\"/dashboard/accepted-jobs\"\n\n                  />\n               </div>\n            )\n         })}\n         <div className=\"viewJob__header\">\n            <video src=\"./videos/gradient.mp4\" autoPlay loop muted />\n\n            <h1>Find A Job That Interests You</h1>\n         </div>\n\n         {/* <div className=\"viewJob__filters\">\n            <h1>\n               <b>Filter Your Jobs By: </b>\n            </h1>\n            <Button onClick={handleOpenMenu} aria-controls=\"filter__menu\">\n               Filters\n            </Button>\n\n            <Menu\n               id=\"filter__menu\"\n               anchorElement={anchorElement}\n               open={Boolean(anchorElement)}\n               onClose={handleCloseMenu}\n            >\n               <MenuItem>Latest</MenuItem>\n               <MenuItem>Name ASC</MenuItem>\n               <MenuItem>Name DESC</MenuItem>\n               <MenuItem>Credits ASC</MenuItem>\n               <MenuItem>Credits DESC</MenuItem>\n               <MenuItem># Photos ASC</MenuItem>\n               <MenuItem># Photos DESC</MenuItem>\n            </Menu>\n         </div> */}\n\n         <div className=\"viewJob__container\">\n            {loading ? (\n               <ReactLoading\n                  type={'spin'}\n                  height={'10%'}\n                  color={'#000000'}\n                  width={'10%'}\n                  className=\"acceptedJob__loadingSpin\"\n               />\n            ) : (\n               <div className=\"viewJob__row\">\n                  {jobs.map((job) => {\n                     return (\n                        <div\n                           className=\"viewJob__cardItem\"\n                           onClick={(e) => openModal(job.job_id)}\n                        >\n                           <CardItem\n                              src={job.preview_images[0]}\n                              text={job.title}\n                              credits={job.credits}\n\n                           />\n                        </div>\n                     )\n                  })}\n               </div>\n            )}\n         </div>\n         <Footer />\n      </div>\n   )\n}\n\nexport default ViewJob\n","import React, { useState } from 'react'\nimport { EDIT_PROFILE } from '../graphql/mutations'\nimport { useMutation } from '@apollo/client'\nimport { useDispatch } from 'react-redux'\nimport { GET_ME } from '../graphql/queries'\nimport { toast } from 'react-toastify'\nimport { useQuery } from '@apollo/client'\nimport { updateUsername } from '../redux/user'\n\nconst UserDetails = (props) => {\n   const { loading, error, data } = useQuery(GET_ME)\n   const [EditProfile] = useMutation(EDIT_PROFILE)\n   const showError = () => {\n      toast.error('An error occured')\n      toast.clearWaitingQueue()\n   }\n   const dispatch = useDispatch()\n   const editUsername = () => {\n      let userNameChange\n\n      //check if username is empty\n      if (document.getElementById('input-username').value === '') {\n         userNameChange = props.username\n      } else {\n         userNameChange = document.getElementById('input-username').value\n      }\n\n      if (\n         document.getElementById('input-passwordNew').value !==\n         document.getElementById('input-passwordConfirm').value\n      ) {\n         toast.error(\"Passwords Don't Match\")\n      } else {\n         EditProfile({\n            variables: {\n               username: userNameChange\n            },\n            refetchQueries: [{ query: GET_ME }]\n         })\n            .then(() => {\n               toast.success('Your Details Have Been Changed')\n            })\n            .then(() => {\n               dispatch(updateUsername(userNameChange))\n            })\n            .catch((error) => showError())\n         toast.clearWaitingQueue()\n      }\n   }\n\n   const editPassword = () => {\n      let passwordChange\n      // check if password is empty\n      if (document.getElementById('input-passwordNew').value === '') {\n         passwordChange = props.password\n      } else {\n         passwordChange = document.getElementById('input-passwordNew').value\n      }\n\n      if (document.getElementById('input-passwordConfirm').value === '') {\n         passwordChange = props.password\n      } else {\n         passwordChange = document.getElementById('input-passwordNew').value\n      }\n\n      if (\n         document.getElementById('input-passwordNew').value !==\n         document.getElementById('input-passwordConfirm').value\n      ) {\n         toast.error(\"Passwords Don't Match\")\n      } else if (\n         document.getElementById('input-passwordNew').value === '' ||\n         document.getElementById('input-passwordConfirm').value === ''\n      ) {\n         toast.error('Passwords Are Empty')\n      } else if (passwordChange.length < 5) {\n         toast.error('Password must be at least 5 characters')\n      } else {\n         EditProfile({\n            variables: {\n               password: passwordChange\n            },\n            refetchQueries: [{ query: GET_ME }]\n         })\n            .then(() => {\n               toast.success('Your Details Have Been Changed')\n            })\n            .catch((error) => showError())\n         toast.clearWaitingQueue()\n      }\n   }\n\n   return (\n      <div className=\"col-xl-8 order-xl-1\">\n         <div className=\"card bg-secondary shadow\">\n            <div className=\"card-header bg-white border-0\">\n               <div className=\"row align-items-center\">\n                  <div className=\"col-8\">\n                     <h3 className=\"mb-0\">My Account</h3>\n                  </div>\n                  <div className=\"col-6 text-right\">\n                     <a\n                        onClick={editUsername}\n                        href=\"#/dashboard/profile\"\n                        className=\"user-btn user-btn-sm user-btn-primary\"\n                     >\n                        Update Username\n                     </a>\n                     &nbsp;\n                     <a\n                        onClick={editPassword}\n                        href=\"#/dashboard/profile\"\n                        className=\"user-btn user-btn-sm user-btn-primary\"\n                     >\n                        Update Password\n                     </a>\n                  </div>\n               </div>\n            </div>\n            <div className=\"card-body\">\n               <form className=\"user--form\">\n                  <h6 className=\"heading-small text-muted mb-4\">\n                     User information\n                  </h6>\n                  <div className=\"pl-lg-6\">\n                     <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                           <div className=\"form-group focused\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-username\"\n                              >\n                                 Username\n                              </label>\n                              <input\n                                 type=\"text\"\n                                 id=\"input-username\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder={loading? 'Loading...':data.me.username }\n                              />\n                           </div>\n                        </div>\n                        {/* <div className=\"col-lg-6\">\n                           <div className=\"form-group\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-email\"\n                              >\n                                 Email address\n                              </label>\n                              <input\n                                 type=\"email\"\n                                 id=\"input-email\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder={props.email}\n                                 text={props.email}\n                              />\n                           </div>\n                        </div> */}\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                           <div className=\"form-group focused\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-last-name\"\n                                 placeholder=\"Password\"\n                              >\n                                 New Password\n                              </label>\n                              <input\n                                 type=\"text\"\n                                 id=\"input-passwordNew\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder=\"New Password\"\n                                 defaultValue=\"\"\n                              />\n                           </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                           <div className=\"form-group focused\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-passwordConfirm\"\n                                 placeholder=\"Confirm Password\"\n                              >\n                                 Confirm Password\n                              </label>\n                              <input\n                                 type=\"text\"\n                                 id=\"input-passwordConfirm\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder=\"Confirm New Password\"\n                                 defaultValue=\"\"\n                              />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </form>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default UserDetails\n","import React, { useEffect } from 'react'\nimport '../../Styles/UserProfile.css'\nimport UserDetails from '../../Components/UserDetails'\nimport UserProfile from '../../Components/UserProfileCard'\nimport DashboardSidebar from '../../Components/DashboardSidebar'\nimport { useQuery } from '@apollo/client'\nimport {\n   GET_DELETED_JOBS,\n   GET_ME,\n   GET_ME_AND_DELETED_JOBS\n} from '../../graphql/queries'\nimport Cookies from 'js-cookie'\nimport { Redirect } from 'react-router'\nimport ReactLoading from 'react-loading'\nimport NavbarOther from '../../Components/NavbarOther'\nimport { useSelector } from 'react-redux'\nimport swal from 'sweetalert'\n\nexport const Dashboard = (props) => {\n   const { loading, error, data } = useQuery(GET_ME_AND_DELETED_JOBS)\n   // const {load,errordel, dataDel } = useQuery(GET_DELETED_JOBS)\n   const username = useSelector((state) => state.user.username)\n   const email = useSelector((state) => state.user.email)\n   // useEffect(() => {\n   //    console.log(data)\n   // }, [data])\n\n   // if (Cookies.get('jwt') == null) {\n   //    return <Redirect to=\"/login\" />\n   // }\n   if (data) {\n      console.log(data)\n\n      if (data.deletedJobs) {\n         if (data.deletedJobs.length !== 0) {\n            let jobarray=data.deletedJobs.map(function(job){return JSON.stringify(job.title)})\n            let jobstring=jobarray.join(\",\")\n            swal({\n               title: 'These Jobs deleted while you were away...',\n               text: jobstring,\n               icon: 'warning',\n               buttons: [true, 'OK'],\n               dangerMode: true\n            })\n         }\n      }\n   }\n\n   console.log(data)\n   if (error) console.log(error)\n\n   return (\n      <div className=\"profile\">\n         {/* <DashboardSidebar /> */}\n         <NavbarOther />\n         <div className=\"profile__body\">\n            {/* <link\n               href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\"\n               rel=\"stylesheet\"\n            /> */}\n\n            {/* Page content */}\n\n            {loading ? (\n               <ReactLoading\n                  type={'spin'}\n                  // color={'black'}\n                  height={'10%'}\n                  color={'#000000'}\n                  width={'10%'}\n                  className=\"acceptedJob__loadingSpin\"\n               />\n            ) : (\n               <span>\n                  {/* <UserProfile\n                              firstName={data.me.username}\n                              avatarImage={data.me.avatar}\n                           /> */}\n\n                  {data && <UserDetails username={username} email={email} />}\n               </span>\n            )}\n\n            {/* <Footer /> */}\n         </div>\n      </div>\n   )\n}\n\nexport default Dashboard\n","import React, { useState } from 'react'\nimport DashboardSidebar from '../../Components/DashboardSidebar'\nimport { GET_CREATED_JOBS } from '../../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport Modal from '../../Components/Modal'\nimport CardItem from '../../Components/CardItem'\nimport '../../Styles/CreatedJobs.css'\nimport NavbarOther from '../../Components/NavbarOther'\nimport ReactLoading from 'react-loading'\n\nfunction CreatedJobs() {\n   const { loading, error, data } = useQuery(GET_CREATED_JOBS)\n   const [showModal, setShowModal] = useState(false)\n\n   let jobs = []\n   if (data) {\n      jobs = data.ownedJobs\n   }\n   if (error) {\n      console.log(error)\n   }\n\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n   return (\n      <div>\n         <NavbarOther />\n         <div className=\"createdJobs__Modal\">\n            {jobs.map((job) => {\n               return (\n                  <div className=\"createdJobs__modal\">\n                     <Modal\n                        id={job.job_id}\n                        src={job.preview_images[0]}\n                        // src=\"../images/purple_gradient.jpg\"\n                        text={job.description}\n                        credits={job.credits}\n                        title={job.title}\n                        showModal={showModal}\n                        buttonLabel=\"Delete Job\"\n                        setShowModal={setShowModal}\n                        deletable={true}\n                     />\n                  </div>\n               )\n            })}\n         </div>\n\n         {/* <DashboardSidebar /> */}\n         <div className=\"createdJobs__header\">\n            <video src=\"../videos/header-hero.mp4\" autoPlay loop muted />\n            <h1>View your Created Jobs</h1>\n         </div>\n         <div className=\"createdJobs__Loading\">\n            <h1>\n               <b>\n                     These Are The Jobs You Currently Own\n               </b>\n            </h1>\n         </div>\n         <div>\n            {loading ? (\n               <ReactLoading\n               type={'spin'}\n               color={'black'}\n               height={'10%'}\n               color={'#ffffff'}\n               width={'10%'}\n               className=\"acceptedJob__loadingSpin\"\n            />\n            ) : (\n               <div className=\"createdJobs__row\">\n                  {jobs.map((job) => {\n                     return (\n                        <div\n                           className=\"createdJobs__cardItem\"\n                           onClick={(e) => openModal(job.job_id)}\n                        >\n                           <CardItem\n                              // id={job.job_id.concat('card')}\n                              src={job.preview_images[0]}\n                              // src=\"../images/purple_gradient.jpg\"\n                              text={job.description}\n                              credits={job.credits}\n                           />\n                        </div>\n                     )\n                  })}\n               </div>\n            )}\n         </div>\n      </div>\n   )\n}\n\nexport default CreatedJobs\n","import React, { useState } from 'react'\nimport DashboardSidebar from '../../Components/DashboardSidebar'\nimport { GET_ACCEPTED_JOBS } from '../../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport Modal from '../../Components/Modal'\nimport CardItem from '../../Components/CardItem'\nimport '../../Styles/AcceptedJobs.css'\nimport ReactLoading from 'react-loading'\nimport NavbarOther from '../../Components/NavbarOther'\n\nfunction AcceptedJobs() {\n   // const { loading, error, data } = useQuery(GET_ME)\n   const { loading, error, data } = useQuery(GET_ACCEPTED_JOBS)\n   const [showModal, setShowModal] = useState(false)\n\n   let jobs = []\n   if (data) {\n      jobs = data.acceptedJobs\n   }\n   if (error) {\n      console.log(error)\n   }\n\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n   return (\n      <div>\n         <NavbarOther />\n         <div className=\"acceptJobs__Modal\">\n            {jobs.map((job) => {\n               return (\n                  <div className=\"acceptJobs__modal\">\n                     <Modal\n                        id={job.job_id}\n                        src={job.preview_images[0]}\n                        // src=\"../images/purple_gradient.jpg\"\n                        text={job.description}\n                        credits={job.credits}\n                        uploader={job.job_owner.username}\n                        title={job.title}\n                        showModal={showModal}\n                        buttonLabel=\"Label Job\"\n                        setShowModal={setShowModal}\n                        destination={{\n                           pathname: '/label-job',\n                           currentID: job.job_id\n                        }}\n                     />\n                  </div>\n               )\n            })}\n         </div>\n\n         {/* <DashboardSidebar /> */}\n         <div className=\"acceptedJobs__header\">\n            <video src=\"../videos/header-hero.mp4\" autoPlay loop muted />\n            <h1>View your Accepted Jobs</h1>\n         </div>\n         <div className=\"acceptedJobs__Loading\">\n            <h1>Pick A Job To Start Labeling</h1>\n         </div>\n         <div className=\"acceptJob__Section\">\n            {loading ? (\n               <ReactLoading\n                  type={'spin'}\n                  color={'black'}\n                  height={'10%'}\n                  color={'#ffffff'}\n                  width={'10%'}\n                  className=\"acceptedJob__loadingSpin\"\n               />\n            ) : (\n               <div className=\"acceptJob__row\">\n                  {jobs.map((job) => {\n                     return (\n                        <div\n                           className=\"acceptJob__cardItem\"\n                           onClick={(e) => openModal(job.job_id)}\n                        >\n                           <CardItem\n                              // id={job.job_id.concat('card')}\n                              src={job.preview_images[0]}\n                              // src=\"../images/purple_gradient.jpg\"\n                              text={job.description}\n                              credits={job.credits}\n                           />\n                        </div>\n                     )\n                  })}\n               </div>\n            )}\n         </div>\n      </div>\n   )\n}\n\nexport default AcceptedJobs\n","import React from 'react'\nimport DashboardSidebar from '../../Components/DashboardSidebar'\nimport '../../Styles/Support.css'\nimport Footer from '../../Components/Footer'\n\nfunction Support() {\n   return (\n      <div>\n         <DashboardSidebar />\n         <section className=\"contact\">\n            <div className=\"content\">\n               <h1>Get in touch!</h1>\n               <p>\n                  Send us a message and tell us if you have any concerns or\n                  questions and we will do our best to help you in the best way\n                  we can!\n               </p>\n            </div>\n            <div className=\"container\">\n               <div className=\"contactInfo\">\n                  <div className=\"box\">\n                     <div className=\"icon\">\n                        <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\n                     </div>\n                     <div className=\"text\">\n                        <h3>Address</h3>\n                        <p>\n                           192 Data Labelling Place, Johannesburg, South Africa,\n                           2192\n                        </p>\n                     </div>\n                  </div>\n                  <div className=\"box\">\n                     <div className=\"icon\">\n                        <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                     </div>\n                     <div className=\"text\">\n                        <h3>Phone</h3>\n                        <p>082-756-8979</p>\n                     </div>\n                  </div>\n                  <div className=\"box\">\n                     <div className=\"icon\">\n                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                     </div>\n                     <div className=\"text\">\n                        <h3>Email</h3>\n                        <p>data@labelling.com</p>\n                     </div>\n                  </div>\n               </div>\n               {/* <div className=\"contactForm\"> */}\n               <form className=\"contactForm\">\n                  <h2>Send us a Message</h2>\n                  <div className=\"inputBox\">\n                     <input\n                        type=\"text\"\n                        placeholder=\"Full Name\"\n                        name=\"fullname\"\n                        required=\"required\"\n                     />\n                  </div>\n                  <div className=\"inputBox\">\n                     <input\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        required=\"required\"\n                     />\n                  </div>\n                  <div className=\"inputBox\">\n                     <input\n                        type=\"text\"\n                        placeholder=\"Type your Message...\"\n                        name=\"message\"\n                        required=\"required\"\n                     />\n                  </div>\n                  <div className=\"inputBox\">\n                     <button type=\"submit\" className=\"sendButton\">\n                        Send\n                     </button>\n                  </div>\n               </form>\n               {/* /</div> */}\n            </div>\n            {/* <Footer /> */}\n         </section>\n      </div>\n   )\n}\n\nexport default Support\n","import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\nimport '../Styles/Slider.css'\n\nconst ImageSlider = ({ slides, indexCallback }) => {\n   const [current, setCurrent] = useState(0)\n   const length = slides.length\n\n   useEffect(() => {\n      indexCallback(current)\n   }, [current])\n\n   const nextSlide = () => {\n      let num = current === length - 1 ? 0 : current + 1\n      setCurrent(num)\n   }\n\n   const prevSlide = () => {\n      setCurrent(current === 0 ? length - 1 : current - 1)\n      indexCallback(current)\n   }\n\n   if (!Array.isArray(slides) || slides.length <= 0) {\n      return null\n   }\n\n   return (\n      <section className=\"label-slider\">\n         <FaArrowAltCircleLeft className=\"left-arrow\" onClick={prevSlide} />\n         <FaArrowAltCircleRight className=\"right-arrow\" onClick={nextSlide} />\n         {slides.map((slide, index) => {\n            return (\n               <div\n                  className={\n                     index === current ? 'label-slide active' : 'label-slide'\n                  }\n                  key={index}\n               >\n                  {index === current && (\n                     <img\n                        src={slide.images}\n                        key={slide.image_ids}\n                        id={slide.image_ids}\n                        alt=\"travel image\"\n                        className=\"image\"\n                     />\n                  )}\n               </div>\n            )\n         })}\n      </section>\n   )\n}\n\nexport default ImageSlider\n","import React, { useState } from 'react'\nimport Footer from '../Components/Footer'\nimport ImageSlider from '../Components/ImageSlider'\nimport NavbarOther from '../Components/NavbarOther'\nimport '../Styles/LabelJob.css'\nimport { GET_LABEL_JOB_INFO, GET_SAVED_STATE } from '../graphql/queries.js'\nimport { SAVE_STATE } from '../graphql/mutations'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Button } from '../Components/Button'\nimport { useEffect } from 'react'\nimport { current } from '@reduxjs/toolkit'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { Link, Redirect } from 'react-router-dom'\n\nfunction LabelJob(props) {\n   const [index, setIndex] = useState()\n   const [assignedLabels, setAssignedLabels] = useState({})\n   const [slides, setSlides] = useState([])\n   const { currentID } = props.location\n\n   const checkRadioButton = () => {\n      if (slides[index]) {\n         if (slides[index].image_id in assignedLabels) {\n            console.log(assignedLabels[slides[index].image_id])\n            document.getElementById(\n               assignedLabels[slides[index].image_id]\n            ).checked = true\n         }\n      }\n   }\n\n   let is_complete = false\n   const checkCompletion = () => {\n      if (\n         Object.keys(assignedLabels).length + 1 >= slides.length &&\n         Object.keys(assignedLabels).length != 0\n      ) {\n         document.getElementById('submitButton').style.display = 'inline-block'\n         is_complete = true\n      } else {\n         document.getElementById('submitButton').style.display = 'none'\n      }\n   }\n\n   useEffect(() => {\n      checkRadioButton()\n   }, [index])\n\n   const { loading, error, data } = useQuery(GET_LABEL_JOB_INFO, {\n      variables: {\n         job_id: currentID\n      }\n   })\n\n   const partition_id = data?.labelJobInfo?.partition_id\n   const { data: restoredData } = useQuery(GET_SAVED_STATE, {\n      skip: !partition_id,\n      variables: {\n         partition_id\n      }\n   })\n\n   const [\n      submitJob,\n      { data: submitJobData, loading: submitJobLoading, error: submitJobError }\n   ] = useMutation(SAVE_STATE)\n\n   useEffect(() => {\n      if (restoredData) {\n         let temp = {}\n         Object.assign(temp, assignedLabels)\n\n         for (let i = 0; i < restoredData.labelJobState.labels.length; i++) {\n            const imageId = restoredData.labelJobState.image_ids[i]\n            temp[imageId] = restoredData.labelJobState.labels[i]\n         }\n         setAssignedLabels(temp)\n\n         let tempSlides = []\n         for (let i = 0; i < images.length; i++) {\n            tempSlides.push({ images: images[i], image_id: image_ids[i] })\n         }\n         setSlides(tempSlides)\n         checkRadioButton()\n         checkCompletion()\n      }\n   }, [restoredData, data])\n\n   checkRadioButton()\n\n   if (loading) return 'Loading...'\n   if (error) return `Error! ${error.message}`\n\n   let images = []\n   let labels = []\n   let image_ids = []\n   let title = ''\n\n   if (data) {\n      images = data.labelJobInfo.images\n      labels = data.labelJobInfo.labels\n      image_ids = data.labelJobInfo.image_ids\n      title = data.labelJobInfo.title\n   }\n\n   const onChangeSlide = (index) => {\n      setIndex(index)\n\n      for (let i = 0; i < labels.length; i++) {\n         document.getElementById(labels[i]).checked = false\n      }\n      document.getElementById('other').checked = false\n   }\n\n   const assignLabel = (value) => {\n      let temp = {}\n      Object.assign(temp, assignedLabels)\n      const imageId = slides[index].image_id\n      temp[imageId] = value\n      setAssignedLabels(temp)\n      checkCompletion()\n   }\n\n   const saveState = (buttonID) => {\n      submitJob({\n         variables: {\n            image_ids: Object.keys(assignedLabels).map((id) => Number(id)),\n            labels: Object.values(assignedLabels),\n            partition_id: partition_id,\n            is_complete: is_complete\n         }\n      })\n\n      if (buttonID == 'submitButton') {\n         document.getElementById('label-save').style.display = 'none'\n         document.getElementById('image-section').style.display = 'none'\n         document.getElementById('job-submitted').style.display = 'block'\n         document.getElementById('label-job-form').style.height = '90vh'\n         document.getElementById('accepted-jobs-btn').style.display = 'block'\n         document.getElementById('job-completed').style.display = 'block'\n      } else {\n         toast.success('Your labelling progress has been saved.')\n      }\n   }\n\n   return (\n      <div>\n         <NavbarOther />\n\n         <div className=\"label-job-page\">\n            <div className=\"label-job-form\" id=\"label-job-form\">\n               <div className=\"job-completed\" id=\"job-completed\">\n                  <h2 id=\"job-submitted\" className=\"job-submitted\">\n                     You have successfully completed this job!\n                  </h2>\n                  <Link\n                     id=\"accepted-jobs-btn\"\n                     to=\"/dashboard/accepted-jobs\"\n                     className=\"accepted-jobs-link\"\n                  >\n                     Return to Accepted Jobs\n                  </Link>\n               </div>\n               <div className=\"image-section\" id=\"image-section\">\n                  <h2>{title}</h2>\n                  <div className=\"image-slider-container\">\n                     <ImageSlider\n                        slides={slides}\n                        indexCallback={onChangeSlide}\n                     />\n                  </div>\n               </div>\n               <div className=\"label-save\" id=\"label-save\">\n                  <div className=\"label-section\">\n                     <h2>Labels</h2>\n                     <div className=\"labels-container\">\n                        <div className=\"radio-toolbar\">\n                           {labels.map((label) => (\n                              <>\n                                 <input\n                                    id={label}\n                                    type=\"radio\"\n                                    value={label}\n                                    // key={nanoid()}\n                                    name=\"label\"\n                                    onClick={(e) => assignLabel(e.target.value)}\n                                 />{' '}\n                                 <label>{label}</label>\n                              </>\n                           ))}\n                           <input\n                              id=\"other\"\n                              type=\"radio\"\n                              value=\"other\"\n                              name=\"label\"\n                              onClick={(e) => assignLabel(e.target.value)}\n                           />{' '}\n                           Other\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"submitSection\">\n                     <Button\n                        id=\"saveButton\"\n                        className=\"btns\"\n                        buttonStyle=\"btn--outline\"\n                        buttonSize=\"btn--large\"\n                        onClick={(e) => saveState(e.target.id)}\n                     >\n                        Save\n                     </Button>\n                     <Button\n                        id=\"submitButton\"\n                        className=\"btns\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--large\"\n                        onClick={(e) => saveState(e.target.id)}\n                     >\n                        Submit\n                     </Button>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </div>\n   )\n}\n\nexport default LabelJob\n","import React from 'react'\nimport { Button } from './Button'\nimport '../Styles/HowToSection.css'\nimport '../App.css'\n\nfunction HowToFindSection() {\n   return (\n      <div className=\"hero-container\">\n         <video src=\"./videos/header-hero.mp4\" autoPlay loop muted />\n         <h1>\n            How to <br /> Find and Label a Job! <br />\n         </h1>\n         <p>\n            Here is a step-by-step guide on how to find a job and complete it on\n            our Platform!\n         </p>\n         <div className=\"hero-btns\">\n            <Button\n               className=\"btns\"\n               buttonStyle=\"btn-hover\"\n               buttonSize=\"btn--large\"\n               to=\"/view-job\"\n            >\n               Find a Job\n            </Button>\n         </div>\n      </div>\n   )\n}\n\nexport default HowToFindSection\n","import React from 'react'\nimport CardItem from './CardItem'\nimport '../Styles/PostJobCards.css'\n\nfunction PostJobCards() {\n   return (\n      <div className=\"cards\">\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login2.gif\"\n                     text=\"In order to use our platform for finding a job, it is advisable for you to log in to gain full functionality of our platform but it is not required to view available jobs. If you haven't already, you can create an account here.\"\n                     credits=\"Step 1\"\n                     path=\"/how-to=find\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/login5.gif\"\n                     text=\"Navigating to the page will allow you to see all available data labelling jobs. You can also sort the jobs based on different filters. Select a data labelling job which you would like to work on. You can either accept the job or change your mind and hit cancel and unselect the job.\"\n                     credits=\"Step 2\"\n                     path=\"/how-to=find\"\n                  />\n               </ul>\n            </div>\n         </div>\n\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login.gif\"\n                     text=\"You can select accept job to work on the job you have picked out. If you have not already signed in, you will be prompted to. Once you are signed in you will be taken to your dashboard where you can view the selected job under 'Accepted Jobs' and work on it.\"\n                     credits=\"Step 3\"\n                     path=\"/how-to=find\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/find.gif\"\n                     text=\"Select the accepted job in your dashbaord to start the data labelling process. On the labelling page, select a label for each image. Once the labelling is complete, you will receive a success message to inform you that the labelling job is completed.\"\n                     credits=\"Step 4\"\n                     path=\"/how-to=find\"\n                  />\n               </ul>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default PostJobCards\n","import React from 'react'\nimport '../App.css'\nimport HowToFindSection from '../Components/HowToFindSection'\nimport Footer from '../Components/Footer'\nimport FindJobCards from '../Components/FindJobCards'\nimport NavbarOther from '../Components/NavbarOther'\nimport HowTotabs from '../Components/HowToTabs'\n\nfunction HowToFind() {\n   return (\n      <div>\n         <NavbarOther />\n         <HowTotabs />\n         <HowToFindSection />\n         <FindJobCards />\n         <Footer />\n      </div>\n   )\n}\n\nexport default HowToFind\n","import './App.css'\nimport CreateJob from './Pages/CreateJob'\nimport DashboardSidebar from './Components/DashboardSidebar'\nimport Login from './Pages/Login'\nimport Testimonials from './Components/Testimonials'\nimport Register from './Pages/Register'\nimport Home from './Pages/Home'\nimport HowTo from './Pages/HowTo'\nimport ViewJob from './Pages/ViewJob'\nimport Profile from './Pages/Dashboard/Profile'\nimport CreatedJobs from './Pages/Dashboard/CreatedJobs'\nimport AcceptedJobs from './Pages/Dashboard/AcceptedJobs'\nimport AboutUs from './Pages/Dashboard/AboutUs'\nimport Support from './Pages/Dashboard/Support'\nimport LabelJob from './Pages/LabelJob'\nimport React from 'react'\nimport Cookies from 'js-cookie'\nimport { useDispatch } from 'react-redux'\nimport { updateJWT } from './redux/user'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport HowToFind from './Pages/HowToFind'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst App = () => {\n   const dispatch = useDispatch()\n\n   if (Cookies.get('jwt') != null) {\n      dispatch(updateJWT(Cookies.get('jwt')))\n   }\n\n   return (\n      <Router>\n         <ToastContainer limit={1} />\n         <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n               path=\"/dashboard\"\n               exact\n               component={() => <DashboardSidebar authorized={false} />}\n            />\n            <Route path=\"/create-job\" exact component={CreateJob} />\n            <Route path=\"/Testimonials\" exact component={Testimonials} />\n            <Route path=\"/view-job\" exact component={ViewJob} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/register\" exact component={Register} />\n            <Route path=\"/how-to\" exact component={HowTo} />\n            <Route path=\"/how-to-find\" exact component={HowToFind} />\n            <Route\n               path=\"/dashboard/created-jobs\"\n               exact\n               component={CreatedJobs}\n            />\n            <Route path=\"/dashboard/profile\" exact component={Profile} />\n            <Route\n               path=\"/dashboard/accepted-jobs\"\n               exact\n               component={AcceptedJobs}\n            />\n            <Route path=\"/label-job\" exact component={LabelJob} />\n         </Switch>\n      </Router>\n   )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './user'\n\nconst store = configureStore({\n    reducer: {\n        user: userReducer\n    }\n})\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport {\n   ApolloClient,\n   InMemoryCache,\n   ApolloProvider,\n   useQuery,\n   gql,\n   HttpLink,\n   ApolloLink,\n   concat\n} from '@apollo/client'\nimport Cookies from 'js-cookie'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { onError } from 'apollo-link-error'\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n   if (graphQLErrors) {\n      console.log('graphQLErrors', graphQLErrors)\n   }\n   if (networkError) {\n      console.log('networkError', networkError)\n   }\n})\n// import swal from 'sweetalert';\n\nconst httpLink = new HttpLink({\n   uri: 'https://data-labelling-server.herokuapp.com/graphql'\n})\n\nconst link = ApolloLink.from([errorLink, httpLink])\n// const httpLink = new HttpLink({\n//    uri: 'https://data-labelling-server.herokuapp.com/graphql'\n// })\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n   operation.setContext(({ headers = {} }) => ({\n      headers: {\n         ...headers,\n         Authorization: 'Bearer ' + Cookies.get('jwt') || null\n      }\n   }))\n\n   return forward(operation)\n})\n\nconst client = new ApolloClient({\n   // uri: 'https://data-labelling-server.herokuapp.com/graphql',\n   link: concat(authMiddleware, link),\n   cache: new InMemoryCache(),\n   credentials: 'include'\n})\n\nReactDOM.render(\n   <React.StrictMode>\n      <ApolloProvider client={client}>\n         <Provider store={store}>\n            <App />\n         </Provider>\n      </ApolloProvider>\n   </React.StrictMode>,\n   document.getElementById('root')\n)"],"sourceRoot":""}