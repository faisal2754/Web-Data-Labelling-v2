{"version":3,"sources":["graphql/queries.js","Components/CreateJobForm.jsx","Components/Footer.jsx","Components/Button.jsx","Components/NavItem.jsx","Components/icons/profile_icon2.svg","Components/icons/accepted_icon.svg","Components/icons/owned_icon.svg","Components/icons/logout_icon.svg","Components/icons/completed_icon.svg","Components/DropdownMenu.jsx","Components/icons/menu_icon.svg","Components/NavbarOther.jsx","Pages/CreateJob.jsx","Components/SidebarData.jsx","Components/DashboardSidebar.jsx","graphql/mutations.js","redux/user.js","Components/LoginForm.jsx","Pages/Login.jsx","Components/Testimonials.jsx","Components/RegisterForm.jsx","Pages/Register.jsx","Components/CardItem.jsx","Components/Modal.jsx","Components/Cards.jsx","Components/HeroSection.jsx","Components/Navbar.jsx","Pages/Home.jsx","Components/HowToSection.jsx","Components/PostJobCards.jsx","Components/HowToTabs.jsx","Pages/HowTo.jsx","Pages/ViewJob.jsx","Components/UserDetails.jsx","Components/UserProfileCard.jsx","Pages/Dashboard/Profile.jsx","Pages/Dashboard/CreatedJobs.jsx","Pages/Dashboard/AcceptedJobs.jsx","Components/ImageSlider.jsx","Pages/LabelJob.jsx","Components/HowToFindSection.jsx","Components/FindJobCards.jsx","Pages/HowToFind.jsx","Components/FaqSection.jsx","Pages/Faqs.jsx","Pages/Dashboard/CompletedJobs.jsx","App.jsx","redux/store.js","index.js"],"names":["GET_JOBS","gql","GET_ME_AND_DELETED_JOBS","GET_ME","GET_ACCEPTED_JOBS","GET_CREATED_JOBS","GET_LABEL_JOB_INFO","GET_SAVED_STATE","GET_COMPLETED_JOBS","CreateJob","useState","labels","setLabels","useQuery","data","loading","error","currentTotal","setCurrentTotal","images","setImages","isBlank","element","isother","toLowerCase","checkLength","length","history","useHistory","Cookies","get","console","log","to","Calculate","e","preventDefault","currentCredits","document","querySelector","value","currentPartitions","toast","toastId","newTotal","me","balance","clearWaitingQueue","className","encType","onSubmit","a","form","FormData","parseInt","map","label","some","w","Set","size","push","id","append","JSON","stringify","query","variables","files","title","description","credits","num_partitions","i","toString","file","axios","post","headers","Authorization","then","res","errors","update","render","type","autoClose","isLoading","catch","TextField","inputProps","maxLength","fullWidth","variant","multiline","rows","defaultValue","imageList","dragProps","isDragging","image","index","alt","src","data_url","onImageUpload","onImageRemoveAll","maxNumber","acceptType","maxFileSize","resolution","onClick","warning","currentLabels","nanoid","p","onChange","target","x","placeholder","style","width","height","margin","filter","multiple","addUpdateIndex","dataURLKey","onImageUpdate","onImageRemove","slice","color","effect","Footer","isJwt","useSelector","state","user","jwt","STYLES","SIZES","Button","children","buttonStyle","buttonSize","tooltipSentence","checkButtonStyle","includes","checkButtonSize","NavItem","_path","props","open","setOpen","icon","_excluded","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgProfileIcon2","_ref","svgRef","titleId","xmlns","viewBox","ref","d","ForwardRef","SvgAcceptedIcon","fillRule","clipRule","SvgOwnedIcon","SvgLogoutIcon","SvgCompletedIcon","DropdownMenu","activeMenu","setActiveMenu","menuHeight","setMenuHeight","dropdownRef","useRef","DropdownItem","goToMenu","leftIcon","rightIcon","useEffect","current","firstChild","offsetHeight","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","el","href","remove","window","location","replace","pathname","reload","SvgMenuIcon","NavbarOther","fetchPolicy","click","setClick","button","setButton","username","closeMobileMenu","showButton","innerWidth","addEventListener","CreateJobForm","SidebarData","path","DashboardSidebar","sidebar","setSidebar","showSidebar","Provider","item","REGISTER_USER","LOGIN_USER","ACCEPT_JOB","DELETE_JOB","SAVE_STATE","EDIT_PROFILE","JOB_RESULTS","userSlice","createSlice","name","initialState","email","reducers","updateUsername","action","payload","updateBalance","updateEmail","updateJWT","actions","Login","userEmail","setUserEmail","password","setPassword","useMutation","refetchQueries","login","dispatch","useDispatch","set","message","position","POSITION","BOTTOM_CENTER","LoginForm","Testimonials","showArrows","infiniteLoop","showThumbs","showStatus","autoPlay","interval","Component","Register","setUsername","setEmail","confirmPass","setConfirmPass","errorMsg","registerMutation","submitForm","isValid","test","success","RegisterForm","CardItem","text","Background","styled","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","MdClose","Modal","showModal","setShowModal","destination","uploader","buttonLabel","deletable","acceptable","completeable","jwt1","modalRef","animation","useSpring","config","duration","opacity","transform","onCompleted","setTimeout","AcceptJob","deleteJob","delLoading","delError","delData","resultsData","jobResults","focus","JobResults","resultsLoading","keyPress","resultsError","useCallback","removeEventListener","acceptJob","job_id","localStorage","setItem","String","swal","buttons","dangerMode","prev","Cards","jobs","viewJobs","job","preview_images","HeroSection","loop","muted","paddingLeft","Navbar","navbar","setNavbar","scrollY","Home","HowToSection","PostJobCards","HowToTabs","HowTo","ViewJob","job_owner","currentId","getElementById","display","openModal","UserDetails","EditProfile","showError","userNameChange","passwordChange","htmlFor","UserProfile","firstName","Dashboard","deletedJobs","jobstring","join","CreatedJobs","ownedJobs","AcceptedJobs","acceptedJobs","currentID","ImageSlider","slides","indexCallback","setCurrent","Array","isArray","slide","image_ids","LabelJob","setIndex","isComplete","setIsComplete","assignedLabels","setAssignedLabels","setSlides","storedID","getItem","checkRadioButton","image_id","checked","checkCompletion","partition_id","labelJobInfo","restoredData","skip","submitJob","temp","labelJobState","tempSlides","saveState","buttonID","Number","values","is_complete","assignLabel","confirm","HowToFindSection","HowToFind","FindJobCards","FaqSection","Faqs","CompletedJobs","completedJobs","App","limit","exact","component","authorized","Profile","store","configureStore","reducer","userReducer","errorLink","onError","graphQLErrors","networkError","httpLink","HttpLink","uri","link","ApolloLink","from","authMiddleware","operation","forward","setContext","client","ApolloClient","concat","cache","InMemoryCache","credentials","ReactDOM","StrictMode","ApolloProvider"],"mappings":"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","file":"static/js/main.016a2982.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\n\nconst GET_USERS = gql`\n   query Users {\n      users {\n         balance\n         avatar\n      }\n   }\n`\n\nconst GET_JOBS = gql`\n   query ViewJobs {\n      viewJobs {\n         created_at\n         credits\n         description\n         job_id\n         preview_images\n         title\n         job_owner {\n            username\n         }\n      }\n   }\n`\n\nconst GET_ME_AND_DELETED_JOBS = gql`\n   query getDeletedJobs {\n      deletedJobs {\n         job_id\n         title\n      }\n      me {\n         username\n         email\n         avatar\n         balance\n      }\n   }\n`\n\nconst GET_DELETED_JOBS = gql`\n   query getDeletedJobs {\n      deletedJobs {\n         job_id\n         title\n      }\n   }\n`\n\nconst GET_ME = gql`\n   query getCurrentUser {\n      me {\n         username\n         email\n         avatar\n         balance\n      }\n   }\n`\nconst GET_ACCEPTED_JOBS = gql`\n   query acceptedJobs {\n      acceptedJobs {\n         job_owner {\n            username\n         }\n         title\n         credits\n         job_id\n         description\n         preview_images\n      }\n   }\n`\nconst GET_CREATED_JOBS = gql`\n   query createdJobs {\n      ownedJobs {\n         title\n         credits\n         job_id\n         description\n         preview_images\n      }\n   }\n`\nconst GET_LABEL_JOB_INFO = gql`\n   query LabelJobInfo($job_id: ID!) {\n      labelJobInfo(job_id: $job_id) {\n         partition_id\n         image_ids\n         images\n         labels\n         title\n      }\n   }\n`\n\nconst GET_SAVED_STATE = gql`\n   query LabelJobState($partition_id: ID!) {\n      labelJobState(partition_id: $partition_id) {\n         image_ids\n         labels\n      }\n   }\n`\n\nconst GET_COMPLETED_JOBS = gql`\n   query completedJobs {\n      completedJobs {\n         job_owner {\n            username\n         }\n         title\n         credits\n         job_id\n         description\n         preview_images\n      }\n   }\n`\n\nexport {\n   GET_USERS,\n   GET_JOBS,\n   GET_LABEL_JOB_INFO,\n   GET_SAVED_STATE,\n   GET_ME,\n   GET_ME_AND_DELETED_JOBS,\n   GET_ACCEPTED_JOBS,\n   GET_CREATED_JOBS,\n   GET_DELETED_JOBS,\n   GET_COMPLETED_JOBS\n}\n","import { useState, useEffect } from 'react'\nimport React from 'react'\nimport { GET_ME } from '../graphql/queries'\nimport '../Styles/CreateJob.css'\nimport TextField from '@material-ui/core/TextField'\nimport { Redirect } from 'react-router-dom'\nimport { nanoid } from 'nanoid'\nimport ImageUploading from 'react-images-uploading'\nimport ReactTooltip from 'react-tooltip'\nimport { useHistory } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport Cookies from 'js-cookie'\nimport { toast } from 'react-toastify'\nimport FormData from 'form-data'\nimport axios from 'axios'\n\nconst CreateJob = () => {\n   const [labels, setLabels] = useState([])\n   // eslint-disable-next-line no-unused-vars\n   const { loading, error, data } = useQuery(GET_ME)\n   const [currentTotal, setCurrentTotal] = useState(0)\n   const [images, setImages] = useState([])\n   const onChange = (imageList, addUpdateIndex) => {\n      setImages(imageList)\n   }\n   const isBlank = (element) => {\n      return element === ''\n   }\n   const isother = (element) => {\n      element=element.toLowerCase();\n      // console.log(element)\n      return element === 'other'\n   }\n   const checkLength = (element) => {\n      return element.length >= 20\n   }\n   function checkIfDuplicateExists(w) {\n      return new Set(w).size !== w.length\n   }\n\n   // const customId = \"custom-id-invalCredits\";\n   const history = useHistory()\n\n   const cook = Cookies.get('jwt')\n   if (cook == null) {\n      console.log('boy')\n      return <Redirect to=\"/\" />\n   }\n\n   const Calculate = (e) => {\n      e.preventDefault()\n      let currentCredits = document.querySelector('#credits').value\n      // let numLabels = labels.map((label) => label.label).length\n      let currentPartitions = document.querySelector('#partitions').value\n      if (currentCredits === 0) return\n      if (currentCredits <= 0 || currentCredits === '') {\n         toast.error('invalid number of credits', {\n            toastId: 'invalCredit1'\n         })\n         // toast.error('invalid number of credits')\n         // toast.clearWaitingQueue()\n         return\n      }\n\n      // const maxNumLabellers = numLabels % 2 === 0 ? numLabels + 1 : numLabels + 2\n      let newTotal = currentCredits * currentPartitions\n      if (data.me.balance < newTotal) {\n         toast.error('You do not have sufficent credits to create this job', {\n            toastId: 'invalCredit2'\n         })\n         toast.clearWaitingQueue()\n         return\n      }\n      setCurrentTotal(newTotal)\n   }\n   return (\n      <div className=\"createJob_page\">\n         <h1>Create your Job</h1>\n         <form\n            encType=\"multipart/form-data\"\n            onSubmit={async (e) => {\n               e.preventDefault()\n               Calculate(e)\n               const form = new FormData()\n               if (\n                  images.length <\n                  parseInt(document.querySelector('#partitions').value)\n               ) {\n                  toast.error(\n                     'Invalid number of Partitions, make sure partitions does not exceed images',\n                     {\n                        toastId: 'invalPartition'\n                     }\n                  )\n                  return\n               }\n               //! Begin Error checking\n\n               if (document.querySelector('#title').value === '') {\n                  toast.error('Please enter a valid job title', {\n                     toastId: 'invaltitle'\n                  })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (document.querySelector('#title').value.length > 25) {\n                  toast.error('Job title is too long', {\n                     toastId: 'invaltitleLength'\n                  })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (document.querySelector('#description').value === '') {\n                  toast.error('Please enter a valid job description', {\n                     toastId: 'invalDesc'\n                  })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (data.me.balance < currentTotal) {\n                  toast.error(\n                     'You do not have sufficent credits to create this job',\n                     {\n                        toastId: 'invalCredit3'\n                     }\n                  )\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (labels.map((label) => label.label).length === 0) {\n                  toast.error('Please enter at least one label', {\n                     toastId: \"invalLabels\"\n                   })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (labels.map((label) => label.label).some(isBlank)) {\n                  toast.error('Please make sure none of your labels are blank', {\n                     toastId: \"invallabels2\"\n                   })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (labels.map((label) => label.label).some(isother)) {\n                  toast.error('Other Label will be automatically added,please select another label', {\n                     toastId: \"invalother\"\n                   })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (labels.map((label) => label.label).some(checkLength)) {\n                  toast.error('Maximum length of labels is 20 Characters', {\n                     toastId: \"invallabelLength\"\n                   })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (checkIfDuplicateExists(labels.map((label) => label.label))) {\n                  toast.error('No Duplicate labels allowed', {\n                     toastId: \"invaldupLabel\"\n                   })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               if (\n                  document.querySelector('#partitions').value === 0 ||\n                  document.querySelector('#partitions').value === ''\n               ) {\n                  toast.error('Invalid number of partitions', {\n                     toastId: \"invalnumpartition\"\n                   })\n                  toast.clearWaitingQueue()\n                  return\n               }\n               //! End Error Checking\n               labels.push({id: \"otherLabel\",label:\"Other\"})//add other label\n               form.append(\n                  'operations',\n                  JSON.stringify({\n                     query: 'mutation ($files: [Upload], $title: String!, $description: String!, $credits: Int!, $num_partitions: Int!, $labels: [String]!){\\n  createJob (files: $files, title: $title, description: $description, credits: $credits, num_partitions: $num_partitions, labels: $labels){\\n    job_id\\n  }\\n}',\n                     variables: {\n                        files: [],\n                        title: document.querySelector('#title').value,\n                        description:\n                           document.querySelector('#description').value,\n\n                        credits: parseInt(\n                           document.querySelector('#credits').value\n                        ),\n                        num_partitions: parseInt(\n                           document.querySelector('#partitions').value\n                        ),\n                        labels: labels.map((label) => label.label)\n                     }\n                  })\n               )\n               // console.log(variables)\n               // return\n\n               let variables = {}\n               for (let i = 0; i < images.length; i++) {\n                  variables[i] = []\n                  variables[i].push(`variables.files.${i}`)\n               }\n               form.append('map', JSON.stringify(variables))\n\n               for (let i = 0; i < images.length; i++) {\n                  form.append(i.toString(), images[i].file)\n               }\n               const id = toast.loading('Please wait...', {\n                  toastId: \"loading\"\n                })\n               axios\n                  .post(\n                     'https://data-labelling-server.herokuapp.com/graphql',\n                     form,\n                     {\n                        headers: {\n                           Authorization: 'Bearer ' + Cookies.get('jwt') || null\n                        }\n                     }\n                  )\n                  .then((res) => {\n                     if (!res.data.errors) {\n                        toast.update(id, {\n                           render: 'Your Job was successfully created',\n                           type: 'success',\n                           autoClose: 3000,\n                           isLoading: false\n                        })\n                        toast.clearWaitingQueue()\n                        history.push('/dashboard/created-jobs')\n                     } else {\n                        console.log(res)\n                        toast.update(id, {\n                           render:\n                              'Your Job was not Created, Please try again ehehehe',\n                           type: 'error',\n                           autoClose: 3000,\n                           isLoading: false\n                        })\n                        toast.clearWaitingQueue()\n                     }\n                  })\n                  .catch((e) => {\n                     console.log(e)\n                     toast.update(id, {\n                        render: 'Your Job was not Created, Please try again',\n                        type: 'error',\n                        autoClose: 3000,\n                        isLoading: false\n                     })\n                  })\n            }}\n         >\n            <div className=\"createJob_mainForm\">\n               <div className=\"createJob_jobInfo\">\n                  <h3>Job Info:</h3>\n                  <div className=\"textField\">\n                     <TextField\n                        id=\"title\"\n                        inputProps={{ maxLength: 25 }}\n                        fullWidth\n                        label=\"Title\"\n                        variant=\"outlined\"\n                     />\n                  </div>\n                  <div className=\"textField\">\n                     <TextField\n                        id=\"description\"\n                        label=\"Description\"\n                        fullWidth\n                        inputProps={{ maxLength: 250 }}\n                        multiline\n                        rows={4}\n                        defaultValue=\"\"\n                        variant=\"outlined\"\n                     />{' '}\n                  </div>\n                  {({ imageList, dragProps, isDragging }) => (\n                     <div {...dragProps}>\n                        {isDragging ? 'Drop here please' : 'Upload space'}\n                        {imageList.map((image, index) => (\n                           <img key={index} alt=\"img\" src={image.data_url} />\n                        ))}\n                     </div>\n                  )}\n\n                  {({ imageList, onImageUpload, onImageRemoveAll, errors }) =>\n                     errors && (\n                        <div>\n                           {errors.maxNumber && (\n                              <span>\n                                 Number of selected images exceed maxNumber\n                              </span>\n                           )}\n                           {errors.acceptType && (\n                              <span>Your selected file type is not allow</span>\n                           )}\n                           {errors.maxFileSize && (\n                              <span>Selected file size exceed maxFileSize</span>\n                           )}\n                           {errors.resolution && (\n                              <span>\n                                 Selected file is not match your desired\n                                 resolution\n                              </span>\n                           )}\n                        </div>\n                     )\n                  }\n                  <div className=\"labelSection\">\n                     <button\n                        //\n                        data-tip=\"A default 'other' label will be added to your chosen labels\"\n                        className=\"btn-hover\"\n                        type=\"button\"\n                        onClick={() => {\n                           if (labels.length > 4) {\n                              toast.warning(\n                                 'You can not have more than 5 labels', {\n                                    toastId: \"toomanyLabels\"\n                                  }\n                              )\n                              return\n                           }\n                           setLabels((currentLabels) => [\n                              ...currentLabels,\n                              {\n                                 id: nanoid(),\n                                 label: ''\n                              }\n                           ])\n                        }}\n                     >\n                        Add Label\n                     </button>\n                     {labels.map((p) => {\n                        if(p.label=='Other'){\n                           return(<div></div>)\n                        }\n                        return (\n                           <div key={p.id}>\n                              <TextField\n                                 inputProps={{ maxLength: 15 }}\n                                 onChange={(e) => {\n                                    const label = e.target.value\n                                    setLabels((currentLabels) =>\n                                       currentLabels.map((x) =>\n                                          x.id === p.id\n                                             ? {\n                                                  ...x,\n                                                  label\n                                               }\n                                             : x\n                                       )\n                                    )\n                                 }}\n                                 placeholder=\"Please enter a Label\"\n                                 value={p.label}\n                              />\n                              <button\n                                 className=\"btn-hover\"\n                                 style={{\n                                    width: '10%',\n                                    height: '100%',\n                                    margin: '10px '\n                                 }}\n                                 onClick={() => {\n                                    setLabels((currentLabels) =>\n                                       currentLabels.filter(\n                                          (x) => x.id !== p.id\n                                       )\n                                    )\n                                 }}\n                              >\n                                 x\n                              </button>\n                           </div>\n                        )\n                     })}\n                  </div>\n               </div>\n               <div className=\"createJob_imageSection\">\n                  <h3>Please upload your images here:</h3>\n\n                  <ImageUploading\n                     multiple\n                     value={images}\n                     onChange={onChange}\n                     dataURLKey=\"data_url\"\n                  >\n                     {({\n                        imageList,\n                        onImageUpload,\n                        onImageRemoveAll,\n                        onImageUpdate,\n                        onImageRemove,\n                        isDragging,\n                        dragProps\n                     }) => (\n                        // write your building UI\n                        <div className=\"upload__image-wrapper\">\n                           <h2>Total Images : {imageList.length}</h2>\n                           <div className=\"createJob_imagePrev\">\n                              {imageList.slice(0, 9).map(\n                                 (\n                                    image,\n                                    index //set the maximum images you want in the preview to the upper bounds of slice\n                                 ) => (\n                                    <div key={index} className=\"image-item\">\n                                       <img\n                                          src={image.data_url}\n                                          alt=\"\"\n                                          width=\"100\"\n                                          height=\"70\"\n                                       />\n                                    </div>\n                                 )\n                              )}\n                           </div>\n                           <div className=\"upload__button-section\">\n                              <button\n                                 className=\"btn-hover\"\n                                 style={isDragging ? { color: 'red' } : null}\n                                 onClick={(e) => {\n                                    e.preventDefault()\n                                    onImageUpload()\n                                 }}\n                                 {...dragProps}\n                              >\n                                 Click or Drop here\n                              </button>\n                              &nbsp;\n                              <button\n                                 className=\"btn-hover\"\n                                 onClick={(e) => {\n                                    onImageRemoveAll()\n                                    e.preventDefault()\n                                 }}\n                              >\n                                 Remove all images\n                              </button>\n                           </div>\n                        </div>\n                     )}\n                  </ImageUploading>\n               </div>\n\n               <div className=\"createJob_credit-section\">\n                  <h3>Credits Info:</h3>\n\n                  <TextField\n                     id=\"credits\"\n                     label=\"Credits\"\n                     type=\"number\"\n                     variant=\"outlined\"\n                  />\n\n                  <TextField\n                     id=\"partitions\"\n                     label=\"Number of Partitions\"\n                     type=\"number\"\n                     variant=\"outlined\"\n                  />\n                  <h2 id=\"totalCredits\">Total: {currentTotal}</h2>\n                  <button\n                     data-place=\"bottom\"\n                     data-multiline=\"true\"\n                     data-tip=\"This will calculate the total credits spent for this job.<br/>Each partition will pay out Credits/Number of Partitions<br/>\"\n                     className=\"btn-hover\"\n                     onClick={Calculate}\n                  >\n                     Calculate\n                  </button>\n                  <ReactTooltip effect=\"solid\" />\n               </div>\n            </div>\n            <div className=\"createJob_submitSection\">\n               <button\n                  className=\"btn-hover\"\n                  variant=\"contained\"\n                  color=\"default\"\n                  type=\"submit\"\n               >\n                  Submit Job\n               </button>\n            </div>\n         </form>\n      </div>\n   )\n}\n\nexport default CreateJob\n","import React from 'react'\nimport '../Styles/Footer.css'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nfunction Footer() {\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt !== '') {\n      isJwt = true\n   }\n\n   return (\n      <div className=\"footer-container\">\n         <div className=\"footer-links\">\n            <div className=\"footer-link-wrapper\">\n               <div className=\"footer-link-items\">\n                  <h2>Main Pages</h2>\n                  <Link to=\"/\">Home</Link>\n                  <Link to=\"/view-job\">Find Job</Link>\n                  <Link to=\"/how-to\">How it Works</Link>\n               </div>\n            </div>\n            <div className=\"footer-link-wrapper\">\n               {isJwt ? (\n                  <div></div>\n               ) : (\n                  <div className=\"footer-link-items\">\n                     <h2>Profile</h2>\n                     <Link to=\"/login\">Login</Link>\n                     <Link to=\"/register\">Sign Up</Link>\n                  </div>\n               )}\n               {!isJwt ? (\n                  <div></div>\n               ) : (\n                  <div className=\"footer-link-items\">\n                     <h2>Profile</h2>\n                     <Link to=\"/create-job\">Create Job</Link>\n                     <Link to=\"/dashboard/created-jobs\">My Jobs</Link>\n                     <Link to=\"/dashboard/accepted-jobs\">Accepted Jobs</Link>\n                     <Link to=\"/dashboard/profile\">Edit Profile</Link>\n                  </div>\n               )}\n               <div className=\"footer-link-items\">\n                  <h2>About Us</h2>\n                  <Link to=\"/faqs\">FAQs</Link>\n               </div>\n            </div>\n         </div>\n         <section className=\"social-media\">\n            <div className=\"social-media-wrap\">\n               <div className=\"footer-logo\">\n                  <Link to=\"/\" className=\"social-logo\">\n                     <img src=\"./images/login_logo.png\" alt=\"bug\" height={60} />\n                  </Link>\n               </div>\n               <small className=\"website-rights\">LABEL.ml © 2021</small>\n            </div>\n         </section>\n      </div>\n   )\n}\n\nexport default Footer\n","import React from 'react'\nimport '../Styles/Button.css'\nimport { Link } from 'react-router-dom'\n\nconst STYLES = ['btn-hover', 'btn--outline', 'btn--test']\n\nconst SIZES = ['btn--medium', 'btn--large', 'btn--small']\n\nexport const Button = ({\n   id,\n   children,\n   type,\n   onClick,\n   buttonStyle,\n   buttonSize,\n   to,\n   tooltipSentence,\n   style\n}) => {\n   const checkButtonStyle = STYLES.includes(buttonStyle)\n      ? buttonStyle\n      : STYLES[0]\n\n   const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n   return (\n      <Link to={to} className=\"btn-mobile\">\n         <button\n            data-tip={tooltipSentence}\n            id={id}\n            className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n            onClick={onClick}\n            type={type}\n            style={{ style }}\n         >\n            {children}\n         </button>\n      </Link>\n   )\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport '../Styles/DropdownMenu.css'\n\nimport React, { useState } from 'react'\n\nfunction NavItem(props) {\n   const [open, setOpen] = useState(false)\n\n   return (\n      <li className=\"navigation-item\">\n         <a className=\"icon-button\" onClick={() => setOpen(!open)}>\n            {props.icon}\n         </a>\n\n         {open && props.children}\n      </li>\n   )\n}\n\nexport default NavItem\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgProfileIcon2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.822 18.096c-3.439-.794-6.64-1.49-5.09-4.418 4.72-8.912 1.251-13.678-3.732-13.678-5.082 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-3.073.71-3.188 2.236-3.178 4.904l.004 1h23.99l.004-.969c.012-2.688-.092-4.222-3.176-4.935z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgProfileIcon2);\nexport default __webpack_public_path__ + \"static/media/profile_icon2.024a878c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAcceptedIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.403 24h-13.403v-22h3c1.231 0 2.181-1.084 3-2h8c.821.916 1.772 2 3 2h3v9.15c-.485-.098-.987-.15-1.5-.15l-.5.016v-7.016h-4l-2 2h-3.897l-2.103-2h-4v18h9.866c.397.751.919 1.427 1.537 2zm5.097-11c3.035 0 5.5 2.464 5.5 5.5s-2.465 5.5-5.5 5.5c-3.036 0-5.5-2.464-5.5-5.5s2.464-5.5 5.5-5.5zm0 2c1.931 0 3.5 1.568 3.5 3.5s-1.569 3.5-3.5 3.5c-1.932 0-3.5-1.568-3.5-3.5s1.568-3.5 3.5-3.5zm2.5 4h-3v-3h1v2h2v1zm-15.151-4.052l-1.049-.984-.8.823 1.864 1.776 3.136-3.192-.815-.808-2.336 2.385zm6.151 1.052h-2v-1h2v1zm2-2h-4v-1h4v1zm-8.151-4.025l-1.049-.983-.8.823 1.864 1.776 3.136-3.192-.815-.808-2.336 2.384zm8.151 1.025h-4v-1h4v1zm0-2h-4v-1h4v1zm-5-6c0 .552.449 1 1 1 .553 0 1-.448 1-1s-.447-1-1-1c-.551 0-1 .448-1 1z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAcceptedIcon);\nexport default __webpack_public_path__ + \"static/media/accepted_icon.ae0c6b08.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOwnedIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 2c1.695 1.942 2.371 3 4 3h13v17h-24v-20h7zm4 5c-2.339 0-3.537-1.388-4.917-3h-4.083v16h20v-13h-11zm2 6h3v2h-3v3h-2v-3h-3v-2h3v-3h2v3z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOwnedIcon);\nexport default __webpack_public_path__ + \"static/media/owned_icon.860021b5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogoutIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 9v-4l8 7-8 7v-4h-8v-6h8zm-16-7v20h14v-2h-12v-16h12v-2h-14z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoutIcon);\nexport default __webpack_public_path__ + \"static/media/logout_icon.9fbf96f0.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCompletedIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.856 10.303c.086.554.144 1.118.144 1.697 0 6.075-4.925 11-11 11s-11-4.925-11-11 4.925-11 11-11c2.347 0 4.518.741 6.304 1.993l-1.422 1.457c-1.408-.913-3.082-1.45-4.882-1.45-4.962 0-9 4.038-9 9s4.038 9 9 9c4.894 0 8.879-3.928 8.99-8.795l1.866-1.902zm-.952-8.136l-9.404 9.639-3.843-3.614-3.095 3.098 6.938 6.71 12.5-12.737-3.096-3.096z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCompletedIcon);\nexport default __webpack_public_path__ + \"static/media/completed_icon.bec11047.svg\";\nexport { ForwardRef as ReactComponent };","import '../Styles/DropdownMenu.css'\nimport { ReactComponent as ProfileIcon } from './icons/profile_icon2.svg'\nimport { ReactComponent as AcceptedIcon } from './icons/accepted_icon.svg'\nimport { ReactComponent as OwnedIcon } from './icons/owned_icon.svg'\nimport { ReactComponent as LogOutIcon } from './icons/logout_icon.svg'\nimport { ReactComponent as CompletedIcon } from './icons/completed_icon.svg'\nimport Cookies from 'js-cookie'\nimport { toast } from 'react-toastify'\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nfunction DropdownMenu() {\n   const [activeMenu, setActiveMenu] = useState('main')\n   const [menuHeight, setMenuHeight] = useState(null)\n   const dropdownRef = useRef(null)\n\n   const deleteJWT = () => {\n      Cookies.remove('jwt') //deletes the jwt token on signout\n      window.location.replace(window.location.pathname + \"#/\")\n      window.location.reload();\n      // if(window.location.pathname==\"/\"){\n      //    toast.warning(\"You have logged out\")\n      //    // setTimeout(window.location.reload(),5000)\n      // }\n      \n   }\n\n   useEffect(() => {\n      setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\n   }, [])\n\n   function calcHeight(el) {\n      const height = el.offsetHeight\n      setMenuHeight(height)\n   }\n\n   function DropdownItem(props) {\n      return (\n         <div\n            className=\"menu-item\"\n            onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}\n         >\n            <span className=\"icon-button\">{props.leftIcon}</span>\n            {props.children}\n            <span className=\"icon-right\">{props.rightIcon}</span>\n         </div>\n      )\n   }\n\n   return (\n      <div\n         className=\"dropdown\"\n         style={{ height: menuHeight }}\n         ref={dropdownRef}\n      >\n         <CSSTransition\n            in={activeMenu === 'main'}\n            timeout={500}\n            classNames=\"menu-primary\"\n            unmountOnExit\n            onEnter={calcHeight}\n         >\n            <div className=\"menu\">\n               <a href=\"#/dashboard/profile\">\n                  <DropdownItem leftIcon={<ProfileIcon />}>\n                     My Profile\n                  </DropdownItem>\n               </a>\n               <a href=\"#/dashboard/accepted-jobs\">\n                  <DropdownItem leftIcon={<AcceptedIcon />}>\n                     Accepted Jobs\n                  </DropdownItem>\n               </a>\n               <a href=\"#/dashboard/created-jobs\">\n                  <DropdownItem leftIcon={<OwnedIcon />}>\n                     Created Jobs\n                  </DropdownItem>\n               </a>\n               <a href=\"#/dashboard/completed-jobs\">\n                  <DropdownItem leftIcon={<CompletedIcon />}>\n                     Job Results\n                  </DropdownItem>\n               </a>\n               <a onClick={deleteJWT}>\n                  <DropdownItem leftIcon={<LogOutIcon />}>\n                     Sign Out\n                  </DropdownItem>\n               </a>\n            </div>\n         </CSSTransition>\n      </div>\n   )\n}\n\nexport default DropdownMenu\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenuIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenuIcon);\nexport default __webpack_public_path__ + \"static/media/menu_icon.51815719.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react'\nimport { Button } from './Button'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport '../Styles/Navbar_other.css'\nimport NavItem from './NavItem'\nimport DropdownMenu from './DropdownMenu'\nimport { ReactComponent as MenuIcon } from './icons/menu_icon.svg'\nimport { GET_ME } from '../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport { toast } from 'react-toastify'\nimport ReactLoading from 'react-loading'\n\nfunction NavbarOther() {\n   const { loading, error, data } = useQuery(GET_ME,{\n      fetchPolicy: 'cache-and-network'\n   })\n   const [click, setClick] = useState(false)\n   const [button, setButton] = useState(true)\n   let username = useSelector((state) => state.user.username)\n   let balance = useSelector((state) => state.user.username)\n   if (data) {\n      if (data.me) {\n         if (!loading) {\n            username = data.me.username\n            balance = data.me.balance\n         }\n      }\n   }\n   \n   const handleClick = () => setClick(!click)\n   const closeMobileMenu = () => setClick(false)\n\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt !== '') {\n      isJwt = true\n   }\n\n   // const deleteJWT = () => {\n   //    Cookies.remove('jwt') //deletes the jwt token on signout\n   //    window.location.reload()\n   //    // toast.warning(\"You have logged out\")\n   // }\n\n   const showButton = () => {\n      if (window.innerWidth <= 960) {\n         setButton(false)\n      } else {\n         setButton(true)\n      }\n   }\n\n   useEffect(() => {\n      showButton()\n   }, [])\n\n   window.addEventListener('resize', showButton)\n\n   return (\n      <nav className=\"navbar-other\">\n         <div className=\"navbar-container\">\n            <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\n               <img src=\"./images/logo(white).png\" alt=\"bug\" height={120} />\n            </Link>\n            <div className=\"menu-icon\" onClick={handleClick}>\n               <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n            </div>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n               <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\n                     Home\n                  </Link>\n               </li>\n               {/* {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/dashboard\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Dashboard\n                     </Link>\n                  </li>\n               )} */}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/how-to\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How it Works\n                  </Link>\n               </li>\n               {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/create-job\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Create Job\n                     </Link>\n                  </li>\n               )}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/view-job\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     Find A Job\n                  </Link>\n               </li>\n\n               <li>\n                  <Link\n                     to=\"/login\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Login\n                  </Link>\n               </li>\n               <li>\n                  <Link\n                     to=\"/register\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Sign Up\n                  </Link>\n               </li>\n            </ul>\n\n            {button && !isJwt ? (\n               <Button buttonStyle=\"btn--outline\" to=\"/login\">\n                  Login\n               </Button>\n            ) : (\n               <div></div>\n            )}\n\n            {button && isJwt ? (\n               <div className=\"navbar__username\">\n                  <div className=\"username__label\">\n                     {loading ? (\n                        <ReactLoading\n                           type={'spin'}\n                           // color={'black'}\n                           height={'20px'}\n                           color={'#000000'}\n                           width={'20px'}\n                           // className=\"acceptedJob__loadingSpin\"\n                        />\n                     ) : (\n                        <b>{username}</b>\n                     )}\n                  </div>\n                  <NavItem icon={<MenuIcon />}>\n                     <DropdownMenu></DropdownMenu>\n                  </NavItem>\n               </div>\n            ) : (\n               <div></div>\n            )}\n            {!isJwt ? (\n               <div></div>\n            ) : (\n               <div className=\"creditsDisplay\">${balance}</div>\n            )}\n            {/* {button && isJwt ? (\n               <Button buttonStyle=\"btn--outline\" onClick={deleteJWT}>\n                  Sign Out\n               </Button>\n            ) : (\n               <div></div>\n            )} */}\n            {button && !isJwt ? (\n               <Button\n                  buttonStyle=\"btn--primary\"\n                  buttonSize=\"btn--small\"\n                  to=\"/register\"\n               >\n                  Sign Up\n               </Button>\n            ) : (\n               <div></div>\n            )}\n         </div>\n      </nav>\n   )\n}\n\nexport default NavbarOther\n","import React from 'react'\nimport CreateJobForm from '../Components/CreateJobForm'\nimport Footer from '../Components/Footer'\nimport NavbarOther from '../Components/NavbarOther'\nconst CreateJob = () => {\n   return (\n      <div>\n         <NavbarOther />\n         <CreateJobForm />\n         <Footer />\n      </div>\n   )\n}\n\nexport default CreateJob\n","import React from 'react'\nimport * as FaIcons from 'react-icons/fa'\nimport * as AiIcons from 'react-icons/ai'\nimport * as IoIcons from 'react-icons/io'\n\nexport const SidebarData = [\n   {\n      title: 'Home',\n      path: '/',\n      icon: <AiIcons.AiFillHome />,\n      className: 'dash--nav-text'\n   },\n   {\n      title: 'Profile',\n      path: '/dashboard/profile',\n      icon: <IoIcons.IoMdPerson />,\n      className: 'dash--nav-text'\n   },\n   {\n      title: 'Accepted Jobs',\n      path: '/dashboard/accepted-jobs',\n      icon: <IoIcons.IoIosPaper />,\n      className: 'dash--nav-text'\n   },\n   {\n      title: 'Created Jobs',\n      path: '/dashboard/created-jobs',\n      icon: <FaIcons.FaCartPlus />,\n      className: 'dash--nav-text'\n   }\n]\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as FaIcons from 'react-icons/fa'\nimport * as AiIcons from 'react-icons/ai'\nimport { SidebarData } from './SidebarData'\nimport '../Styles/DashboardNav.css'\nimport { IconContext } from 'react-icons'\n\nconst DashboardSidebar = () => {\n   const [sidebar, setSidebar] = useState(false)\n\n   const showSidebar = () => setSidebar(!sidebar)\n\n   return (\n      <div>\n         <IconContext.Provider value={{ color: '#fff' }}>\n            <div className=\"dash--navbar\">\n               <Link to=\"#\" className=\"dash--menu-bars\">\n                  <FaIcons.FaBars onClick={showSidebar} />\n               </Link>\n            </div>\n            <nav\n               className={sidebar ? 'dash--nav-menu active' : 'dash--nav-menu'}\n            >\n               <ul className=\"dash--nav-menu-items\" onClick={showSidebar}>\n                  <li className=\"dash--navbar-toggle\">\n                     <Link to=\"#\" className=\"dash--menu-bars\">\n                        <AiIcons.AiOutlineClose />\n                     </Link>\n                  </li>\n                  {SidebarData.map((item, index) => {\n                     return (\n                        <li key={index} className={item.className}>\n                           <Link to={item.path}>\n                              {item.icon}\n                              <span>{item.title}</span>\n                           </Link>\n                        </li>\n                     )\n                  })}\n               </ul>\n            </nav>\n         </IconContext.Provider>\n      </div>\n   )\n}\n\nexport default DashboardSidebar\n","import { gql } from '@apollo/client'\n\nconst REGISTER_USER = gql`\n   mutation register($username: String!, $email: String!, $password: String!) {\n      register(username: $username, email: $email, password: $password) {\n         user_id\n         username\n         jwt\n      }\n   }\n`\nconst CREATE_JOB = gql`\n   mutation CreateJob(\n      $title: String!\n      $description: String!\n      $credits: Int!\n      $labels: [String]!\n      $num_partitions: Int!\n      $files: [Upload]\n   ) {\n      createJob(\n         title: $title\n         description: $description\n         credits: $credits\n         labels: $labels\n         num_partitions: $num_partitions\n         files: $files\n      ) {\n         job_id\n         created_at\n         title\n      }\n   }\n`\n\nconst LOGIN_USER = gql`\n   mutation Login($email: String!, $password: String!) {\n      login(email: $email, password: $password) {\n         username\n         email\n         jwt\n      }\n   }\n`\n\nconst ACCEPT_JOB = gql`\n   mutation AcceptJob($job_id: ID!) {\n      acceptJob(job_id: $job_id)\n   }\n`\n\nconst DELETE_JOB = gql`\n   mutation deleteJob($job_id: ID!) {\n      deleteJob(job_id: $job_id)\n   }\n`\n\nconst SAVE_STATE = gql`\n   mutation SaveState(\n      $image_ids: [ID]!\n      $labels: [String]!\n      $partition_id: ID\n      $is_complete: Boolean\n   ) {\n      saveState(\n         image_ids: $image_ids\n         labels: $labels\n         partition_id: $partition_id\n         is_complete: $is_complete\n      )\n   }\n`\n\nconst EDIT_PROFILE = gql`\n   mutation EditProfile($username: String, $password: String, $avatar: String) {\n      editProfile(username: $username, password: $password, avatar: $avatar) {\n         username\n         password\n         avatar\n      }\n   }\n`\n\nconst JOB_RESULTS = gql`\n   mutation JobResults($job_id: ID!) {\n      jobResults(job_id: $job_id)\n   }\n`\nexport {\n   REGISTER_USER,\n   LOGIN_USER,\n   CREATE_JOB,\n   ACCEPT_JOB,\n   SAVE_STATE,\n   EDIT_PROFILE,\n   DELETE_JOB,\n   JOB_RESULTS\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState:{\n      username: \"\",\n      balance: 0,\n      email: \"\",\n      jwt: \"\"\n  },\n  reducers: {\n     updateUsername : (state, action) => {\n         state.username = action.payload;\n     },\n\n     updateBalance: (state, action) => {\n         state.balance = action.payload;\n     },\n\n     updateEmail: (state, action) => {\n         state.email = action.payload;\n     },\n\n     updateJWT: (state, action) => {\n        state.jwt = action.payload;\n     }\n  }\n\n});\n\nexport const { updateBalance, updateEmail, updateJWT, updateUsername } = userSlice.actions;\n\nexport default userSlice.reducer;","import React, { useState } from 'react'\nimport '../Styles/Login.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { LOGIN_USER } from '../graphql/mutations'\nimport { useMutation } from '@apollo/client'\nimport Cookies from 'js-cookie'\nimport { useDispatch } from 'react-redux'\nimport { updateEmail, updateJWT, updateUsername } from '../redux/user'\nimport { toast } from 'react-toastify'\nimport { GET_ME} from '../graphql/queries'\n\nconst Login = () => {\n   const [userEmail, setUserEmail] = useState('')\n   const [password, setPassword] = useState('')\n   const [login, { data, loading, error }] = useMutation(LOGIN_USER, {\n      refetchQueries: [GET_ME, 'me']\n   })\n\n   //Example code on how to call the variables in store\n   // const email = useSelector((state) => state.user.email)\n   const dispatch = useDispatch()\n\n   if (data && !error) {\n      Cookies.set('jwt', data.login.jwt)\n      //Set our redux variables\n      dispatch(updateEmail(data.login.email))\n      dispatch(updateUsername(data.login.username))\n      dispatch(updateJWT(data.login.jwt))\n      return <Redirect to=\"/dashboard/Profile\" />\n   }\n\n   return (\n      <div className=\"login_container\">\n         <div className=\"forms-container\">\n            <form\n               className=\"sign-in-form\"\n               // onSubmit={submitForm}\n               onSubmit={(e) => {\n                  e.preventDefault()\n                  login({\n                     variables: {\n                        email: userEmail,\n                        password: password\n                     }\n                  }).catch((error) => {\n                     toast.error(error.message, {\n                        position: toast.POSITION.BOTTOM_CENTER\n                     })\n                  })\n               }}\n            >\n               <Link to=\"/\">\n                  <img\n                     className=\"login_logo\"\n                     alt=\"LOGO\"\n                     src=\"./images/login_logo.png\"\n                  />\n               </Link>\n               <h2 className=\"title\">Sign in</h2>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-envelope icon\"></i>\n                  <input\n                     type=\"text\"\n                     value={userEmail}\n                     onChange={(e) => setUserEmail(e.target.value)}\n                     id=\"email\"\n                     placeholder=\"Email\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-lock icon\"></i>\n                  <input\n                     type=\"password\"\n                     value={password}\n                     onChange={(e) => setPassword(e.target.value)}\n                     id=\"pword\"\n                     placeholder=\"Password\"\n                  />\n               </div>\n\n               {/* <p className=\"forgot-pass\">Forgot Password?</p> */}\n\n               <button type=\"submit\" className=\"login_signInButton\">\n                  {loading ? 'Loading...' : 'LOGIN'}\n               </button>\n               {/* <p className=\"social-text\">Or login with</p> */}\n\n               <p className=\"other-text\">\n                  Not a member?{' '}\n                  <a id=\"hover\" className=\"underlineHover\" href=\"/register\">\n                     Sign up now\n                  </a>\n               </p>\n            </form>\n         </div>\n      </div>\n\n      //         {/* <button\n      //            onClick={() => {\n                  //   history.push('/register')\n      //            }}\n      //            className=\"login_registerButton\"\n      //         >\n      //            Register\n      //         </button> */}\n   )\n}\n\nexport default Login\n","import React from 'react'\nimport LoginForm from '../Components/LoginForm'\nimport Footer from '../Components/Footer'\nimport NavbarOther from '../Components/NavbarOther'\n\nconst Login = () => {\n   return (\n      <div>\n         <NavbarOther />\n         <LoginForm />\n         <Footer />\n      </div>\n   )\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport { Carousel } from 'react-responsive-carousel'\nimport '../Styles/Testimonials.css'\n\nexport default class Testimonials extends Component {\n   render() {\n      return (\n         <div className=\"testimonials\">\n            <h2 className=\"testimonials-heading\">Testimonials</h2>\n            <Carousel\n               showArrows={true}\n               infiniteLoop={true}\n               showThumbs={false}\n               showStatus={false}\n               autoPlay={true}\n               interval={6100}\n            >\n               <div>\n                  <img src=\"./images/p1.png\" alt=\"imgstuff\" />\n                  <div className=\"myCarousel\">\n                     <h3>Elon Musk</h3>\n                     <h4>Entrepreneur</h4>\n                     <p>\n                        When the data labelling is important enough, you do it\n                        even if the odds of labelling are not in your favor\n                     </p>\n                  </div>\n               </div>\n\n               <div>\n                  <img src=\"./images/p3.png\" alt=\"imgstuff\"/>\n                  <div className=\"myCarousel\">\n                     <h3>Emilia Clarke</h3>\n                     <h4>Actress</h4>\n                     <p>\n                        I love this website! I cant recommend it any further, it\n                        deserves the highest regard in all stations of ML\n                     </p>\n                  </div>\n               </div>\n\n               <div>\n                  <img src=\"./images/p2.jpg\" alt=\"imgstuff\"/>\n                  <div className=\"myCarousel\">\n                     <h3>Gucci Mane</h3>\n                     <h4>Musician</h4>\n                     <p>\n                        If a man does not have the data labelled, then he is\n                        lost. But the same man can be lost in the labelling\n                     </p>\n                  </div>\n               </div>\n            </Carousel>\n         </div>\n      )\n   }\n}\n","import React, { useState } from 'react'\nimport '../Styles/Register.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useMutation } from '@apollo/client'\nimport { toast } from 'react-toastify'\nimport { REGISTER_USER } from '../graphql/mutations'\n\nconst Register = () => {\n   const [username, setUsername] = useState('')\n   const [email, setEmail] = useState('')\n   const [password, setPassword] = useState('')\n   const [confirmPass, setConfirmPass] = useState('')\n   // eslint-disable-next-line no-unused-vars\n   const [errorMsg, setErrorMsg] = useState('')\n\n   // eslint-disable-next-line no-unused-vars\n   const [registerMutation, { data, loading, error }] =\n      useMutation(REGISTER_USER)\n\n   const submitForm = async (e) => {\n      let isValid = true\n      e.preventDefault()\n      if (!username) {\n         isValid = false\n         toast.error('Please enter a username', {\n            toastId: \"invalusername\"\n          })\n      } else if (username.length > 12) {\n         isValid = false\n         toast.error('Username must not be more than 12 characters', {\n            toastId: \"invaluserlength\"\n          })\n      } else if (!email) {\n         isValid = false\n         toast.error('Please enter an email address', {\n            toastId: \"invalemailaddy\"\n          })\n      } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n         isValid = false\n         toast.error('Please enter a valid email', {\n            toastId: \"invalemailaddy2\"\n          })\n      } else if (!password) {\n         isValid = false\n         toast.error('Please enter a password', {\n            toastId: \"invalpass\"\n          })\n      } else if (password.length < 5) {\n         isValid = false\n         toast.error('Password must be at least 5 characters', {\n            toastId: \"invalpasslength\"\n          })\n      } else if (password !== confirmPass) {\n         isValid = false\n         toast.error('Passwords do not match', {\n            toastId: \"invalpasswordmatch\"\n          })\n      }\n      if (isValid) {\n         await registerMutation({\n            variables: {\n               username: username,\n               email: email,\n               password: password\n            }\n         }).catch((error) => {\n            if (\n               error.message ===\n               'Unique constraint failed on the fields: (`email`)'\n            ) {\n               toast.error('This email address already exists', {\n                  toastId: \"invalemailexists\"\n                })\n               return\n            }\n            toast.error(error.message, {\n               position: toast.POSITION.BOTTOM_CENTER\n            })\n         })\n         toast.success('You Have Been Succesfully Registered')\n      }\n   }\n\n   if (data) {\n      return <Redirect to=\"/login\" />\n   }\n\n   return (\n      <div className=\"register_container\">\n         <div className=\"forms-container\">\n            <form className=\"register-form\" onSubmit={submitForm}>\n               <Link to=\"/\">\n                  <img\n                     className=\"login_logo\"\n                     alt=\"LOGO\"\n                     src=\"./images/login_logo.png\"\n                  />\n               </Link>\n               <h2 className=\"title\">Register</h2>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-user icon\"></i>\n                  <input\n                     type=\"text\"\n                     value={username}\n                     onChange={(e) => {\n                        setUsername(e.target.value)\n                     }}\n                     id=\"username\"\n                     placeholder=\"Username\"\n                     name=\"username\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-envelope icon\"></i>\n                  <input\n                     type=\"text\"\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                     id=\"email\"\n                     placeholder=\"Email\"\n                     name=\"email\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-lock icon\"></i>\n                  <input\n                     type=\"password\"\n                     value={password}\n                     onChange={(e) => setPassword(e.target.value)}\n                     id=\"pword\"\n                     placeholder=\"Password\"\n                     name=\"password\"\n                  />\n               </div>\n               <div className=\"input-field\">\n                  <i className=\"fas fa-lock icon\"></i>\n                  <input\n                     type=\"password\"\n                     value={confirmPass}\n                     onChange={(e) => setConfirmPass(e.target.value)}\n                     id=\"conf_pword\"\n                     placeholder=\"Confirm Password\"\n                     name=\"checked\"\n                  />\n               </div>\n               {errorMsg && <p>{errorMsg}</p>}\n               <button type=\"submit\" className=\"register_registerButton\">\n                  {loading ? 'registering...' : 'Sign Up'}\n               </button>\n\n               {/* <p className=\"social-text\">Or sign up with</p> */}\n               {/* <div className=\"social-media\">\n                  <a href=\"#\" className=\"social-icon\">\n                     <i className=\"fab fa-facebook-f\"></i>\n                  </a>\n                  <a href=\"#\" className=\"social-icon\">\n                     <i className=\"fab fa-twitter\"></i>\n                  </a>\n                  <a href=\"#\" className=\"social-icon\">\n                     <i className=\"fab fa-google\"></i>\n                  </a>\n               </div> */}\n               <p className=\"other-text\">\n                  Already a member?{' '}\n                  <a id=\"hover\" className=\"underlineHover\" href=\"/login\">\n                     Login now\n                  </a>\n               </p>\n\n               <p>By registering, you accept our Terms & Conditions</p>\n            </form>\n         </div>\n      </div>\n   )\n}\n\nexport default Register\n","import React from 'react'\nimport RegisterForm from '../Components/RegisterForm'\nimport Footer from '../Components/Footer'\nimport NavbarOther from '../Components/NavbarOther'\n\nconst Register = () => {\n   return (\n      <div>\n         <NavbarOther />\n         <RegisterForm />\n         <Footer />\n      </div>\n   )\n}\n\nexport default Register\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction CardItem(props) {\n   return (\n      <li className=\"cards__item\">\n         <Link className=\"cards__item__link\" to={props.path}>\n            <figure\n               className=\"cards__item__pic-wrap\"\n               data-category={props.credits}\n            >\n               <img className=\"cards__item__img\" src={props.src} alt=\"Card item\" />\n            </figure>\n            <div className=\"cards__item__info\">\n               <h5 className=\"cards__item__text\">{props.text}</h5>\n            </div>\n         </Link>\n      </li>\n   )\n}\n\nexport default CardItem\n","import React, { useRef, useEffect, useCallback } from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport styled from 'styled-components'\nimport { MdClose } from 'react-icons/md'\nimport '../Styles/Modal.css'\nimport ReactTooltip from 'react-tooltip'\n// import { Link, Redirect, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { ACCEPT_JOB, DELETE_JOB, JOB_RESULTS } from '../graphql/mutations'\nimport { GET_ACCEPTED_JOBS, GET_CREATED_JOBS } from '../graphql/queries'\nimport Cookies from 'js-cookie'\nimport { toast } from 'react-toastify'\nimport swal from 'sweetalert'\n\nconst Background = styled.div`\n   z-index: 1;\n   width: 100%;\n   height: 100%;\n   background: rgba(0, 0, 0, 0.8);\n   position: fixed;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n   margin-bottom: 15%;\n   width: 800px;\n   height: 400px;\n   box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n   background: #fff;\n   color: #000;\n   display: grid;\n   grid-template-columns: 1fr 1fr;\n   position: relative;\n   z-index: 10;\n   border-radius: 10px;\n`\n\nconst ModalImg = styled.img`\n   margin-top: 5%;\n   margin-top: 8.5%;\n   object-fit: cover;\n   width: 400px;\n   height: 330px;\n   padding-top: 2rem;\n   padding-bottom: 2rem;\n   padding-left: 2rem;\n   padding-right: 2rem;\n   border-radius: 45px;\n   background: #fff;\n`\n\nconst ModalContent = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   line-height: 1.8;\n   color: #141414;\n   p {\n      margin-bottom: 1rem;\n   }\n   button {\n      padding: 10px 24px;\n      background: #141414;\n      color: #fff;\n      border: none;\n   }\n`\n\nconst CloseModalButton = styled(MdClose)`\n   cursor: pointer;\n   position: absolute;\n   top: 20px;\n   right: 20px;\n   width: 32px;\n   height: 32px;\n   padding: 0;\n   z-index: 10;\n`\n\nexport const Modal = ({\n   id,\n   showModal,\n   setShowModal,\n   src,\n   destination,\n   text,\n   uploader,\n   credits,\n   title,\n   buttonLabel,\n   deletable,\n   acceptable,\n   completeable\n}) => {\n   const history = useHistory()\n   const jwt = useSelector((state) => state.user.jwt)\n   const jwt1 = Cookies.get('jwt')\n   // var buttonPressed=false\n   const modalRef = useRef()\n   const animation = useSpring({\n      config: {\n         duration: 250\n      },\n      opacity: showModal ? 1 : 0,\n      transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n   })\n   // eslint-disable-next-line no-unused-vars\n   const [AcceptJob, { loading, error, data }] = useMutation(ACCEPT_JOB, {\n      fetchPolicy: 'no-cache',\n      onCompleted: (data) => {\n         setTimeout(history.push('/dashboard/accepted-jobs'), 1000)\n      }\n   })\n\n   // eslint-disable-next-line no-unused-vars\n   const [deleteJob, { delLoading, delError, delData }] = useMutation(\n      DELETE_JOB,\n      {\n         refetchQueries: [GET_CREATED_JOBS, 'createdJobs']\n      }\n   )\n   //Get Job Results Mutation\n   const [JobResults, { resultsLoading, resultsError, resultsData }] =\n      useMutation(JOB_RESULTS, {\n         onCompleted: (resultsData) => {\n            const win = window.open(resultsData.jobResults, '_blank')\n            win.focus()\n         }\n      })\n   // const closeModal = (e) => {\n   //    if (modalRef.current === e.target) {\n   //       setShowModal(false)\n   //    }\n   // }\n   // const [AcceptedJobs, {loading, error }] = useQuery(GET_ACCEPTED_JOBS, {\n   //    fetchPolicy: 'no-cache'\n   // })\n   const getResults = () => {\n      toast.error('This feature is coming soon...')\n   }\n\n   const keyPress = useCallback(\n      (e) => {\n         if (e.key === 'Escape' && showModal) {\n            setShowModal(false)\n         }\n      },\n      [setShowModal, showModal]\n   )\n\n   useEffect(() => {\n      document.addEventListener('keydown', keyPress)\n      return () => document.removeEventListener('keydown', keyPress)\n   }, [keyPress])\n\n   //This checks their login on page load\n   if (!jwt1) {\n      destination = '/login'\n   }\n\n   const acceptJob = () => {\n      if (!jwt) {\n         history.push('/login')\n      } else {\n         // eslint-disable-next-line eqeqeq\n         if (destination.pathname != '/label-job') {\n            AcceptJob({\n               variables: {\n                  job_id: id\n               },\n               refetchQueries: [{ query: GET_ACCEPTED_JOBS }]\n            }).catch((error) => {\n               // toast.error('You have already accepted this job', {\n               //    position: toast.POSITION.BOTTOM_CENTER\n               // })\n            })\n\n            toast.clearWaitingQueue() //Prevents duplicates of the toast from coming up\n         } else {\n            localStorage.setItem('jobID', String(id))\n         }\n      }\n   }\n\n   const jobResults = () => {\n      JobResults({\n         variables: {\n            job_id: id\n         }\n      }).catch((error) => {})\n   }\n\n   return (\n      <div id={id}>\n         {showModal ? (\n            <Background ref={modalRef}>\n               <animated.div style={animation}>\n                  <ModalWrapper showModal={showModal}>\n                     <ModalImg alt=\"Travel\" src={src} />\n\n                     <ModalContent>\n                        <div className=\"modal__jobName\">\n                           <h1>{title}</h1>\n                        </div>\n\n                        <div className=\"modal__content\">\n                           <div className=\"modal__uploaderLine\">\n                              Job Owner: {uploader}\n                           </div>\n                           <div className=\"modal__creditLine\">\n                              Credits:‎ ‎${credits}\n                           </div>\n\n                           <div className=\"modal__descriptionLine\">\n                              Description:‎ ‎{text}\n                           </div>\n                           {deletable ? (\n                              <button\n                                 className=\"modal__ownedJobs\"\n                                 onClick={() => {\n                                    swal({\n                                       title: 'Are you sure?',\n                                       text: 'You will not be able to recover this job!',\n                                       icon: 'warning',\n                                       buttons: [true, 'Yes, delete'],\n                                       dangerMode: true\n                                    })\n                                       .then(() => {\n                                          deleteJob({\n                                             variables: {\n                                                job_id: id\n                                             }\n                                          })\n                                       })\n                                       .then(() => {\n                                          toast.warning('Job Deleted!')\n                                       })\n                                 }}\n                              >\n                                 {buttonLabel}\n                              </button>\n                           ) : acceptable ? (\n                              <Link>\n                                 <button\n                                    className=\"modal__acceptJob\"\n                                    onClick={acceptJob}\n                                 >\n                                    {loading ? 'Loading...' : buttonLabel}\n                                 </button>\n                              </Link>\n                           ) : completeable ? (\n                              <Link>\n                                 <button\n                                    className=\"modal__acceptJob\"\n                                    data-tip=\"Get your results via a Google Drive CSV file\"\n                                    onClick={jobResults} // in this scenario , the function wont run\n                                 >\n                                    {resultsLoading\n                                       ? 'Loading...'\n                                       : buttonLabel}\n                                 </button>\n                                 <ReactTooltip effect=\"solid\" />\n                              </Link>\n                           ) : (\n                              <Link to={destination}>\n                                 <button\n                                    className=\"modal__acceptJob\"\n                                    data-tip=\"Do Job\"\n                                    onClick={acceptJob} // in this scenario , the function wont run\n                                 >\n                                    {buttonLabel}\n                                 </button>\n                                 <ReactTooltip effect=\"solid\" />\n                              </Link>\n                           )}\n                        </div>\n                     </ModalContent>\n                     <CloseModalButton\n                        aria-label=\"Close modal\"\n                        onClick={() => setShowModal((prev) => !prev)}\n                     />\n                  </ModalWrapper>\n               </animated.div>\n            </Background>\n         ) : null}\n      </div>\n   )\n}\n\nexport default Modal\n","import React, { useState, useRef } from 'react'\nimport CardItem from './CardItem'\nimport '../Styles/Cards.css'\nimport { useQuery } from '@apollo/client'\nimport { GET_JOBS } from '../graphql/queries'\nimport Modal from '../Components/Modal'\nimport ReactLoading from 'react-loading'\nimport { toast } from 'react-toastify'\n\nfunction Cards() {\n   let jobs = []\n   const { loading, error, data } = useQuery(GET_JOBS, {\n      fetchPolicy: 'cache-and-network'\n   })\n   if (data) {\n      jobs = data.viewJobs.slice(data.viewJobs.length - 3, data.viewJobs.length)\n   }\n   if (error) {\n      toast.error('There was an error fetching the jobs')\n   }\n\n   const [showModal, setShowModal] = useState(false)\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n\n   return (\n      <div className=\"cards\">\n         {/* {jobs.map((job) => {\n            return (\n               <div className=\"cards__modal\">\n                  <Modal\n                     id={job.job_id}\n                     src={job.preview_images[0]}\n                     text={job.description}\n                     credits={job.credits}\n                     uploader={job.job_owner.username}\n                     title={job.title}\n                     showModal={showModal}\n                     setShowModal={setShowModal}\n                     buttonLabel={'Accept Job'}\n                     destination=\"/dashboard/accepted-jobs\"\n                     acceptable={true}\n                  />\n               </div>\n            )\n         })} */}\n         <h2>Check Out Some of our Labelling Jobs</h2>\n\n         {loading ? (\n            <ReactLoading\n               type={'spin'}\n               height={'10%'}\n               color={'#000000'}\n               width={'10%'}\n               className=\"acceptedJob__loadingSpin\"\n            />\n         ) : (\n            <div className=\"cards__items\">\n               {jobs.map((job) => {\n                  return (\n                     <div className=\"cards__cardItems\">\n                        <CardItem\n                           src={job.preview_images[0]}\n                           text={job.title}\n                           credits={job.credits}\n                           path={'/view-job'}\n                        />\n                     </div>\n                  )\n               })}\n            </div>\n         )}\n      </div>\n   )\n}\n\nexport default Cards\n","import React from 'react'\nimport { Button } from './Button'\nimport '../Styles/HeroSection.css'\nimport '../App.css'\nimport { useSelector } from 'react-redux'\n\nfunction HeroSection() {\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt !== '') {\n      isJwt = true\n   }\n\n   return (\n      <div className=\"hero-container\">\n         <video src=\"./videos/header-hero.mp4\" autoPlay loop muted />\n         <h1>\n            Crowd Sourced <br /> Data Labelling <br />\n            Market Place for ML\n         </h1>\n         {!isJwt ? <p></p> : <p>Create Or Find a Job Now</p>}\n         {isJwt ? <p></p> : <p>Sign up now to start your labelling journey</p>}\n         {isJwt ? (\n            <div></div>\n         ) : (\n            <div className=\"hero-btns\">\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn--outline\"\n                  buttonSize=\"btn--large\"\n                  to=\"/register\"\n               >\n                  Sign Up\n               </Button>\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn-hover\"\n                  buttonSize=\"btn--large\"\n                  to=\"/view-job\"\n               >\n                  Find Job\n               </Button>\n            </div>\n         )}\n         {!isJwt ? (\n            <div></div>\n         ) : (\n            <div className=\"hero-btns\" style={{ paddingLeft: '7%' }}>\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn--outline\"\n                  buttonSize=\"btn--large\"\n                  to=\"/create-job\"\n               >\n                  Create Job\n               </Button>\n               <Button\n                  className=\"btns\"\n                  buttonStyle=\"btn-hover\"\n                  buttonSize=\"btn--large\"\n                  to=\"/view-job\"\n               >\n                  Find Job\n               </Button>\n            </div>\n         )}\n      </div>\n   )\n}\n\nexport default HeroSection\n","import React, { useState, useEffect } from 'react'\nimport { Button } from './Button'\nimport { Link } from 'react-router-dom'\nimport '../Styles/Navbar.css'\nimport { useSelector } from 'react-redux'\nimport NavItem from './NavItem'\nimport DropdownMenu from './DropdownMenu'\nimport { ReactComponent as MenuIcon } from './icons/menu_icon.svg'\nimport { GET_ME } from '../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport ReactLoading from 'react-loading'\n\nfunction Navbar() {\n   // eslint-disable-next-line no-unused-vars\n   const { loading, error, data } = useQuery(GET_ME,{\n      fetchPolicy: 'cache-and-network'\n   })\n\n   const [click, setClick] = useState(false)\n   const [button, setButton] = useState(true)\n   const [navbar, setNavbar] = useState(false)\n\n   let username = useSelector((state) => state.user.username)\n   if (data) {\n      if (data.me) {\n         if (!loading) {\n            username = data.me.username\n         }\n      }\n   }\n   const handleClick = () => setClick(!click)\n   const closeMobileMenu = () => setClick(false)\n   const jwt = useSelector((state) => state.user.jwt)\n   let isJwt = false\n   if (jwt !== '') {\n      isJwt = true\n   }\n\n   const showButton = () => {\n      if (window.innerWidth <= 960) {\n         setButton(false)\n         setNavbar(true)\n      } else {\n         setButton(true)\n         setNavbar(false)\n      }\n   }\n\n   useEffect(() => {\n      showButton()\n   }, [])\n\n   window.addEventListener('resize', showButton)\n\n   const changeBackground = () => {\n      if (window.scrollY >= 80) {\n         setNavbar(true)\n      } else {\n         setNavbar(false)\n      }\n   }\n   \n\n   const changeNav = () => {}\n\n   window.addEventListener('scroll', changeBackground)\n\n   window.addEventListener('hashchange', changeNav)\n\n   return (\n      <nav className={navbar ? 'navbar active' : 'navbar'}>\n         <div className=\"navbar-container\">\n            <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\n               <img src=\"./images/logo(white).png\" alt=\"bug\" height={120} />\n            </Link>\n            <div className=\"menu-icon\" onClick={handleClick}>\n               <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n            </div>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n               <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\n                     Home\n                  </Link>\n               </li>\n               {/* {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/dashboard/profile\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Dashboard\n                     </Link>\n                  </li>\n               )} */}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/how-to\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How it Works\n                  </Link>\n               </li>\n               {!isJwt ? (\n                  <li></li>\n               ) : (\n                  <li className=\"nav-item\">\n                     <Link\n                        to=\"/create-job\"\n                        className=\"nav-links\"\n                        onClick={closeMobileMenu}\n                     >\n                        Create Job\n                     </Link>\n                  </li>\n               )}\n               <li className=\"nav-item\">\n                  <Link\n                     to=\"/view-job\"\n                     className=\"nav-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     Find A Job\n                  </Link>\n               </li>\n\n               <li>\n                  <Link\n                     to=\"/login\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Login\n                  </Link>\n               </li>\n\n               <li>\n                  <Link\n                     to=\"/register\"\n                     className=\"nav-links-mobile\"\n                     onClick={closeMobileMenu}\n                  >\n                     Sign Up\n                  </Link>\n               </li>\n            </ul>\n            {button && !isJwt ? (\n               <Button buttonStyle=\"btn--outline\" to=\"/login\">\n                  Login\n               </Button>\n            ) : (\n               <div></div>\n            )}\n\n            {button && isJwt ? (\n               <div className=\"navbar__username\">\n                  <div className=\"username__label\">\n                     {loading ? (\n                        <ReactLoading\n                           type={'spin'}\n                           // color={'black'}\n                           height={'20px'}\n                           color={'#000000'}\n                           width={'20px'}\n                           // className=\"acceptedJob__loadingSpin\"\n                        />\n                     ) : (\n                        <b>{username}</b>\n                     )}\n                  </div>\n                  <NavItem icon={<MenuIcon />}>\n                     <DropdownMenu></DropdownMenu>\n                  </NavItem>\n               </div>\n            ) : (\n               <div></div>\n            )}\n            {/* {button && isJwt ? (\n               <Button buttonStyle=\"btn--outline\" onClick={deleteJWT}>\n                  Sign Out\n               </Button>\n            ) : (\n               <div></div>\n            )} */}\n            {button && !isJwt ? (\n               <Button\n                  buttonStyle=\"btn--primary\"\n                  buttonSize=\"btn--small\"\n                  to=\"/register\"\n               >\n                  Sign Up\n               </Button>\n            ) : (\n               <div></div>\n            )}\n         </div>\n      </nav>\n   )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Cookies from 'js-cookie'\nimport { useDispatch } from 'react-redux'\nimport { updateJWT } from '../redux/user'\nimport '../App.css'\nimport Cards from '../Components/Cards'\nimport HeroSection from '../Components/HeroSection'\nimport Footer from '../Components/Footer'\nimport Navbar from '../Components/Navbar'\nimport Testimonials from '../Components/Testimonials'\n\nfunction Home() {\n\n   const dispatch = useDispatch()\n\n   const jwt = Cookies.get('jwt')\n   if (jwt != null){\n      dispatch(updateJWT(jwt))\n   }\n\n   return (\n      <div>\n         <Navbar />\n         <HeroSection />\n         <Cards />\n         <Testimonials/>\n         <Footer />\n      </div>\n   )\n}\n\nexport default Home\n","import React from 'react'\nimport { Button } from './Button'\nimport '../Styles/HowToSection.css'\nimport '../App.css'\n\nfunction HowToSection() {\n   return (\n      <div className=\"hero-container\">\n         <video src=\"./videos/gradient.mp4\" autoPlay loop muted />\n         <h1>\n            How to <br /> Submit a Job <br />\n         </h1>\n         <p>\n            Here is a step-by-step guide to submitting a job on our Platform!\n         </p>\n         <div className=\"hero-btns\">\n            <Button\n               className=\"btns\"\n               buttonStyle=\"btn-hover\"\n               buttonSize=\"btn--large\"\n               to=\"/create-job\"\n            >\n               Post a Job\n            </Button>\n         </div>\n      </div>\n   )\n}\n\nexport default HowToSection\n","import React from 'react'\nimport CardItem from './CardItem'\nimport '../Styles/PostJobCards.css'\n\nfunction PostJobCards() {\n   return (\n      <div className=\"cards\">\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login3.gif\"\n                     text=\"In order to use our platform for finding a job, it is advisable for you to log in to gain full functionality of our platform but it is not required to view available jobs. If you haven't already, you can create an account here.\"\n                     credits=\"Step 1\"\n                     path=\"/how-to\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/login5.gif\"\n                     text=\"Now that you've logged in, you can navigate to the page to post your Job . Currently we only support Data Labelling jobs that utilize pictures but plan to expand in the future.\"\n                     credits=\"Step 2\"\n                     path=\"/how-to\"\n                  />\n               </ul>\n            </div>\n         </div>\n\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login6.gif\"\n                     text=\"Fill in your details in the available fields. Make sure to keep details as precise as possible for better results.\"\n                     credits=\"Step 3\"\n                     path=\"/how-to\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/submit.gif\"\n                     text=\"You can now sit back and relax while we let one of our top tier community members do the labelling.\"\n                     credits=\"Step 4\"\n                     path=\"/how-to\"\n                  />\n               </ul>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default PostJobCards\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../Styles/tab.css'\n\nfunction HowToTabs() {\n   const [click, setClick] = useState(false)\n   // eslint-disable-next-line no-unused-vars\n   const [button, setButton] = useState(true)\n\n   const handleClick = () => setClick(!click)\n   const closeMobileMenu = () => setClick(false)\n\n   const showButton = () => {\n      if (window.innerWidth <= 960) {\n         setButton(false)\n      } else {\n         setButton(true)\n      }\n   }\n\n   useEffect(() => {\n      showButton()\n   }, [])\n\n   window.addEventListener('resize', showButton)\n\n   return (\n      <tabs className=\"tabs-other\">\n         <div className=\"tabs-container\">\n            <div className=\"menu-icon\" onClick={handleClick}>\n               <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n            </div>\n            <ul className={click ? 'tabs-menu active' : 'tabs-menu'}>\n               <li className=\"tabs-item\">\n                  <Link\n                     to=\"/how-to\"\n                     className=\"tabs-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How to Submit Jobs\n                  </Link>\n               </li>\n               <li className=\"tabs-item\">\n                  <Link\n                     to=\"/how-to-find\"\n                     className=\"tabs-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     How to Find Jobs\n                  </Link>\n               </li>\n               <li className=\"tabs-item\">\n                  <Link\n                     to=\"/faqs\"\n                     className=\"tabs-links\"\n                     onClick={closeMobileMenu}\n                  >\n                     FAQs\n                  </Link>\n               </li>\n            </ul>\n         </div>\n      </tabs>\n   )\n}\n\nexport default HowToTabs\n","import React from 'react'\nimport '../App.css'\nimport HowToSection from '../Components/HowToSection'\nimport Footer from '../Components/Footer'\nimport PostJobCards from '../Components/PostJobCards'\nimport NavbarOther from '../Components/NavbarOther'\nimport HowTotabs from '../Components/HowToTabs'\n\nfunction HowTo() {\n   return (\n      <div>\n         <NavbarOther />\n         <HowTotabs />\n         <HowToSection />\n         <PostJobCards />\n         <Footer />\n      </div>\n   )\n}\n\nexport default HowTo\n","import React, { useState } from 'react'\nimport '../Styles/ViewJob.css'\nimport CardItem from '../Components/CardItem'\nimport '../Styles/Cards.css'\nimport NavbarOther from '../Components/NavbarOther'\nimport '../App.css'\nimport Footer from '../Components/Footer'\nimport Modal from '../Components/Modal'\nimport '../Styles/ViewJob.css'\nimport { GET_JOBS } from '../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport ReactLoading from 'react-loading'\nimport { toast } from 'react-toastify'\n\nfunction ViewJob() {\n\n   let jobs = []\n   const { loading, error, data } = useQuery(GET_JOBS, {\n      fetchPolicy: 'cache-and-network'\n   })\n\n   if (data) {\n      jobs = data.viewJobs\n   }\n   if (error) {\n      toast.error('There was an error fetching the available jobs, please reload the page', {\n         toastId: \"error\"\n       })\n   }\n\n   const [showModal, setShowModal] = useState(false)\n\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n\n   return (\n      <div className=\"viewJob\">\n         <NavbarOther />\n\n         {jobs.map((job) => {\n            return (\n               <div className=\"viewJob__modal\">\n                  <Modal\n                     id={job.job_id}\n                     src={job.preview_images[0]}\n                     text={job.description}\n                     credits={job.credits}\n                     uploader={job.job_owner.username}\n                     title={job.title}\n                     showModal={showModal}\n                     setShowModal={setShowModal}\n                     buttonLabel={'Accept Job'}\n                     destination=\"/dashboard/accepted-jobs\"\n                     acceptable = {true}\n                  />\n               </div>\n            )\n         })}\n         <div className=\"viewJob__header\">\n            <video src=\"./videos/gradient.mp4\" autoPlay loop muted />\n\n            <h1>Find A Job That Interests You</h1>\n         </div>\n\n         {/* <div className=\"viewJob__filters\">\n            <h1>\n               <b>Filter Your Jobs By: </b>\n            </h1>\n            <Button onClick={handleOpenMenu} aria-controls=\"filter__menu\">\n               Filters\n            </Button>\n\n            <Menu\n               id=\"filter__menu\"\n               anchorElement={anchorElement}\n               open={Boolean(anchorElement)}\n               onClose={handleCloseMenu}\n            >\n               <MenuItem>Latest</MenuItem>\n               <MenuItem>Name ASC</MenuItem>\n               <MenuItem>Name DESC</MenuItem>\n               <MenuItem>Credits ASC</MenuItem>\n               <MenuItem>Credits DESC</MenuItem>\n               <MenuItem># Photos ASC</MenuItem>\n               <MenuItem># Photos DESC</MenuItem>\n            </Menu>\n         </div> */}\n\n         <div className=\"viewJob__container\">\n            {loading ? (\n               <ReactLoading\n                  type={'spin'}\n                  height={'10%'}\n                  color={'#000000'}\n                  width={'10%'}\n                  className=\"acceptedJob__loadingSpin\"\n               />\n            ) : (\n               <div className=\"viewJob__row\">\n                  {jobs.map((job) => {\n                     return (\n                        <div\n                           className=\"viewJob__cardItem\"\n                           onClick={(e) => openModal(job.job_id)}\n                        >\n                           <CardItem\n                              src={job.preview_images[0]}\n                              text={job.title}\n                              credits={job.credits}\n\n                           />\n                        </div>\n                     )\n                  })}\n               </div>\n            )}\n         </div>\n         <Footer />\n      </div>\n   )\n}\n\nexport default ViewJob\n","import React from 'react'\nimport { EDIT_PROFILE } from '../graphql/mutations'\nimport { useMutation } from '@apollo/client'\nimport { useDispatch } from 'react-redux'\nimport { GET_ME } from '../graphql/queries'\nimport { toast } from 'react-toastify'\nimport { useQuery } from '@apollo/client'\nimport { updateUsername } from '../redux/user'\n\nconst UserDetails = (props) => {\n   const { loading, error, data } = useQuery(GET_ME)\n   const [EditProfile] = useMutation(EDIT_PROFILE)\n   const showError = () => {\n      toast.error('An error occured', {\n         toastId: \"invalerror\"\n       })\n      toast.clearWaitingQueue()\n   }\n   const dispatch = useDispatch()\n   const editUsername = () => {\n      let userNameChange\n      \n      //check if username is empty\n      if (document.getElementById('input-username').value === '') {\n         return //we dont want to do anything if they dont enter a username\n         // userNameChange = props.username\n      } else {\n         userNameChange = document.getElementById('input-username').value\n      }\n      if(document.getElementById('input-username').value.length>=12){ // cap the username length\n         toast.error(\"Maximum username length is 12 characters\")\n         return\n      }\n\n      if (\n         document.getElementById('input-passwordNew').value !==\n         document.getElementById('input-passwordConfirm').value\n      ) {\n         toast.error(\"Passwords Don't Match\", {\n            toastId: \"invalpassword\"\n          })\n      } else {\n         EditProfile({\n            variables: {\n               username: userNameChange\n            },\n            refetchQueries: [{ query: GET_ME }]\n         })\n            .then(() => {\n               toast.success('Your Details Have Been Changed', {\n                  toastId: \"succDetails\"\n                })\n               document.getElementById('input-username').value=\"\" //reset field to be empty\n            })\n            .then(() => {\n               dispatch(updateUsername(userNameChange))\n            })\n            .catch((error) => showError())\n         toast.clearWaitingQueue()\n      }\n   }\n\n   const editPassword = () => {\n      let passwordChange\n      // check if password is empty\n      if (document.getElementById('input-passwordNew').value === '') {\n         passwordChange = props.password\n      } else {\n         passwordChange = document.getElementById('input-passwordNew').value\n      }\n\n      if (document.getElementById('input-passwordConfirm').value === '') {\n         passwordChange = props.password\n      } else {\n         passwordChange = document.getElementById('input-passwordNew').value\n      }\n\n      if (\n         document.getElementById('input-passwordNew').value !==\n         document.getElementById('input-passwordConfirm').value\n      ) {\n         toast.error(\"Passwords Don't Match\", {\n            toastId: \"invalpass\"\n          })\n      } else if (\n         document.getElementById('input-passwordNew').value === '' ||\n         document.getElementById('input-passwordConfirm').value === ''\n      ) {\n         toast.error('Passwords Are Empty', {\n            toastId: \"invalpass\"\n          })\n      } else if (passwordChange.length < 5) {\n         toast.error('Password must be at least 5 characters', {\n            toastId: \"invalpasslen\"\n          })\n      } else {\n         EditProfile({\n            variables: {\n               password: passwordChange\n            },\n            refetchQueries: [{ query: GET_ME }]\n         })\n            .then(() => {\n               toast.success('Your Details Have Been Changed', {\n                  toastId: \"invaldetailsChange\"\n                })\n               document.getElementById('input-passwordNew').value=\"\"\n               document.getElementById('input-passwordConfirm').value=\"\"\n            })\n            .catch((error) => showError())\n         toast.clearWaitingQueue()\n      }\n   }\n\n   return (\n      <div className=\"col-xl-8 order-xl-1\">\n         <div className=\"card bg-secondary shadow\">\n            <div className=\"card-header bg-white border-0\">\n               <div className=\"row align-items-center\">\n                  <div className=\"col-8\">\n                     <h3 className=\"mb-0\">My Account</h3>\n                  </div>\n                  <div className=\"col-6 text-right\">\n                     <a\n                        onClick={editUsername}\n                        href=\"#/dashboard/profile\"\n                        className=\"user-btn user-btn-sm user-btn-primary\"\n                     >\n                        Update Username\n                     </a>\n                     &nbsp;\n                     <a\n                        onClick={editPassword}\n                        href=\"#/dashboard/profile\"\n                        className=\"user-btn user-btn-sm user-btn-primary\"\n                     >\n                        Update Password\n                     </a>\n                  </div>\n               </div>\n            </div>\n            <div className=\"card-body\">\n               <form className=\"user--form\">\n                  <h6 className=\"heading-small text-muted mb-4\">\n                     User information\n                  </h6>\n                  <div className=\"pl-lg-6\">\n                     <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                           <div className=\"form-group focused\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-username\"\n                              >\n                                 Username\n                              </label>\n                              <input\n                                 type=\"text\"\n                                 id=\"input-username\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder={loading? 'Loading...':data.me.username }\n                              />\n                           </div>\n                        </div>\n                        {/* <div className=\"col-lg-6\">\n                           <div className=\"form-group\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-email\"\n                              >\n                                 Email address\n                              </label>\n                              <input\n                                 type=\"email\"\n                                 id=\"input-email\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder={props.email}\n                                 text={props.email}\n                              />\n                           </div>\n                        </div> */}\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                           <div className=\"form-group focused\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-last-name\"\n                                 placeholder=\"Password\"\n                              >\n                                 New Password\n                              </label>\n                              <input\n                                 type=\"text\"\n                                 id=\"input-passwordNew\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder=\"New Password\"\n                                 defaultValue=\"\"\n                              />\n                           </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                           <div className=\"form-group focused\">\n                              <label\n                                 className=\"form-control-label\"\n                                 htmlFor=\"input-passwordConfirm\"\n                                 placeholder=\"Confirm Password\"\n                              >\n                                 Confirm Password\n                              </label>\n                              <input\n                                 type=\"text\"\n                                 id=\"input-passwordConfirm\"\n                                 className=\"form-control form-control-alternative\"\n                                 placeholder=\"Confirm New Password\"\n                                 defaultValue=\"\"\n                              />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </form>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default UserDetails\n","import React from 'react'\n\nconst UserProfile = (props) => {\n   return (\n      <div className=\"col-xl-4 order-xl-2 mb-5 mb-xl-0\">\n         <div className=\"card card-profile shadow\">\n            <div className=\"row justify-content-center\">\n               <div className=\"col-lg-3 order-lg-2\">\n                  <div className=\"card-profile-image\">\n                     <img\n                        src={`https://avatars.dicebear.com/api/bottts/${props.email}.svg`}\n                        className=\"rounded-circle\"\n                        alt=\"\"\n                     />\n                  </div>\n               </div>\n            </div>\n            <div className=\"card-body pt-0 pt-md-4\">\n               <div className=\"text-center\">\n                  <h3>\n                     Username:\n                     <span className=\"font-weight-light\">\n                        {' '}\n                        {props.firstName}\n                     </span>\n                  </h3>\n                  <h3>\n                     Credits:\n                     <span className=\"font-weight-light\">\n                        {' '}\n                        ${props.balance}\n                     </span>\n                  </h3>\n               </div>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default UserProfile\n","import React from 'react'\nimport '../../Styles/UserProfile.css'\nimport UserDetails from '../../Components/UserDetails'\nimport UserProfile from '../../Components/UserProfileCard'\nimport { useQuery } from '@apollo/client'\nimport { GET_ME_AND_DELETED_JOBS } from '../../graphql/queries'\nimport ReactLoading from 'react-loading'\nimport NavbarOther from '../../Components/NavbarOther'\nimport { useSelector } from 'react-redux'\nimport swal from 'sweetalert'\nimport Cookies from 'js-cookie'\nimport {Redirect}  from 'react-router-dom'\nexport const Dashboard = (props) => {\n   const { loading, error, data } = useQuery(GET_ME_AND_DELETED_JOBS)\n   const username = useSelector((state) => state.user.username)\n   const email = useSelector((state) => state.user.email)\n\n   const cook=Cookies.get('jwt')\n   if (cook == null) {\n      console.log(\"boy\")\n      return <Redirect to=\"/\" />\n   }\n\n   if (data) {\n      if (data.deletedJobs) {\n         if (data.deletedJobs.length !== 0) {\n            let jobarray = data.deletedJobs.map(function (job) {\n               return JSON.stringify(job.title)\n            })\n            let jobstring = jobarray.join(',')\n            swal({\n               title: 'These Jobs deleted while you were away...',\n               text: jobstring,\n               icon: 'warning',\n               buttons: [true, 'OK'],\n               dangerMode: true\n            })\n         }\n      }\n   }\n\n   if (error) {\n      //do nothing\n   }\n   return (\n      <div className=\"profile\">\n         {/* <DashboardSidebar /> */}\n         <NavbarOther />\n         <div className=\"profile__body\">\n            {/* <link\n               href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\"\n               rel=\"stylesheet\"\n            /> */}\n\n            {/* Page content */}\n\n            {loading ? (\n               <ReactLoading\n                  type={'spin'}\n                  // color={'black'}\n                  height={'10%'}\n                  color={'#000000'}\n                  width={'10%'}\n                  className=\"acceptedJob__loadingSpin\"\n               />\n            ) : (\n               <span>\n                  <UserProfile\n                     firstName={data.me.username}\n                     balance={data.me.balance}\n                     email={data.me.email}\n                  />\n\n                  {data && <UserDetails username={username} email={email} />}\n               </span>\n            )}\n\n            {/* <Footer /> */}\n         </div>\n      </div>\n   )\n}\n\nexport default Dashboard\n","import React, { useState } from 'react'\nimport { GET_CREATED_JOBS } from '../../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport Modal from '../../Components/Modal'\nimport Footer from '../../Components/Footer'\n\nimport CardItem from '../../Components/CardItem'\nimport '../../Styles/CreatedJobs.css'\nimport NavbarOther from '../../Components/NavbarOther'\nimport ReactLoading from 'react-loading'\n\nfunction CreatedJobs() {\n   const { loading, error, data } = useQuery(GET_CREATED_JOBS, {\n      fetchPolicy: \"no-cache\"\n   })\n   const [showModal, setShowModal] = useState(false)\n\n   let jobs = []\n   if (data) {\n      jobs = data.ownedJobs\n   }\n   if (error) {\n   }\n\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n   return (\n      <div>\n         <NavbarOther />\n         <div className=\"createdJobs__Modal\">\n            {jobs.map((job) => {\n               return (\n                  <div className=\"createdJobs__modal\">\n                     <Modal\n                        id={job.job_id}\n                        src={job.preview_images[0]}\n                        // src=\"../images/purple_gradient.jpg\"\n                        text={job.description}\n                        credits={job.credits}\n                        title={job.title}\n                        showModal={showModal}\n                        buttonLabel=\"Delete Job\"\n                        setShowModal={setShowModal}\n                        deletable={true}\n                     />\n                  </div>\n               )\n            })}\n         </div>\n\n         {/* <DashboardSidebar /> */}\n         <div className=\"createdJobs__header\">\n            <video src=\"../videos/header-hero.mp4\" autoPlay loop muted />\n            <h1>View your Created Jobs</h1>\n         </div>\n         <div className=\"createdJobs__Loading\">\n            <h1>\n               <b>\n                     These Are The Jobs You Currently Own\n               </b>\n            </h1>\n         </div>\n         <div>\n            {loading ? (\n               <ReactLoading\n               type={'spin'}\n               height={'10%'}\n               color={'#ffffff'}\n               width={'10%'}\n               className=\"acceptedJob__loadingSpin\"\n            />\n            ) : (\n               <div className=\"createdJobs__row\">\n                  {jobs.map((job) => {\n                     return (\n                        <div\n                           className=\"createdJobs__cardItem\"\n                           onClick={(e) => openModal(job.job_id)}\n                        >\n                           <CardItem\n                              // id={job.job_id.concat('card')}\n                              src={job.preview_images[0]}\n                              // src=\"../images/purple_gradient.jpg\"\n                              text={job.title}\n                              credits={job.credits}\n                           />\n                        </div>\n                     )\n                  })}\n               </div>\n            )}\n         </div>\n         <Footer/>\n      </div>\n   )\n}\n\nexport default CreatedJobs\n","import React, { useState } from 'react'\nimport { GET_ACCEPTED_JOBS } from '../../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport Modal from '../../Components/Modal'\nimport CardItem from '../../Components/CardItem'\nimport Footer from '../../Components/Footer'\n\nimport '../../Styles/AcceptedJobs.css'\nimport ReactLoading from 'react-loading'\nimport NavbarOther from '../../Components/NavbarOther'\n\nfunction AcceptedJobs() {\n   // const { loading, error, data } = useQuery(GET_ME)\n   const { loading, error, data } = useQuery(GET_ACCEPTED_JOBS,{\n      fetchPolicy: 'cache-and-network'\n   })\n\n   const [showModal, setShowModal] = useState(false)\n\n   let jobs = []\n   if (!loading) {\n      jobs = data.acceptedJobs\n   }\n   if (error) {\n   }\n\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n   return (\n      <div>\n         <NavbarOther />\n         <div className=\"acceptJobs__Modal\">\n            {jobs.map((job) => {\n               return (\n                  <div className=\"acceptJobs__modal\">\n                     <Modal\n                        id={job.job_id}\n                        src={job.preview_images[0]}\n                        // src=\"../images/purple_gradient.jpg\"\n                        text={job.description}\n                        credits={job.credits}\n                        uploader={job.job_owner.username}\n                        title={job.title}\n                        showModal={showModal}\n                        buttonLabel=\"Label Job\"\n                        setShowModal={setShowModal}\n                        destination={{\n                           pathname: '/label-job',\n                           currentID: job.job_id\n                        }}\n                     />\n                  </div>\n               )\n            })}\n         </div>\n\n         {/* <DashboardSidebar /> */}\n         <div className=\"acceptedJobs__header\">\n            <video src=\"../videos/header-hero.mp4\" autoPlay loop muted />\n            <h1>View your Accepted Jobs</h1>\n         </div>\n         <div className=\"acceptedJobs__Loading\">\n            <h1>Pick A Job To Start Labeling</h1>\n         </div>\n         <div className=\"acceptJob__Section\">\n            {loading ? (\n               <ReactLoading\n                  type={'spin'}\n                  height={'10%'}\n                  color={'#ffffff'}\n                  width={'10%'}\n                  className=\"acceptedJob__loadingSpin\"\n               />\n            ) : (\n               <div className=\"acceptJob__row\">\n                  {jobs.map((job) => {\n                     return (\n                        <div\n                           className=\"acceptJob__cardItem\"\n                           onClick={(e) => openModal(job.job_id)}\n                        >\n                           <CardItem\n                              // id={job.job_id.concat('card')}\n                              src={job.preview_images[0]}\n                              // src=\"../images/purple_gradient.jpg\"\n                              text={job.title}\n                              credits={job.credits}\n                           />\n                        </div>\n                     )\n                  })}\n               </div>\n            )}\n         </div>\n         <Footer/>\n      </div>\n   )\n}\n\nexport default AcceptedJobs\n","import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\nimport '../Styles/Slider.css'\n\nconst ImageSlider = ({ slides, indexCallback }) => {\n   const [current, setCurrent] = useState(0)\n   const length = slides.length\n\n   useEffect(() => {\n      indexCallback(current)\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [current])\n\n   const nextSlide = () => {\n      let num = current === length - 1 ? 0 : current + 1\n      setCurrent(num)\n   }\n\n   const prevSlide = () => {\n      setCurrent(current === 0 ? length - 1 : current - 1)\n      indexCallback(current)\n   }\n\n   if (!Array.isArray(slides) || slides.length <= 0) {\n      return null\n   }\n\n   return (\n      <section className=\"label-slider\">\n         <FaArrowAltCircleLeft className=\"left-arrow\" onClick={prevSlide} />\n         <FaArrowAltCircleRight className=\"right-arrow\" onClick={nextSlide} />\n         {slides.map((slide, index) => {\n            return (\n               <div\n                  className={\n                     index === current ? 'label-slide active' : 'label-slide'\n                  }\n                  key={index}\n               >\n                  {index === current && (\n                     <img\n                        src={slide.images}\n                        key={slide.image_ids}\n                        id={slide.image_ids}\n                        alt=\"alt tag\"\n                        className=\"image\"\n                     />\n                  )}\n               </div>\n            )\n         })}\n      </section>\n   )\n}\n\nexport default ImageSlider\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react'\nimport Footer from '../Components/Footer'\nimport ImageSlider from '../Components/ImageSlider'\nimport ReactTooltip from 'react-tooltip'\nimport NavbarOther from '../Components/NavbarOther'\nimport '../Styles/LabelJob.css'\nimport {\n   GET_LABEL_JOB_INFO,\n   GET_ACCEPTED_JOBS,\n   GET_SAVED_STATE\n} from '../graphql/queries.js'\nimport { SAVE_STATE } from '../graphql/mutations'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Button } from '../Components/Button'\nimport { useEffect } from 'react'\n// import { GET_CREATED_JOBS } from '../graphql/queries'\nimport { current } from '@reduxjs/toolkit'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { Link, Redirect } from 'react-router-dom'\n\nfunction LabelJob(props) {\n   const [index, setIndex] = useState()\n   const [isComplete, setIsComplete] = useState(false)\n   const [assignedLabels, setAssignedLabels] = useState({})\n   const [slides, setSlides] = useState([])\n   const storedID = String(localStorage.getItem('jobID'))\n   console.log(storedID)\n   // const [currentID, setCurrentID] = useState(\n   //    props.location ? props.location : Number.isInteger(storedID)\n   // )\n   const currentID = storedID\n\n   console.log(currentID)\n\n   const checkRadioButton = () => {\n      if (slides[index]) {\n         if (slides[index].image_id in assignedLabels) {\n            document.getElementById(\n               assignedLabels[slides[index].image_id]\n            ).checked = true\n         }\n      }\n   }\n\n   const checkCompletion = () => {\n      // console.log(assignedLabels)\n      // console.log(slides.length)\n      if (\n         Object.keys(assignedLabels).length >= slides.length &&\n         Object.keys(assignedLabels).length !== 0\n      ) {\n         document.getElementById('submitButton').style.display = 'inline-block'\n         setIsComplete(true)\n      } else {\n         // document.getElementById('submitButton').style.display = 'none'\n      }\n   }\n\n   useEffect(() => {\n      checkRadioButton()\n      checkCompletion()\n   }, [index, assignedLabels])\n\n   const { loading, error, data } = useQuery(GET_LABEL_JOB_INFO, {\n      variables: {\n         job_id: currentID\n      }\n   })\n\n   const partition_id = data?.labelJobInfo?.partition_id\n   const { data: restoredData } = useQuery(GET_SAVED_STATE, {\n      skip: !partition_id,\n      variables: {\n         partition_id\n      }\n   })\n\n   const [\n      submitJob,\n      { data: submitJobData, loading: submitJobLoading, error: submitJobError }\n   ] = useMutation(SAVE_STATE)\n\n   useEffect(() => {\n      if (restoredData) {\n         let temp = {}\n         Object.assign(temp, assignedLabels)\n\n         for (let i = 0; i < restoredData.labelJobState.labels.length; i++) {\n            const imageId = restoredData.labelJobState.image_ids[i]\n            temp[imageId] = restoredData.labelJobState.labels[i]\n         }\n         setAssignedLabels(temp)\n\n         let tempSlides = []\n         for (let i = 0; i < images.length; i++) {\n            tempSlides.push({ images: images[i], image_id: image_ids[i] })\n         }\n         setSlides(tempSlides)\n         checkRadioButton()\n         checkCompletion()\n      }\n   }, [restoredData, data])\n\n   checkRadioButton()\n\n   if (loading) return 'Loading...'\n   if (error) return `Error! ${error.message}`\n\n   let images = []\n   let labels = []\n   let image_ids = []\n   let title = ''\n\n   if (data) {\n      images = data.labelJobInfo.images\n      labels = data.labelJobInfo.labels\n      image_ids = data.labelJobInfo.image_ids\n      title = data.labelJobInfo.title\n   }\n\n   const onChangeSlide = (index) => {\n      setIndex(index)\n      // console.log(labels)\n      for (let i = 0; i < labels.length; i++) {\n         document.getElementById(labels[i]).checked = false\n      }\n   }\n\n   const assignLabel = (value) => {\n      let temp = {}\n      Object.assign(temp, assignedLabels)\n      const imageId = slides[index].image_id\n      temp[imageId] = value\n      setAssignedLabels(temp)\n   }\n\n   const saveState = (buttonID) => {\n      submitJob({\n         variables: {\n            image_ids: Object.keys(assignedLabels).map((id) => Number(id)),\n            labels: Object.values(assignedLabels),\n            partition_id: partition_id,\n            is_complete: isComplete\n         },\n         refetchQueries: [{ query: GET_ACCEPTED_JOBS }]\n      })\n\n      if (buttonID === 'submitButton') {\n         document.getElementById('label-save').style.display = 'none'\n         document.getElementById('image-section').style.display = 'none'\n         document.getElementById('job-submitted').style.display = 'block'\n         document.getElementById('label-job-form').style.height = '90vh'\n         document.getElementById('accepted-jobs-btn').style.display = 'block'\n         document.getElementById('job-completed').style.display = 'block'\n      } else {\n         toast.success('Your labelling progress has been saved.', {\n            toastId: 'save'\n         })\n      }\n   }\n\n   return (\n      <div>\n         <NavbarOther />\n\n         <div className=\"label-job-page\">\n            <div className=\"label-job-form\" id=\"label-job-form\">\n               <div className=\"job-completed\" id=\"job-completed\">\n                  <h2 id=\"job-submitted\" className=\"job-submitted\">\n                     You have successfully completed this job!\n                  </h2>\n                  <Link\n                     id=\"accepted-jobs-btn\"\n                     to=\"/dashboard/accepted-jobs\"\n                     className=\"accepted-jobs-link\"\n                  >\n                     Return to Accepted Jobs\n                  </Link>\n               </div>\n               <div className=\"image-section\" id=\"image-section\">\n                  <h2>{title}</h2>\n                  <div className=\"image-slider-container\">\n                     <ImageSlider\n                        slides={slides}\n                        indexCallback={onChangeSlide}\n                     />\n                  </div>\n               </div>\n               <div className=\"label-save\" id=\"label-save\">\n                  <div className=\"label-section\">\n                     <h2>Labels</h2>\n                     <div className=\"labels-container\">\n                        <div className=\"radio-toolbar\">\n                           {labels.map((label) => (\n                              <>\n                                 <input\n                                    id={label}\n                                    type=\"radio\"\n                                    value={label}\n                                    // key={nanoid()}\n                                    name=\"label\"\n                                    onClick={(e) => assignLabel(e.target.value)}\n                                 />{' '}\n                                 <label>{label}</label>\n                              </>\n                           ))}\n                        </div>\n                     </div>\n                  </div>\n                  <ReactTooltip effect=\"solid\" />\n                  <div className=\"submitSection\">\n                     {/* <button id=\"hiddenBTN\" data-tip=\"fake\"> */}\n                     <Button\n                        tooltipSentence=\"This will save your labels so you can come back later\"\n                        id=\"saveButton\"\n                        className=\"btns\"\n                        buttonStyle=\"btn--outline\"\n                        buttonSize=\"btn--large\"\n                        onClick={(e) => saveState(e.target.id)}\n                     >\n                        Save\n                     </Button>\n                     {/* </button> */}\n                     <Button\n                        tooltipSentence=\"This will submit the job with the current labels, this action is final\"\n                        id=\"submitButton\"\n                        className=\"btns\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--large\"\n                        onClick={(e) => {\n                           if (\n                              window.confirm(\n                                 'Are you sure you wish to submit this job?'\n                              )\n                           )\n                              saveState(e.target.id)\n                        }}\n                        //onClick={(e) => saveState(e.target.id)}\n                     >\n                        Submit\n                     </Button>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </div>\n   )\n}\n\nexport default LabelJob\n","import React from 'react'\nimport { Button } from './Button'\nimport '../Styles/HowToSection.css'\nimport '../App.css'\n\nfunction HowToFindSection() {\n   return (\n      <div className=\"hero-container\">\n         <video src=\"./videos/header-hero.mp4\" autoPlay loop muted />\n         <h1>\n            How to <br /> Find and Label a Job! <br />\n         </h1>\n         <p>\n            Here is a step-by-step guide on how to find a job and complete it on\n            our Platform!\n         </p>\n         <div className=\"hero-btns\">\n            <Button\n               className=\"btns\"\n               buttonStyle=\"btn-hover\"\n               buttonSize=\"btn--large\"\n               to=\"/view-job\"\n            >\n               Find a Job\n            </Button>\n         </div>\n      </div>\n   )\n}\n\nexport default HowToFindSection\n","import React from 'react'\nimport CardItem from './CardItem'\nimport '../Styles/PostJobCards.css'\n\nfunction PostJobCards() {\n   return (\n      <div className=\"cards\">\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login2.gif\"\n                     text=\"In order to use our platform for finding a job, it is advisable for you to log in to gain full functionality of our platform but it is not required to view available jobs. If you haven't already, you can create an account here.\"\n                     credits=\"Step 1\"\n                     path=\"/how-to=find\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/login5.gif\"\n                     text=\"Navigating to the page will allow you to see all available data labelling jobs. You can also sort the jobs based on different filters. Select a data labelling job which you would like to work on. You can either accept the job or change your mind and hit cancel and unselect the job.\"\n                     credits=\"Step 2\"\n                     path=\"/how-to=find\"\n                  />\n               </ul>\n            </div>\n         </div>\n\n         <div className=\"cards__container\">\n            <div className=\"cards__wrapper\">\n               <ul className=\"cards__items\">\n                  <CardItem\n                     src=\"./images/HowTo/login.gif\"\n                     text=\"You can select accept job to work on the job you have picked out. If you have not already signed in, you will be prompted to. Once you are signed in you will be taken to your dashboard where you can view the selected job under 'Accepted Jobs' and work on it.\"\n                     credits=\"Step 3\"\n                     path=\"/how-to=find\"\n                  />\n                  <CardItem\n                     src=\"./images/HowTo/find.gif\"\n                     text=\"Select the accepted job in your dashbaord to start the data labelling process. On the labelling page, select a label for each image. Once the labelling is complete, you will receive a success message to inform you that the labelling job is completed.\"\n                     credits=\"Step 4\"\n                     path=\"/how-to=find\"\n                  />\n               </ul>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default PostJobCards\n","import React from 'react'\nimport '../App.css'\nimport HowToFindSection from '../Components/HowToFindSection'\nimport Footer from '../Components/Footer'\nimport FindJobCards from '../Components/FindJobCards'\nimport NavbarOther from '../Components/NavbarOther'\nimport HowTotabs from '../Components/HowToTabs'\n\nfunction HowToFind() {\n   return (\n      <div>\n         <NavbarOther />\n         <HowTotabs />\n         <HowToFindSection />\n         <FindJobCards />\n         <Footer />\n      </div>\n   )\n}\n\nexport default HowToFind\n","import React from 'react'\nimport { Button } from './Button'\nimport '../Styles/faqSectionStyling.css'\nimport '../Styles/faq.css'\nimport '../App.css'\n\nfunction FaqSection() {\n   return (\n      <div className=\"faq2-container\">\n         <div className=\"viewJob__header\">\n            <video src=\"./videos/gradient.mp4\" autoPlay loop muted />\n\n            <h1>FAQ</h1>\n            <h2>Here are some answers to some commonly asked questions</h2>\n         </div>\n\n         <div className=\"faqSection\">\n            <details open>\n               <summary>How do I sign up?</summary>\n               <div className=\"answer\">\n                  Click on the 'Sign Up' button in the top right corner and fill\n                  in the required information to sign up on our platform.\n               </div>\n            </details>\n            <details>\n               <summary>How can I login?</summary>\n               <div className=\"answer\">\n                  After you have signed up, click on the 'Login' button in the\n                  top right corner and enter your account's details to login and\n                  start using the platform.\n               </div>\n            </details>\n            <details>\n               <summary>How can I edit my username?</summary>\n               <div className=\"answer\">\n                  If you would like to change you username, you can do so on\n                  your profile page. Simply enter your desired new username and\n                  click 'Update username'.\n               </div>\n            </details>\n            <details>\n               <summary>How do I change my password?</summary>\n               <div className=\"answer\">\n                  If your logged in, you can change your password by navigating\n                  to your profile, entering a new password and clicking 'Update\n                  Password'.\n               </div>\n            </details>\n            <details>\n               <summary>Where do I go to find jobs?</summary>\n               <div className=\"answer\">\n                  Head over to the 'How to Find Jobs' section under the 'How it\n                  Works' page. Here you will find all the necessary steps to\n                  find a job on our platform.\n               </div>\n            </details>\n            <details>\n               <summary>How do I post a job?</summary>\n               <div className=\"answer\">\n                  Head over to the 'How to Submit Jobs' section under the 'How\n                  it Works' page. Here you will find all the necessary steps to\n                  post a job on our platform.\n               </div>\n            </details>\n            <details>\n               <summary>\n                  How should I select the number of partitions for my job?\n               </summary>\n               <div className=\"answer\">\n                  Increasing the number of partitions will reduce the amount of\n                  work required by each labeller to complete the job. Adding\n                  more partitions can allow a larger variety of people to label\n                  the job.\n               </div>\n            </details>\n            <details>\n               <summary>\n                  How are the number of labellers required to label each image\n                  in a partition calculated?\n               </summary>\n               <div className=\"answer\">\n                  The number of labellers is equal to the smallest odd integer\n                  greater than the number of labels.\n               </div>\n            </details>\n            <details>\n               <summary>\n                  How is the final label for each image in the dataset\n                  calculated?\n               </summary>\n               <div className=\"answer\">\n                  The final label assigned to an image is the mode of all the\n                  labels provided by labellers.\n               </div>\n            </details>\n            <details>\n               <summary>How does the job labelling process work?</summary>\n               <div className=\"answer\">\n                  <div className=\"faq__steps\">\n                     <b>Step 1:</b> Create a job and upload your images and\n                     labels. Select the number of partitions you would like to\n                     split the job into.\n                  </div>\n                  <div className=\"faq__image\">\n                     <img src=\"./images/Infographics/step1.jpg\" alt=\"\" />\n                  </div>\n               </div>\n               <div className=\"answer\">\n                  <div className=\"faq__steps\">\n                     <b>Step 2:</b> The job's images will be split into the\n                     desired number of partitions.\n                  </div>\n                  <div className=\"faq__image\">\n                     <img src=\"./images/Infographics/step2.png\" alt=\"\" />\n                  </div>\n               </div>\n               <div className=\"answer\">\n                  <div className=\"faq__steps\">\n                     <b>Step 3:</b> The number of labellers required to label\n                     each image in a partition is calculated.\n                  </div>\n                  <div className=\"faq__image\">\n                     <img src=\"./images/Infographics/step3.jpg\" alt=\"\" />\n                  </div>\n               </div>\n               <div className=\"answer\">\n                  <div className=\"faq__steps\">\n                     <b>Step 4:</b> The final label for each image in the\n                     dataset is calculated.\n                  </div>\n                  <div className=\"faq__image\">\n                     <img src=\"./images/Infographics/step4.jpg\" alt=\"\" />\n                  </div>\n               </div>\n               <div className=\"answer\">\n                  <div className=\"faq__steps\">\n                     <b>Step 5:</b> After the labelling process has been\n                     completed, you are able to find the results on the 'Job\n                     Results' page.\n                  </div>\n                  <div className=\"faq__image\">\n                     <img src=\"./images/Infographics/step5.png\" alt=\"\" />\n                  </div>\n               </div>\n               <div className=\"answer\">\n                  <div className=\"faq__steps\">\n                     <b>Step 6:</b> The results of the labelling process are\n                     available for download on the 'Job Results' page.\n                  </div>\n                  <div className=\"faq__image\">\n                     <img src=\"./images/Infographics/step6.jpg\" alt=\"\" />\n                  </div>\n               </div>\n            </details>\n         </div>\n      </div>\n   )\n}\n\nexport default FaqSection\n","import React from 'react'\nimport '../App.css'\nimport FaqSection from '../Components/FaqSection'\nimport Footer from '../Components/Footer'\nimport NavbarOther from '../Components/NavbarOther'\nimport HowTotabs from '../Components/HowToTabs'\n\nfunction Faqs() {\n   return (\n      <div>\n         <NavbarOther />\n         <HowTotabs />\n         <FaqSection />\n         <Footer />\n      </div>\n   )\n}\n\nexport default Faqs\n","import React, { useState } from 'react'\nimport { GET_COMPLETED_JOBS } from '../../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport Modal from '../../Components/Modal'\nimport CardItem from '../../Components/CardItem'\nimport Footer from '../../Components/Footer'\n\nimport '../../Styles/CompletedJobs.css'\nimport ReactLoading from 'react-loading'\nimport NavbarOther from '../../Components/NavbarOther'\n\nfunction CompletedJobs() {\n   // const { loading, error, data } = useQuery(GET_ME)\n   const { loading, error, data } = useQuery(GET_COMPLETED_JOBS)\n   const [showModal, setShowModal] = useState(false)\n\n   let jobs = []\n   if (data) {\n      jobs = data.completedJobs\n   }\n   if (error) {\n   }\n\n   const openModal = (currentId) => {\n      setShowModal((prev) => !prev)\n      for (let i = 0; i < jobs.length; i++) {\n         if (jobs[i].job_id !== currentId) {\n            document.getElementById(jobs[i].job_id).style.display = 'none'\n         } else {\n            document.getElementById(jobs[i].job_id).style.display = 'block'\n         }\n      }\n   }\n   return (\n      <div>\n         <NavbarOther />\n         <div className=\"completeJobs__Modal\">\n            {jobs.map((job) => {\n               return (\n                  <div className=\"completeJobs__modal\">\n                     <Modal\n                        id={job.job_id}\n                        src={job.preview_images[0]}\n                        // src=\"../images/completed_job.png\"\n                        text={job.description}\n                        credits={job.credits}\n                        uploader={job.job_owner.username}\n                        title={job.title}\n                        showModal={showModal}\n                        buttonLabel=\"Get Results\"\n                        setShowModal={setShowModal}\n                        // destination={{\n                        //    pathname: '/',\n                        //    currentID: job.job_id\n                        // }}\n                        completeable={true}\n                     />\n                  </div>\n               )\n            })}\n         </div>\n\n         {/* <DashboardSidebar /> */}\n         <div className=\"completedJobs__header\">\n            <video src=\"../videos/header-hero.mp4\" autoPlay loop muted />\n            <h1>View your Completed Jobs</h1>\n         </div>\n         <div className=\"completedJobs__Loading1\">\n            <h1>Pick A Job To See Your Results</h1>\n         </div>\n         <div className=\"completedJobs__Loading2\">\n            <p>\n               Not Sure How To Proceed From Here?{' '}\n               <a id=\"hover\" className=\"underlineHover\" href=\"#/faqs\">\n                  Click here to go to FAQs\n               </a>\n            </p>\n         </div>\n         <div className=\"completeJob__Section\">\n            {loading ? (\n               <ReactLoading\n                  type={'spin'}\n                  height={'10%'}\n                  color={'#ffffff'}\n                  width={'10%'}\n                  className=\"completedJob__loadingSpin\"\n               />\n            ) : (\n               <div className=\"completeJob__row\">\n                  {jobs.map((job) => {\n                     return (\n                        <div\n                           className=\"completeJob__cardItem\"\n                           onClick={(e) => openModal(job.job_id)}\n                        >\n                           <CardItem\n                              // id={job.job_id.concat('card')}\n                              src={job.preview_images[0]}\n                              // src=\"../images/completed_job.png\"\n                              text={job.title}\n                              credits=\"Done\"\n                           />\n                        </div>\n                     )\n                  })}\n               </div>\n            )}\n         </div>\n         <Footer />\n      </div>\n   )\n}\n\nexport default CompletedJobs\n","import './App.css'\nimport CreateJob from './Pages/CreateJob'\nimport DashboardSidebar from './Components/DashboardSidebar'\nimport Login from './Pages/Login'\nimport Testimonials from './Components/Testimonials'\nimport Register from './Pages/Register'\nimport Home from './Pages/Home'\nimport HowTo from './Pages/HowTo'\nimport ViewJob from './Pages/ViewJob'\nimport Profile from './Pages/Dashboard/Profile'\nimport CreatedJobs from './Pages/Dashboard/CreatedJobs'\nimport AcceptedJobs from './Pages/Dashboard/AcceptedJobs'\nimport LabelJob from './Pages/LabelJob'\nimport React from 'react'\nimport Cookies from 'js-cookie'\nimport { useDispatch } from 'react-redux'\nimport { updateJWT } from './redux/user'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport HowToFind from './Pages/HowToFind'\nimport Faqs from './Pages/Faqs'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport CompletedJobs from './Pages/Dashboard/CompletedJobs'\n\nconst App = () => {\n   const dispatch = useDispatch()\n\n   if (Cookies.get('jwt') != null) {\n      dispatch(updateJWT(Cookies.get('jwt')))\n   }\n\n   return (\n      <Router>\n         <ToastContainer limit={3} position=\"top-left\" />\n         <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n               path=\"/dashboard\"\n               exact\n               component={() => <DashboardSidebar authorized={false} />}\n            />\n            <Route path=\"/create-job\" exact component={CreateJob} />\n            <Route path=\"/Testimonials\" exact component={Testimonials} />\n            <Route path=\"/view-job\" exact component={ViewJob} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/register\" exact component={Register} />\n            <Route path=\"/how-to\" exact component={HowTo} />\n            <Route path=\"/how-to-find\" exact component={HowToFind} />\n            <Route path=\"/faqs\" exact component={Faqs} />\n            <Route\n               path=\"/dashboard/created-jobs\"\n               exact\n               component={CreatedJobs}\n            />\n            <Route path=\"/dashboard/profile\" exact component={Profile} />\n            <Route\n               path=\"/dashboard/accepted-jobs\"\n               exact\n               component={AcceptedJobs}\n            />\n            <Route\n               path=\"/dashboard/completed-jobs\"\n               exact\n               component={CompletedJobs}\n            />\n            <Route path=\"/label-job\" exact component={LabelJob} />\n         </Switch>\n      </Router>\n   )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './user'\n\nconst store = configureStore({\n    reducer: {\n        user: userReducer\n    }\n})\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport {\n   ApolloClient,\n   InMemoryCache,\n   ApolloProvider,\n   HttpLink,\n   ApolloLink,\n   concat\n} from '@apollo/client'\nimport Cookies from 'js-cookie'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { onError } from 'apollo-link-error'\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n   if (graphQLErrors) { // these console logs are necesarry dont be a baby faisal\n      console.log('graphQLErrors', graphQLErrors)\n   }\n   if (networkError) {\n      console.log('networkError', networkError)\n   }\n})\n\nconst httpLink = new HttpLink({\n   uri: 'https://data-labelling-server.herokuapp.com/graphql'\n   // uri: 'http://localhost:4000/graphql'\n})\n\nconst link = ApolloLink.from([errorLink, httpLink])\n// const httpLink = new HttpLink({\n//    uri: 'https://data-labelling-server.herokuapp.com/graphql'\n// })\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n   operation.setContext(({ headers = {} }) => ({\n      headers: {\n         ...headers,\n         Authorization: 'Bearer ' + Cookies.get('jwt') || null\n      }\n   }))\n\n   return forward(operation)\n})\n\nconst client = new ApolloClient({\n   // uri: 'https://data-labelling-server.herokuapp.com/graphql',\n   link: concat(authMiddleware, link),\n   cache: new InMemoryCache(),\n   credentials: 'include'\n})\n\nReactDOM.render(\n   <React.StrictMode>\n      <ApolloProvider client={client}>\n         <Provider store={store}>\n            <App />\n         </Provider>\n      </ApolloProvider>\n   </React.StrictMode>,\n   document.getElementById('root')\n)"],"sourceRoot":""}